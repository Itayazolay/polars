var searchIndex = new Map(JSON.parse('[\
["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add","add","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter","amortized_iter_with_name","amortized_iter_with_name","any","any_kleene","append","apply","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_amortized_generic","apply_amortized_same_type","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values_generic","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arg_unique","arithmetic","as_array","as_binary","as_binary","as_list","as_ref","as_ref_dtype","as_string","as_string","binary_zip_and_apply_amortized","bitand","bitand","bitand","bitor","bitor","bitor","bitxor","bitxor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","drop_nulls","dtype","effective_metadata","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","explode_and_offsets","explode_and_offsets","extend","fill_null_with_values","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","filter","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iterator_par","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_like","full_null_with_dtype","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples_perfect","gt","gt","gt","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","head","init","init","init_rand","inner_dtype","inner_dtype","into","into","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_no_null_iter","into_series","into_series","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","max","max","max_reduce","max_reduce","max_reduce","max_reduce","mean","mean","median","median","median","median_reduce","median_reduce","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","min_reduce","min_reduce","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_compute_len","new_with_dims","none_to_nan","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","object","offsets","offsets","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","rem","rem","rem","rem","remainder","rename","reverse","reverse","reverse","reverse","reverse","reverse","reverse","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","scatter","scatter","scatter_single","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","scatter_with","set","set","set","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shrink_to_fit","slice","sort","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","sort_with","std","std_reduce","std_reduce","std_reduce","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_amortized_generic","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unique","unique","unique","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_option","append_option","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_value","append_value","append_value","append_value","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","fixed_size_list","from","from","from","from","from","from","from","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","init","init","init","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","into","into","into","into","list","new","new","new","new","new","new","new","new","new","new","new","new_with_values_type","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","StructIter","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","into_iter","into_iter","into_iter","into_iter","new","new","next","next","next","next","next_back","next_back","next_back","par","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","ENABLED","EXTENSIVE_USE","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","Keep","LOG","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","New","SORTED","SORTED_ASC","SORTED_DSC","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","extend","extend","extensive_use","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_max_value","get_min_value","get_sorted_flag","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value_opt","merge","min_value","min_value_opt","not","not","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","__clone_box","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","descending","descending","drop","drop","drop","eq","eq","eq","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","fmt","fmt","from","from","from","from","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","hash","hash","init","init","init","into","into","into","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","maintain_order","max","mean","median","min","min_max","multithreaded","multithreaded","n_unique","new","new","new_from_index","not_equal","not_equal_missing","nulls_last","nulls_last","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","var","vzip","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_apply_fields","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","append","append","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_borrowed","as_date_iter","as_datetime_iter","as_ref","as_ref","as_ref_dtype","as_slice","as_time_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","build_local","call_categorical_merge_operation","cast","cast","cast_leaf","cast_time_unit","cast_time_unit","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","chunks","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","drain_iter_and_finish","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","field_by_name","fields","fields_mut","find","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_owned","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","full_null","full_null","get","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_categories","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_optional","get_rev_map","get_shape","get_str","get_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","hour","hours","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_empty","is_empty","is_enum","is_enum","is_float","is_float","is_global","is_integer","is_integer","is_known","is_list","is_local","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter","iter_str","last","leaf_dtype","len","len","len","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","month_end","month_end","month_start","month_start","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","name","name","name","name","nanosecond","nanoseconds","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_logical","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","null_count","parse_from_str_slice","parse_from_str_slice","partial_cmp","partial_cmp","physical","precision","rechunk","ref_field","register_value","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","rename","round","round","rows_encode","same_src","scale","second","seconds","set_name","set_time_unit","set_time_unit","set_time_zone","size_hint","sort","sort_with","strftime","strftime","strftime","strict_cast","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","time_unit","time_unit","time_zone","to_arrow","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","tot_eq","total_null_count","truncate","truncate","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unnest","update","uses_lexical_ordering","value","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_validity_typed","zero","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","constants","context","context_trace","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","feature_gated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_warning_function","init","init","init","into","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","lazy","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Date","Datetime","Duration","Float32","Float32","Float64","Float64","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Null","Null","Row","String","String","Struct","Time","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","Abs","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","Any","Any","Any","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","Backward","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","Binary","Binary","Binary","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","BinaryExpr","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","Boolean","Boolean","Boolean","Boolean","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","Both","Bounds","BoundsIter","Brotli","BrotliLevel","C","Cache","Cast","CastTimeUnit","CatIter","Categorical","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","ColumnNotFound","Columns","Columns","Combine","CommentPrefix","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","Count","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","DataPoint","DataType","Date","Date","Date","Date","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","Datetime","Datetime","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeType","Day","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","Duration","Duration","Duration","Duration","Duration","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","Earliest","EndsWith","Enum","Enum","Eq","EqValidity","Err","Exclude","Excluded","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","Field","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","Filter","Find","First","First","First","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float","Float16","Float32","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","Forward","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","HashMap","Head","HexEncode","Higher","Hour","IDX_DTYPE","INTEGER_RE","IO","IR","Idx","Idx","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","Implode","InProcessQuery","IndexColumn","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8","Int8Chunked","Int8Type","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLastDistinct","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsoYear","Item","Join","Join","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","Last","Last","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","Left","Left","Left","Left","Left","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","Linear","List","List","List","List","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","Literal","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","Max","Max","Max","MaxBound","MaxHorizontal","Mean","Mean","Mean","MeanHorizontal","Median","Median","MeltArgs","Microsecond","Microsecond","Microseconds","Midpoint","Millennium","Millisecond","Millisecond","Milliseconds","Min","Min","Min","Min","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","Multiply","NULL","NUnique","NUnique","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","Nanosecond","Nanoseconds","Native","Nearest","Nearest","Nearest","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","None","None","None","None","None","Not","NotEq","NotEqValidity","Nth","Null","Null","Null","Null","Null","Null","Null","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","Operator","OptState","Or","Ordinal","OrdinalDay","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","PathIterator","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","Plus","PolarsArray","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsMonthEnd","PolarsMonthStart","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","PrimitiveChunkedBuilder","Quantile","Quantile","QuantileAggSeries","QuantileInterpolOptions","Quarter","QuoteStyle","Raise","Raise","Random","Random","Range","Range","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Replace","ReplaceTimeZone","Reshape","RevMapping","Reverse","Reverse","Right","Right","Right","Right","Right","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Round","Round","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SQLInterface","SQLSyntax","Saturday","Scalar","Scalar","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaRef","SearchSortedSide","Second","Second","Select","Selector","SerReader","SerWriter","SerializeOptions","Series","Series","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","Slice","Slice","Slice","Slice","SlicedArray","SlicedGroups","Snappy","Some","Some","Sort","Sort","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","Std","Str","StrCat","String","String","String","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","Struct","Struct","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructNameSpace","StructOwned","SubPlan","Sum","Sum","SumHorizontal","Sunday","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","Time","Time","Time","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","UdfSchema","Uncompressed","Union","Union","UnionArgs","Unique","UniqueKeepStrategy","Unknown","Unknown","UnknownKind","UpperBound","Uppercase","UserDefinedFunction","Utf8","Utf8","Utf8View","ValueCounts","ValueIterT","ValueT","Var","Var","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","Window","WindowBound","WindowMapping","WindowType","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_finish_left_join","_full_join_from_series","_join_suffix_name","_left_join_from_series","_split_at_unchecked","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","abs","add","add","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","all","all_horizontal","allocator","allow_parallel","allow_parallel","allows_predicate_pushdown","allows_projection_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","append_null","append_opt_series","append_option","append_series","append_value","apply","apply","apply","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_min","arg_sort","arg_sort","arg_sort","arg_sort_by","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_where","args","args","arity","arr","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array","arrow_schema","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","as_ref","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","assume_init","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","batched","batched","batched","batched","batched_borrowed","binary","binary","binary_expr","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","boxed","builder","cache","cache","cache","cache","call","call","call_categorical_merge_operation","call_udf","call_udf","call_unchecked","cancel","cast","cast","cast","cast","cast","cast","cast_all","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cat","cat","cause","cbrt","ceil","ceil","center","century","check_bound","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","clip","clip_max","clip_max","clip_min","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_inner","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","closed_window","cloud","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","cmp","cmp","coalesce","coalesce","coalesce","coalesce","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","compare","compression","compression","compute_schema","concat","concat","concat_expr","concat_impl","concat_impl","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","contains","contains","contains","contains","contains_chunked","contains_chunked","contains_literal","convert_inner_type","convert_to_unsigned_index","count","count","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","create_writer","create_writer","created_by","cross_join","cross_join","cross_join_dfs","cum_count","cum_count","cum_fold_exprs","cum_max","cum_max","cum_min","cum_min","cum_prod","cum_prod","cum_reduce_exprs","cum_sum","cum_sum","cumulative_eval","data_pagesize_limit","data_type","data_type","data_type","datatypes","date_format","date_ranges","datetime","datetime","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","day","day","day","days","days","days","days_only","ddof","ddof","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_arrays","default_join_ids","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","descending","descending","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","df","diagonal","diff","diff","diff","display","distinct_count","distinct_count","div","div","divide","dot","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","drop_nulls","dst_offset","dt","dt","dtype","dtype","dtype","dtype_col","dtype_cols","dtype_overwrite","duration","eager","eager","empty","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_data_type","ensure_is_constant_duration","ensure_sorted_arg","eol_char","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","every","exact","exclude","exclude_dtype","execute","explain","explode","explode","explode","explode_and_offsets","expr","extend_constant","extension","extension","extract","extract","extract_all","extract_all_many","extract_groups","fast_explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","field","field","field_by_index","field_by_name","field_by_names","fields","fields","file_caching","file_caching","fill_nan","fill_nan","fill_null","fill_null","fill_null","fill_null_with_strategy","fill_null_with_values","filter","filter","filter","filter","filter","find","find_chunked","find_literal","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","finish_with_scan_ops","finishes_this_batch","first","first","first","first","fixed_size_list","flatten","float_precision","float_sorted_arg_max","float_type","floor","floor","floor_div","floor_div_series","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","fmt_str","fn_params","fn_params","fold_exprs","force_parallel","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","from_iter_trusted_length","from_iter_utf8_trusted_len","from_iter_values","from_par_iter","from_par_iter","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_type","from_vec","from_vec","from_zeroable_vec","full","full","full","full","full_join","full_join","full_null","full_null","fun","function_expr","function_with_options","gather","gather","gather_every","ge","get","get","get","get","get","get","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","get_field","get_field","get_fields","get_fields_lens","get_full","get_metadata","get_mut","get_mut_unchecked","get_names","get_names","get_names","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_sequential_row_statistics","get_unchecked","get_unchecked","get_unchecked","glob","glob","glob","group_by","group_by_dynamic","group_by_dynamic","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","gt","gt","gt_eq","gt_eq","has_header","has_validity","has_validity","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_join_inner","hash_join_outer","head","head","head","hex_decode","hex_encode","hive_options","hor_str_concat","hour","hour","hour","hour","hours","hours","how","how","id_vars","idx","ignore_errors","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","include_bom","include_boundaries","include_header","include_header","increment_strong_count","increment_strong_count_in","index_cols","index_column","index_column","index_of","index_of","index_of","indexes_to_usizes","infer_file_schema","infer_schema_len","infer_schema_len","infer_schema_length","infer_schema_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_array","inner_join","inner_join","inner_mut","input_fields","insert_at_index","int_range","int_ranges","interpol","interpolate","interpolate","interpolate","interpolate_by","interpolate_by","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_data","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_list_name_space","into_list_name_space","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_series","into_series","into_thrift","into_vec","into_vec","into_vec","is_asof","is_between","is_between","is_cloud_url","is_compressed","is_constant_duration","is_empty","is_empty","is_empty","is_empty","is_finished","is_finite","is_first_distinct","is_first_distinct","is_first_distinct","is_full","is_full_days","is_in","is_in","is_infinite","is_last_distinct","is_last_distinct","is_last_distinct","is_leap_year","is_leap_year","is_leap_year","is_nan","is_not_nan","is_not_null","is_not_null","is_not_null","is_null","is_null","is_null","is_null","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","iso_year","iso_year","iter","iter","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","iter_paths","join","join","join","join","join_asof","join_asof_by","join_builder","join_literal","join_many","join_nulls","join_nulls","json_encode","keep","key_value_metadata","key_value_metadata","label","last","last","last","last","last","lazy","lazy","le","left_by","left_join","left_join","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","len","len","len","len","len","len","limit","limit","limit_reached","line_terminator","list","lit","lit","lit","lit","lit","logical_and","logical_or","logical_plan","logical_plan","low_memory","low_memory","low_memory","low_memory","low_memory","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","lt","lt","lt_eq","lt_eq","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","max","max","max","max","max","max_reduce","max_reduce","max_value","max_value","mean","mean","mean","mean","mean","mean","median","median","median","median","median","median","median","median_reduce","median_reduce","melt","memory_map","memory_map","memory_mapped","merge","merge_dtypes","merge_from_ref","metadata","metadata","method","microsecond","microseconds","microseconds","millennium","milliseconds","milliseconds","min","min","min","min","min","min","min_max","min_periods","min_periods","min_periods","min_reduce","min_reduce","min_value","min_value","minute","minute","minute","minute","minutes","minutes","missing_is_null","mode","mode","month","month","month","month","month_end","month_start","months","months_only","mul","mul","mul","multiply","multithreaded","multithreaded","n_chunks","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_threads","n_threads","n_unique","n_unique","n_unique","n_unique","n_unique","name","name","name","name","name","name","nan_max","nan_min","nan_propagating_aggregate","nanosecond","nanosecond","nanosecond","nanoseconds","nanoseconds","nanoseconds","ne","needs_checks","neg","neg","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_cyclic","new_empty","new_from_index","new_from_index","new_from_str","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","new_paths","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next","next_batches","next_batches","next_batches","nodes","nodes_owned","not","not","not_equal","not_equal_missing","nth","null","null","null","null","null_count","null_count","null_count","null_count","null_count","null_values","nulls_last","nulls_last","num_rows","num_rows","offset","offset","offset","offsets","on","optimize","options","or","ordinal","ordinal","ordinal_day","ordinal_year","otherwise","otherwise","output_schema","over","over_with_options","parallel","parallel","parallel","parse","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","parse_options","parsed_int","partial_cmp","partial_cmp","path","path","path","path","paths","paths","paths","period","period","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","predicate_pushdown","predicate_pushdown","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","projection_pushdown","projection_pushdown","provide","ptr_eq","quantile","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quarter","quarter","quarter","queue","quote_char","quote_char","quote_style","raise_if_empty","rank","rank","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","rem","remainder","remove","rename","rename","rename","rename_fields","repeat","repeat_by","repeat_by","replace","replace","replace","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_time_zone","reserve","reshape","resolve_homedir","return_type","reverse","reverse","reverse","reverse","reverse","reverse","right_by","right_on","rolling","rolling","rolling","rolling_map","rolling_map","rolling_map","rolling_map_float","rolling_max","rolling_max","rolling_max_by","rolling_max_by","rolling_mean","rolling_mean","rolling_mean_by","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min","rolling_min_by","rolling_min_by","rolling_quantile","rolling_quantile","rolling_quantile_by","rolling_quantile_by","rolling_std","rolling_std","rolling_std_by","rolling_std_by","rolling_sum","rolling_sum","rolling_sum_by","rolling_sum_by","rolling_var","rolling_var","rolling_var_by","rolling_var_by","round","round","round","round_ms","round_ns","round_sig_figs","round_sig_figs","round_us","row_estimate","row_estimate","row_group_size","row_groups","row_index","row_index","row_index","row_index","row_index","row_index","row_index","rows_left","rows_right","same_type","same_type","sample_frac","sample_n","sample_size","scan","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_descr","schema_inference","schema_overwrite","schema_with_arenas","search_sorted","second","second","second","second","seconds","seconds","seek","select","select_seq","separator","separator","serialize_options","series","set","set_cached_arena","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_sorted_flag","set_validity","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_remove","shift_remove_index","should_coalesce","shrink_dtype","shrink_to_fit","shrink_to_fit","shuffle","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_json","sink_parquet","skip_rows","skip_rows","skip_rows","skip_rows_after_header","slice","slice","slice","slice","slice","slice","slice","slice","slice_pushdown","slice_pushdown","slice_typed","slice_typed","slice_typed_unchecked","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","sort","sort","sort","sort","sort","sort","sort_by","sort_by_exprs","sort_with","sort_with","source","split","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","std","std","std","std","std","std_reduce","std_reduce","store","str","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","streamable","streaming","streaming","strftime","strict","strict_cast","strings","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","strong_count","struct_","sub","sub","subtract","suffix","suffix","suffix","suffix","suffix_fields","sum","sum","sum","sum","sum","sum","sum_reduce","sum_reduce","super_type","sync_update","tail","tail","tail","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked","take_validity","ternary_expr","then","then","time_format","time_ranges","time_unit","time_unit","time_zone","timestamp","to_alp","to_alp","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","to_dummies","to_field","to_integer","to_list","to_lowercase","to_lowercase","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_supertype","to_supertypes","to_titlecase","to_uppercase","to_uppercase","tolerance","tolerance_str","top_k","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_ragged_lines","truncate_us","truncate_us","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","try_new","try_new","try_new","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_serialize","try_unwrap","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","udf","unique","unique","unique","unique","unique","unique","unique_stable","unique_stable","unique_stable","unique_stable","unnest","unwrap","unwrap_or_clone","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","use_statistics","use_statistics","utf8","validate","validation","validity","validity","value","value_counts","value_counts","value_name","value_unchecked","value_vars","values","values_iter","values_iter","var","var","var","var","var","var","var_reduce","var_reduce","variable_name","vec_hash","vec_hash_combine","version","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","week","week","week","weekday","weekday","weekday","weekday","weeks","weeks","weeks_only","weights","when","when","when","window_size","window_size","window_size","with","with_ambiguous","with_batch_size","with_batch_size","with_batch_size","with_cache","with_capacity","with_capacity","with_capacity","with_chunk_size","with_chunk_size","with_cloud_options","with_cluster_with_columns","with_coalesce","with_column","with_column","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns_seq","with_comment_prefix","with_comment_prefix","with_compression","with_compression","with_compression","with_compression","with_compression","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","with_decimal_comma","with_dtype","with_dtype_overwrite","with_dtype_overwrite","with_encoding","with_encoding","with_eol_char","with_eol_char","with_extension","with_extension","with_fields","with_float_precision","with_fractional_seconds","with_glob","with_has_header","with_has_header","with_hive_partition_columns","with_hms","with_hms","with_hour","with_hours","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_infer_schema_length","with_json_format","with_json_format","with_line_terminator","with_low_memory","with_low_memory","with_metadata","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","with_missing_is_null","with_month","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_threads","with_n_threads","with_nanoseconds","with_null_value","with_null_values","with_null_values","with_optimizations","with_parse_options","with_path","with_path","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_pl_flavor","with_pl_flavor","with_predicate","with_predicate_pushdown","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection_pushdown","with_quote_char","with_quote_char","with_quote_char","with_quote_style","with_raise_if_empty","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_group_size","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_same_dtype","with_sample_size","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_schema_overwrite","with_schema_overwrite","with_second","with_seconds","with_separator","with_separator","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows","with_skip_rows_after_header","with_skip_rows_after_header","with_slice_pushdown","with_statistics","with_streaming","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","with_truncate_ragged_lines","with_try_parse_dates","with_try_parse_dates","with_type_coercion","with_validity","with_validity","with_validity_typed","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_varint","write_vectored","xor","year","year","year","year","zip","zip_with","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","selection","slice","sort_options","version","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","limit","method","n","name","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","include_nulls","groups","rolling","data_type","high","low","error","error","msg","msg","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","day","days","fn_params","hour","hour","hours","is_leap_year","is_leap_year","iso_year","iso_year","microseconds","milliseconds","min_periods","minute","minute","minutes","month","month","nanosecond","nanosecond","nanoseconds","ordinal","ordinal","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","quarter","quarter","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","second","seconds","string","week","week","weekday","weekday","window_size","year","year","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","parse_bytes","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_from_with_unit","try_from_with_unit","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from_str","from_untyped_config","hash","init","init","into","into","max_retries","options","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","max_retries","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","dtype","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","get_unchecked","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","new","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","ExtendConstant","Extract","ExtractAll","ExtractGroups","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","Quarter","Random","Range","Rank","RepeatBy","Replace","Replace","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","ignore_nulls","decimals","digits","has_max","has_min","limit","limit","method","n","name","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","slice_typed","slice_typed_unchecked","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","Ascending","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","as_ref","as_series","as_series","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","cast_with_options","categorical","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","date","datetime","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop_nulls","dtype","duration","eq","eq","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_object","get_object_chunked_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_sorted_flag","iter","len","limit","list","lit","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","mul","mul","mul","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_array","reshape_list","reverse","reverse","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","std","std_reduce","str","str_value","strict_cast","struct_","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","time","to_arrow","to_dummies","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_add_owned","try_div","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_mul","try_mul_owned","try_rem","try_set_metadata","try_sub","try_sub_owned","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique_stable","unpack","unstable","var","var_reduce","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","add_to","checked","div","divide","divide","mul","multiply","multiply","rem","remainder","remainder","sub","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array"],"q":[[0,"polars"],[17,"polars::chunked_array"],[817,"polars::chunked_array::arithmetic"],[845,"polars::chunked_array::builder"],[1102,"polars::chunked_array::builder::list"],[1119,"polars::chunked_array::cast"],[1147,"polars::chunked_array::collect"],[1161,"polars::chunked_array::float"],[1163,"polars::chunked_array::from_iterator_par"],[1167,"polars::chunked_array::iterator"],[1237,"polars::chunked_array::iterator::par"],[1239,"polars::chunked_array::metadata"],[1470,"polars::chunked_array::object"],[1545,"polars::chunked_array::object::builder"],[1568,"polars::chunked_array::object::registry"],[1596,"polars::chunked_array::ops"],[1798,"polars::chunked_array::ops::arity"],[1833,"polars::chunked_array::ops::float_sorted_arg_max"],[1835,"polars::chunked_array::ops::gather"],[1838,"polars::chunked_array::ops::search_sorted"],[1867,"polars::chunked_array::ops::sort"],[1874,"polars::chunked_array::ops::sort::arg_bottom_k"],[1875,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1882,"polars::chunked_array::ops::sort::options"],[1895,"polars::chunked_array::temporal"],[1902,"polars::chunked_array::temporal::conversion"],[1905,"polars::datatypes"],[3285,"polars::datatypes::categorical"],[3302,"polars::datatypes::categorical::revmap"],[3308,"polars::datatypes::categorical::string_cache"],[3327,"polars::docs"],[3329,"polars::error"],[3417,"polars::error::PolarsError"],[3421,"polars::error::constants"],[3424,"polars::frame"],[3677,"polars::frame::explode"],[3706,"polars::frame::group_by"],[3941,"polars::frame::group_by::GroupByMethod"],[3942,"polars::frame::group_by::GroupsProxy"],[3944,"polars::frame::group_by::aggregations"],[3957,"polars::frame::group_by::expr"],[3960,"polars::frame::row"],[4067,"polars::functions"],[4069,"polars::prelude"],[9093,"polars::prelude::AggExpr"],[9100,"polars::prelude::BooleanFunction"],[9103,"polars::prelude::DslPlan"],[9157,"polars::prelude::Expr"],[9192,"polars::prelude::FunctionExpr"],[9213,"polars::prelude::GroupByMethod"],[9214,"polars::prelude::GroupsProxy"],[9216,"polars::prelude::LiteralValue"],[9219,"polars::prelude::PolarsError"],[9223,"polars::prelude::StringFunction"],[9237,"polars::prelude::TemporalFunction"],[9239,"polars::prelude::aggregations"],[9252,"polars::prelude::arity"],[9287,"polars::prelude::array"],[9306,"polars::prelude::binary"],[9322,"polars::prelude::cat"],[9323,"polars::prelude::chunkedarray"],[9390,"polars::prelude::chunkedarray::string"],[9428,"polars::prelude::chunkedarray::string::infer"],[9458,"polars::prelude::cloud"],[9505,"polars::prelude::cloud::options"],[9513,"polars::prelude::datatypes"],[9780,"polars::prelude::datatypes::categorical"],[9797,"polars::prelude::datatypes::categorical::revmap"],[9803,"polars::prelude::datatypes::categorical::string_cache"],[9807,"polars::prelude::datetime"],[9810,"polars::prelude::default_arrays"],[9816,"polars::prelude::dt"],[9868,"polars::prelude::expr"],[9871,"polars::prelude::fixed_size_list"],[9891,"polars::prelude::float_sorted_arg_max"],[9893,"polars::prelude::function_expr"],[10056,"polars::prelude::function_expr::BooleanFunction"],[10059,"polars::prelude::function_expr::FunctionExpr"],[10080,"polars::prelude::function_expr::StringFunction"],[10094,"polars::prelude::function_expr::TemporalFunction"],[10096,"polars::prelude::function_expr::cat"],[10098,"polars::prelude::function_expr::pow"],[10102,"polars::prelude::function_expr::rolling"],[10131,"polars::prelude::function_expr::rolling_by"],[10160,"polars::prelude::gather"],[10163,"polars::prelude::interpolate"],[10167,"polars::prelude::interpolate_by"],[10168,"polars::prelude::mode"],[10169,"polars::prelude::nan_propagating_aggregate"],[10173,"polars::prelude::null"],[10203,"polars::prelude::schema_inference"],[10227,"polars::prelude::search_sorted"],[10233,"polars::prelude::series"],[10255,"polars::prelude::slice"],[10258,"polars::prelude::sort"],[10265,"polars::prelude::sort::arg_bottom_k"],[10266,"polars::prelude::sort::arg_sort_multiple"],[10273,"polars::prelude::sort::options"],[10286,"polars::prelude::strings"],[10340,"polars::prelude::udf"],[10346,"polars::prelude::utf8"],[10350,"polars::series"],[10764,"polars::series::arithmetic"],[10785,"polars::series::arithmetic::checked"],[10791,"polars::series::ops"],[10817,"polars::series::unstable"],[10841,"dyn_clone::sealed"],[10842,"polars_core::datatypes"],[10843,"polars_core::chunked_array"],[10844,"num_traits"],[10845,"num_traits::cast"],[10846,"polars_core::series"],[10847,"polars_error"],[10848,"core::result"],[10849,"polars_core::series::arithmetic::borrowed"],[10850,"polars_core::frame::group_by::proxy"],[10851,"polars_core::chunked_array::object"],[10852,"core::option"],[10853,"polars_arrow::array"],[10854,"alloc::boxed"],[10855,"core::iter::traits::iterator"],[10856,"polars_core::chunked_array::list::iterator"],[10857,"core::ops::function"],[10858,"core::marker"],[10859,"alloc::borrow"],[10860,"polars_core::series::unstable"],[10861,"polars_core::datatypes::dtype"],[10862,"alloc::string"],[10863,"polars_core::chunked_array::ops::sort::options"],[10864,"polars_core::chunked_array::cast"],[10865,"polars_core::series::arithmetic::borrowed::checked"],[10866,"core::slice::iter"],[10867,"core::iter::adapters::map"],[10868,"alloc::vec"],[10869,"polars_core::chunked_array::metadata"],[10870,"core::iter::traits::double_ended"],[10871,"polars_arrow::offset"],[10872,"core::fmt"],[10873,"core::iter::traits::collect"],[10874,"polars_utils::iter::fallible"],[10875,"polars_arrow::bitmap::immutable"],[10876,"core::borrow"],[10877,"polars_core::chunked_array::from_iterator"],[10878,"core::convert"],[10879,"polars_arrow::pushable"],[10880,"rayon::iter"],[10881,"polars_arrow::trusted_len"],[10882,"polars_core::datatypes::any_value"],[10883,"polars_core::chunked_array::logical"],[10884,"polars_core::datatypes::time_unit"],[10885,"core::iter::traits::exact_size"],[10886,"polars_core::series::series_trait"],[10887,"polars_core::chunked_array::iterator"],[10888,"alloc::sync"],[10889,"core::ops::range"],[10890,"polars_core::datatypes::field"],[10891,"polars_arrow::legacy::kernels::rolling::no_nulls"],[10892,"polars_core::chunked_array::ops::rolling_window"],[10893,"polars_ops::chunked_array::scatter"],[10894,"polars_utils::index"],[10895,"ahash::random_state"],[10896,"polars_utils::hashing"],[10897,"ndarray::data_repr"],[10898,"ndarray::dimension::dim"],[10899,"ndarray"],[10900,"either"],[10901,"core::any"],[10902,"polars_core::chunked_array::arithmetic::numeric"],[10903,"polars_core::chunked_array::builder::list::anonymous"],[10904,"polars_core::chunked_array::builder::list::boolean"],[10905,"polars_core::chunked_array::builder::list::primitive"],[10906,"polars_core::chunked_array::builder::list"],[10907,"polars_core::chunked_array::builder"],[10908,"polars_core::chunked_array::builder::list::binary"],[10909,"polars_core::chunked_array::builder::list::null"],[10910,"polars_core::chunked_array::builder::string"],[10911,"polars_arrow::array::binview"],[10912,"polars_core::chunked_array::builder::boolean"],[10913,"polars_core::chunked_array::builder::null"],[10914,"polars_core::chunked_array::builder::primitive"],[10915,"core::clone"],[10916,"polars_core::series::implementations::null"],[10917,"core::hash"],[10918,"polars_core::chunked_array::collect"],[10919,"polars_core::chunked_array::float"],[10920,"polars_core::chunked_array::from_iterator_par"],[10921,"polars_arrow::array::boolean"],[10922,"polars_arrow::array::fixed_size_list"],[10923,"polars_core::chunked_array::metadata::env"],[10924,"bitflags::iter"],[10925,"std::fs"],[10926,"std::sync::mutex"],[10927,"polars_arrow::datatypes"],[10928,"polars_arrow::bitmap::utils::iterator"],[10929,"polars_arrow::bitmap::utils::zip_validity"],[10930,"polars_core::chunked_array::object::builder"],[10931,"polars_core::chunked_array::object::registry"],[10932,"polars_core::chunked_array::ops"],[10933,"polars_arrow::legacy::array::slice"],[10934,"polars_core::chunked_array::ops::arity"],[10935,"polars_arrow::array::static_array"],[10936,"core::error"],[10937,"polars_arrow::array::primitive"],[10938,"polars_core::chunked_array::ops::search_sorted"],[10939,"polars_core::utils"],[10940,"polars_row::row"],[10941,"chrono::naive::datetime"],[10942,"chrono_tz::timezones"],[10943,"chrono::naive::time"],[10944,"polars_core::chunked_array::logical::struct_"],[10945,"polars_core::chunked_array::logical::categorical"],[10946,"polars_core::chunked_array::logical::categorical::builder"],[10947,"polars_arrow::array::static_array_collect"],[10948,"bytemuck::zeroable"],[10949,"polars_core::chunked_array::logical::categorical::revmap"],[10950,"polars_core::chunked_array::logical::categorical::merge"],[10951,"polars_arrow::types"],[10952,"polars_arrow::datatypes::physical_type"],[10953,"chrono::time_delta"],[10954,"chrono::naive::date"],[10955,"smartstring::config"],[10956,"smartstring"],[10957,"core::cmp"],[10958,"polars_core::frame"],[10959,"polars_core::chunked_array::logical::categorical::string_cache"],[10960,"polars_error::warning"],[10961,"planus::errors"],[10962,"regex::error"],[10963,"std::io::error"],[10964,"polars_parquet::parquet::error"],[10965,"alloc::collections"],[10966,"simdutf8::basic"],[10967,"polars_core::schema"],[10968,"polars_core::series::from"],[10969,"hashbrown::set"],[10970,"polars_arrow::datatypes::schema"],[10971,"polars_core::frame::row"],[10972,"polars_core::frame::group_by"],[10973,"polars_time::group_by::dynamic"],[10974,"polars_lazy::frame"],[10975,"polars_core::frame::explode"],[10976,"polars_core::chunked_array::ndarray"],[10977,"polars_arrow::array::struct_"],[10978,"polars_arrow::record_batch"],[10979,"polars_time::windows::duration"],[10980,"polars_utils::idx_vec"],[10981,"rayon::iter::plumbing"],[10982,"polars_plan::logical_plan::aexpr"],[10983,"polars_core::frame::group_by::into_groups"],[10984,"core::iter::adapters::copied"],[10985,"core::iter::adapters::zip"],[10986,"polars_utils::float"],[10987,"polars_arrow::types::native"],[10988,"polars_core::frame::group_by::aggregations::agg_list"],[10989,"polars_core::frame::group_by::aggregations"],[10990,"polars_core::frame::group_by::expr"],[10991,"polars_core::frame::row::av_buffer"],[10992,"polars_utils::arena"],[10993,"polars_plan::logical_plan::alp"],[10994,"polars_ops::frame::join::hash_join"],[10995,"polars_ops::frame::join::args"],[10996,"polars_ops::chunked_array::gather::chunked"],[10997,"polars_ops::frame"],[10998,"polars_io::csv::read::reader"],[10999,"polars_io::predicates"],[11000,"polars_io::mmap"],[11001,"polars_plan::dsl::expr"],[11002,"core::alloc"],[11003,"polars_plan::logical_plan::anonymous_scan"],[11004,"polars_lazy::scan::ndjson"],[11005,"polars_lazy::scan::anonymous_scan"],[11006,"polars_plan::dsl::expr_dyn_fn"],[11007,"polars_plan::logical_plan::visitor"],[11008,"polars_plan::dsl::function_expr"],[11009,"polars_ops::series::ops::arg_min_max"],[11010,"polars_plan::dsl::array"],[11011,"polars_plan::dsl::list"],[11012,"polars_plan::dsl::function_expr::schema"],[11013,"polars_io::ipc::ipc_stream"],[11014,"std::io"],[11015,"polars_ops::chunked_array::binary"],[11016,"polars_time::chunkedarray::string"],[11017,"std::os::fd::owned"],[11018,"polars_ops::chunked_array::list"],[11019,"std::os::fd::raw"],[11020,"polars_ops::series::ops"],[11021,"polars_ops::chunked_array::strings"],[11022,"core::mem::maybe_uninit"],[11023,"polars_ops::chunked_array::strings::namespace"],[11024,"polars_io::csv::read::read_impl::batched"],[11025,"polars_io::csv::write::writer"],[11026,"polars_io::ipc::write"],[11027,"polars_io::parquet::read::reader"],[11028,"polars_io::parquet::read::read_impl"],[11029,"polars_io::parquet::write::writer"],[11030,"polars_io::parquet::write::batched_writer"],[11031,"polars_plan::dsl::binary"],[11032,"polars_plan::dsl::udf"],[11033,"polars_lazy::frame::exitable"],[11034,"hashbrown::map"],[11035,"polars_plan::dsl::cat"],[11036,"polars_ops::series::ops::round"],[11037,"polars_time::series"],[11038,"polars_time::chunkedarray::rolling_window"],[11039,"polars_time::windows::bounds"],[11040,"polars_lazy::scan::csv"],[11041,"polars_time::windows::group_by"],[11042,"polars_lazy::scan::ipc"],[11043,"polars_lazy::scan::parquet"],[11044,"polars_time::windows::window"],[11045,"polars_io::csv::read::options"],[11046,"polars_io::csv::write::options"],[11047,"polars_io::ipc::ipc_file"],[11048,"polars_io::json"],[11049,"polars_io::parquet::read::options"],[11050,"polars_ops::frame::join::asof"],[11051,"polars_io::parquet::write::options"],[11052,"polars_ops::series::ops::interpolation::interpolate"],[11053,"polars_ops::series::ops::is_between"],[11054,"polars_ops::series::ops::rank"],[11055,"polars_plan::logical_plan"],[11056,"polars_plan::dsl::arity"],[11057,"polars_plan::dsl::function_expr::boolean"],[11058,"polars_plan::dsl::function_expr::cat"],[11059,"polars_plan::dsl::function_expr::datetime"],[11060,"polars_plan::dsl::function_expr::pow"],[11061,"polars_plan::dsl::function_expr::strings"],[11062,"polars_plan::dsl::functions::temporal"],[11063,"polars_plan::dsl::options"],[11064,"polars_plan::frame::opt_state"],[11065,"polars_plan::logical_plan::lit"],[11066,"polars_plan::logical_plan::options"],[11067,"polars_parquet::arrow::write"],[11068,"polars_parquet::parquet::metadata::file_metadata"],[11069,"polars_arrow::legacy::kernels::rolling"],[11070,"polars_arrow::legacy::kernels::time"],[11071,"polars_lazy::scan::file_list_reader"],[11072,"polars_io::cloud::options"],[11073,"polars_parquet::parquet::metadata::column_order"],[11074,"polars_ops::chunked_array::binary::namespace"],[11075,"std::path"],[11076,"polars_io::shared"],[11077,"polars_ops::frame::join::cross_join"],[11078,"polars_lazy::dsl::eval"],[11079,"polars_time::chunkedarray::date"],[11080,"polars_time::chunkedarray::datetime"],[11081,"polars_time::chunkedarray::duration"],[11082,"core::ffi::c_str"],[11083,"core::default"],[11084,"polars_parquet::parquet::metadata::row_metadata"],[11085,"polars_core::series::ops"],[11086,"polars_plan::dsl::dt"],[11087,"polars_ops::series::ops::various"],[11088,"polars_arrow::scalar"],[11089,"polars_lazy::dsl::list"],[11090,"crossterm::command"],[11091,"polars_plan::dsl::struct_"],[11092,"polars_io::ndjson::core"],[11093,"polars_plan::logical_plan::apply"],[11094,"polars_plan::dsl::function_expr::array"],[11095,"polars_plan::dsl::function_expr::struct_"],[11096,"polars_plan::dsl::function_expr::list"],[11097,"polars_plan::dsl::function_expr::binary"],[11098,"polars_plan::dsl::function_expr::range"],[11099,"alloc::ffi::c_str"],[11100,"std::ffi::os_str"],[11101,"polars_parquet::arrow::read::statistics"],[11102,"polars_arrow::array::struct_::mutable"],[11103,"polars_arrow::array::growable::structure"],[11104,"polars_arrow::legacy::array::default_arrays"],[11105,"polars_arrow::buffer::immutable"],[11106,"polars_arrow::array::list"],[11107,"polars_core::named_from"],[11108,"polars_ops::frame::join"],[11109,"polars_arrow::legacy::array"],[11110,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[11111,"polars_time::chunkedarray::time"],[11112,"core::num::nonzero"],[11113,"parquet_format_safe::parquet_format"],[11114,"polars_arrow::array::struct_::iterator"],[11115,"polars_ops::frame::join::asof::groups"],[11116,"polars_ops::chunked_array::list::namespace"],[11117,"polars_plan::dsl::name"],[11118,"polars_io::options"],[11119,"polars_core::chunked_array::ops::aggregate"],[11120,"polars_core::chunked_array::ops::aggregate::quantile"],[11121,"polars_time::month_end"],[11122,"polars_time::month_start"],[11123,"polars_arrow::legacy::index"],[11124,"polars_ops::chunked_array::strings::split"],[11125,"core::pin"],[11126,"core::io::borrowed_buf"],[11127,"parquet_format_safe::thrift::varint::decode"],[11128,"polars_time::chunkedarray::rolling_window::dispatch"],[11129,"polars_time::round"],[11130,"polars_parquet::parquet::metadata::schema_descriptor"],[11131,"polars_core::chunked_array::ops::aggregate::var"],[11132,"polars_plan::dsl::string"],[11133,"polars_ops::series::ops::to_dummies"],[11134,"polars_time::truncate"],[11135,"std::sync::rwlock"],[11136,"polars_io::csv::read::schema_inference"],[11137,"polars_time::upsample"],[11138,"polars_core::hashing::vector_hasher"],[11139,"alloc::collections::btree::map"],[11140,"polars_ops::chunked_array::array::namespace"],[11141,"polars_ops::chunked_array::array"],[11142,"polars_time::chunkedarray::string::patterns"],[11143,"polars_time::chunkedarray::string::infer"],[11144,"polars_arrow::legacy::array::fixed_size_list"],[11145,"polars_plan::dsl::function_expr::rolling"],[11146,"polars_plan::dsl::function_expr::rolling_by"],[11147,"polars_arrow::legacy::array::null"],[11148,"polars_arrow::bitmap::mutable"],[11149,"polars_arrow::array::utf8"],[11150,"polars_arrow::array::binary"],[11151,"polars_core::series::iterator"],[11152,"polars_core"],[11153,"polars_core::chunked_array::iterator::par"],[11154,"polars_core::chunked_array::ops::float_sorted_arg_max"],[11155,"polars_core::chunked_array::ops::gather"],[11156,"polars_core::chunked_array::ops::sort"],[11157,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[11158,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[11159,"polars_core::chunked_array::temporal"],[11160,"polars_core::chunked_array::temporal::conversion"],[11161,"polars_core::chunked_array::temporal::time"],[11162,"polars_core::chunked_array::logical::date"],[11163,"polars_core::chunked_array::logical::datetime"],[11164,"polars_core::chunked_array::logical::decimal"],[11165,"polars_core::chunked_array::logical::duration"],[11166,"polars_core::datatypes::aliases"],[11167,"polars_utils::aliases"],[11168,"polars_core::chunked_array::logical::time"],[11169,"polars_error::constants"],[11170,"polars_core::functions"],[11171,"polars_io::utils"],[11172,"polars_io::parquet::metadata"],[11173,"polars_arrow::legacy::prelude"],[11174,"polars_ops::series::ops::rolling"],[11175,"polars_parquet::parquet::write"],[11176,"polars_ops::frame::join::general"],[11177,"polars_ops::series::ops::abs"],[11178,"polars_plan::dsl::functions::selectors"],[11179,"polars_plan::dsl::functions::horizontal"],[11180,"polars_plan::dsl::functions::arity"],[11181,"polars_plan::dsl"],[11182,"polars_plan::dsl::functions::range"],[11183,"polars_plan::dsl::functions::index"],[11184,"polars_ops::chunked_array"],[11185,"polars_plan::dsl::functions::coerce"],[11186,"polars_plan::dsl::functions::syntactic_sugar"],[11187,"polars_time::base_utc_offset"],[11188,"polars_time"],[11189,"polars_ops::series::ops::clip"],[11190,"polars_io"],[11191,"polars_ops::series::ops::horizontal"],[11192,"polars_lazy::dsl::functions"],[11193,"polars_plan::dsl::functions::concat"],[11194,"polars_ops::series::ops::index"],[11195,"polars_io::csv::read::parser"],[11196,"polars_ops::series::ops::cum_agg"],[11197,"polars_ops::series::ops::diff"],[11198,"polars_time::dst_offset"],[11199,"polars_ops::series::ops::floor_divide"],[11200,"polars_ops::chunked_array::strings::concat"],[11201,"polars_ops::chunked_array::datetime::replace_time_zone"],[11202,"polars_time::date_range"],[11203,"polars_ops::series::ops::interpolation"],[11204,"polars_ops::series::ops::interpolation::interpolate_by"],[11205,"polars_io::csv::read::utils"],[11206,"polars_ops::series::ops::is_first_distinct"],[11207,"polars_ops::series::ops::is_in"],[11208,"polars_ops::series::ops::is_last_distinct"],[11209,"polars_io::parquet::read::utils"],[11210,"polars_ops::series::ops::negate"],[11211,"polars_ops::series::ops::not"],[11212,"polars_ops::series::ops::int_range"],[11213,"polars_plan::dsl::functions::repeat"],[11214,"polars_ops::chunked_array::repeat_by"],[11215,"polars_ops::series::ops::replace"],[11216,"polars_io::csv::read"],[11217,"polars_ops::chunked_array::strings::strip"],[11218,"polars_time::chunkedarray"],[11219,"polars_io::cloud"],[11220,"polars_ops::chunked_array::mode"],[11221,"polars_ops::chunked_array::nan_propagating_aggregate"],[11222,"polars_arrow::legacy::array::utf8"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,96,96,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,96,6,96,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,0,6,6,6,6,6,6,96,6,96,6,6,6,6,6,6,6,96,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,96,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,96,6,6,6,6,96,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,96,6,6,96,6,6,96,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,96,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,146,147,148,135,135,136,137,138,138,139,140,135,136,141,142,137,143,138,144,146,147,148,135,135,139,138,144,140,139,135,136,141,142,137,143,138,138,141,142,140,144,146,148,141,142,135,136,141,142,137,143,138,144,146,147,148,135,136,141,142,137,143,138,144,146,147,148,138,144,146,147,148,144,146,147,148,135,136,135,136,141,142,137,143,138,144,146,147,148,135,136,141,142,137,143,138,144,146,147,148,135,136,141,142,137,143,138,144,146,147,148,141,142,137,138,139,141,142,137,138,139,140,135,136,143,139,144,144,146,147,148,0,135,136,141,142,137,143,138,144,146,147,148,151,151,151,151,0,135,136,141,142,137,143,138,144,146,147,148,141,142,137,138,139,135,136,141,142,137,143,138,144,146,147,148,0,135,136,141,142,137,143,138,144,146,147,148,138,140,146,147,148,144,146,147,148,135,136,141,142,137,143,138,144,146,147,148,135,136,141,142,137,143,138,144,146,147,148,135,136,141,142,137,143,138,144,146,147,148,135,136,141,142,137,143,138,144,146,147,148,0,0,0,0,0,0,0,0,139,139,139,138,139,139,139,0,139,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,153,154,153,154,154,154,153,154,153,154,154,154,0,155,0,0,156,157,0,0,0,0,0,159,161,162,163,159,161,162,163,159,161,162,163,159,161,162,163,159,161,162,163,159,161,162,163,159,161,162,163,159,161,162,163,159,161,162,163,159,161,159,161,162,163,159,161,163,0,159,161,163,159,161,162,163,159,161,162,163,159,161,162,163,159,161,162,163,0,0,170,58,56,164,164,56,78,170,164,56,56,0,0,0,0,0,0,170,56,78,78,58,164,56,78,56,78,56,78,56,78,56,78,56,78,56,56,78,78,56,78,56,78,58,170,164,56,78,58,170,164,56,78,58,164,56,78,58,164,56,78,165,56,78,56,78,58,56,78,58,170,164,56,78,58,170,164,56,78,56,78,164,58,58,58,170,164,56,78,56,78,164,56,78,56,78,164,58,58,58,58,58,58,58,164,56,56,56,56,56,78,78,78,78,78,58,170,164,56,78,56,78,56,56,78,78,56,78,56,78,56,78,56,78,58,58,78,58,58,58,78,58,170,164,56,78,56,78,56,78,56,78,58,170,164,56,78,56,78,56,78,58,56,78,58,58,58,56,78,56,78,164,164,58,58,58,58,58,56,78,56,78,56,78,58,58,78,58,58,58,58,58,58,78,58,58,56,78,56,78,56,78,58,164,56,78,56,78,58,170,164,56,78,58,170,164,56,78,58,170,164,56,78,56,78,58,170,164,56,78,165,0,0,0,0,171,171,171,171,171,171,79,171,171,171,171,0,171,171,171,171,171,171,171,79,79,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,0,171,171,171,171,171,171,171,79,171,171,171,171,171,171,171,171,171,79,23,171,171,171,171,171,171,171,171,171,171,171,0,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,0,0,0,0,178,178,178,179,179,179,179,179,179,179,179,0,0,0,179,179,0,179,0,178,179,179,179,179,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,186,181,0,0,187,186,186,186,186,186,579,186,0,0,579,0,0,186,45,47,186,181,182,182,181,181,183,183,184,0,45,47,186,45,47,186,185,185,185,45,47,186,45,47,186,45,47,45,47,186,45,47,186,45,47,45,47,186,45,47,186,187,187,45,45,45,47,47,47,188,188,0,189,190,0,45,47,186,45,45,47,47,186,0,191,192,0,193,193,187,187,45,47,186,45,47,186,45,47,186,194,195,187,187,45,47,196,196,197,196,196,45,47,184,45,47,198,187,187,45,47,188,197,199,199,200,201,202,202,0,202,203,204,205,205,0,183,183,206,196,207,208,209,45,47,186,45,47,186,45,47,186,45,47,186,184,206,45,47,186,45,47,45,47,45,47,47,45,47,47,45,47,0,210,0,215,213,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,217,217,217,0,217,0,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,0,217,217,217,217,217,0,0,0,0,0,205,205,0,0,0,0,0,0,0,0,0,0,0,45,47,45,47,45,47,45,47,205,205,0,0,0,0,0,0,0,0,0,0,240,0,76,42,33,0,0,0,0,0,0,0,76,42,172,0,42,0,0,76,0,172,76,42,172,0,0,0,76,42,0,0,0,0,0,0,0,0,76,42,172,172,0,0,76,42,0,0,76,42,172,172,0,0,172,76,42,172,0,0,76,42,172,0,0,0,172,172,0,240,172,76,42,172,0,0,76,42,172,0,0,0,235,0,33,580,581,0,0,0,0,0,0,240,0,0,76,42,172,0,0,76,42,172,0,0,76,42,172,0,0,76,42,172,0,0,172,33,172,172,172,238,76,42,172,0,0,235,0,0,172,242,86,242,86,242,86,7,76,42,172,0,76,42,0,76,0,0,33,238,33,0,0,0,0,0,0,0,0,0,245,0,0,242,0,240,76,42,0,76,0,76,42,172,0,76,76,42,172,172,0,0,0,0,172,245,0,76,42,172,0,0,76,42,172,0,0,76,42,172,0,0,76,42,172,0,0,172,42,172,0,172,172,212,212,33,212,84,238,235,224,223,98,239,76,240,42,111,86,110,106,46,102,108,103,82,85,41,40,83,92,8,10,44,9,89,87,90,241,172,242,223,224,76,76,224,84,76,21,88,110,106,46,102,108,103,82,85,41,40,8,10,9,223,225,224,225,225,224,226,226,227,227,98,76,84,84,42,111,228,212,84,225,255,84,582,32,5,21,88,22,244,238,235,224,223,98,239,76,240,42,111,86,110,106,46,102,108,103,82,85,41,40,83,92,8,10,44,9,89,87,90,241,172,242,225,255,84,582,32,5,21,88,22,244,238,235,224,223,98,239,76,240,42,111,86,110,106,46,102,108,103,82,85,41,40,83,92,8,10,44,9,89,87,90,241,172,242,42,235,0,237,76,42,84,84,237,84,84,84,84,84,224,223,0,88,110,106,46,102,108,103,82,85,41,40,223,84,238,235,224,223,98,239,76,240,42,111,86,110,106,46,102,108,103,82,85,41,40,83,92,8,10,44,9,89,87,90,241,172,242,84,238,235,224,223,98,239,76,240,42,111,86,110,106,46,102,108,103,82,85,41,40,83,92,8,10,44,9,89,87,90,241,172,242,111,243,243,243,243,42,42,42,0,111,84,244,238,235,76,240,42,172,225,255,84,84,582,32,5,21,88,22,244,238,235,224,223,98,239,76,240,42,111,86,110,106,46,102,108,103,82,85,41,40,83,92,8,10,44,9,89,87,90,241,172,242,225,255,84,84,582,32,5,21,88,22,244,238,235,224,223,98,239,76,240,42,111,86,110,106,46,102,108,103,82,85,41,40,83,92,8,10,44,9,89,87,90,241,172,242,84,21,88,110,106,46,102,108,103,82,85,41,40,225,225,255,84,582,32,5,21,88,22,244,238,235,224,223,223,98,239,76,240,42,111,86,110,106,46,102,108,103,82,85,41,40,83,92,8,10,44,9,89,87,90,241,172,242,237,84,84,84,84,84,224,223,98,76,111,238,76,240,42,42,111,86,172,242,76,224,224,224,223,224,224,224,223,76,76,76,240,240,240,42,42,42,111,111,111,86,86,86,172,172,172,242,242,242,84,223,223,223,235,236,225,244,238,235,239,76,76,240,42,42,111,86,86,172,242,225,255,84,84,84,582,32,5,21,88,22,244,238,235,224,223,98,239,76,76,76,76,76,76,240,42,42,42,42,111,111,111,86,86,110,106,46,102,108,103,82,85,41,40,83,92,8,10,44,9,89,87,90,241,172,172,172,242,42,224,84,84,224,84,84,84,84,84,84,111,224,212,212,212,212,224,223,212,235,84,84,84,84,84,237,224,223,84,84,84,84,84,237,224,223,235,33,5,21,88,22,110,106,46,102,108,103,82,85,41,40,83,92,8,10,44,9,89,87,90,241,235,224,42,76,254,212,224,224,224,223,224,224,224,223,76,240,42,111,86,172,242,76,84,84,225,255,84,582,32,5,21,88,22,244,238,235,224,223,98,239,76,240,42,111,86,110,106,46,102,108,103,82,85,41,40,83,92,8,10,44,9,89,87,90,241,172,242,42,172,225,255,84,582,32,5,21,88,22,244,238,235,224,223,98,239,76,240,42,111,86,110,106,46,102,108,103,82,85,41,40,83,92,8,10,44,9,89,87,90,241,172,242,255,223,84,84,84,84,84,224,223,98,76,42,42,42,76,42,42,224,223,224,42,76,42,235,76,42,42,42,235,42,42,76,42,76,42,76,42,42,42,42,76,42,42,42,42,76,42,172,212,223,224,212,42,235,224,223,224,224,224,223,224,224,224,223,0,0,42,240,224,0,244,84,84,224,84,84,84,84,84,84,84,21,88,110,106,46,102,108,103,82,85,41,40,224,224,223,111,111,84,84,580,581,225,84,84,84,84,84,84,84,84,244,223,98,111,84,255,224,224,224,223,224,224,224,223,224,223,84,84,76,86,224,84,223,223,225,21,88,110,106,46,102,108,103,82,85,41,40,223,84,84,223,235,84,84,84,111,84,84,84,255,224,224,84,84,84,76,84,21,88,110,106,46,102,108,103,82,85,41,40,84,84,84,224,42,111,86,42,86,224,224,224,172,84,238,235,224,223,98,239,76,240,42,111,86,110,106,46,102,108,103,82,85,41,40,83,92,8,10,44,9,89,87,90,241,172,242,42,172,84,84,84,76,42,86,76,223,84,84,226,226,227,227,243,243,243,243,76,225,255,84,582,32,5,21,88,22,244,238,235,224,223,98,239,76,240,42,111,86,110,106,46,102,108,103,82,85,41,40,83,92,8,10,44,9,89,87,90,241,172,242,225,255,84,582,32,5,21,88,22,244,238,235,224,223,98,239,76,240,42,111,86,110,106,46,102,108,103,82,85,41,40,83,92,8,10,44,9,89,87,90,241,172,242,76,42,225,255,84,582,32,5,21,88,22,244,238,235,224,223,98,239,76,240,42,111,86,110,106,46,102,108,103,82,85,41,40,83,92,8,10,44,9,89,87,90,241,172,242,172,224,223,98,224,212,98,224,212,42,212,225,255,84,582,32,5,21,88,22,244,238,235,224,223,98,239,76,240,42,111,86,110,106,46,102,108,103,82,85,41,40,83,92,8,10,44,9,89,87,90,241,172,242,580,581,212,76,0,0,0,0,0,235,0,238,235,238,0,0,236,0,0,0,0,0,235,238,235,238,0,0,260,260,260,260,260,0,260,260,0,260,260,260,260,260,260,260,0,260,0,0,262,17,17,17,17,583,0,17,17,262,17,583,17,0,0,0,17,17,17,17,17,17,17,262,261,262,261,17,262,261,17,0,17,17,262,261,261,17,262,261,17,262,261,17,0,262,261,261,17,17,262,261,261,17,17,17,17,17,17,17,0,262,261,17,262,261,17,0,0,0,0,0,0,0,261,17,262,261,17,262,261,17,262,261,17,262,261,17,584,585,584,585,0,0,0,273,0,273,272,273,273,0,0,272,0,0,272,273,259,259,259,259,259,259,259,259,259,259,259,259,259,284,285,272,273,259,284,285,272,273,259,259,272,273,259,272,273,259,259,259,273,259,284,285,272,273,259,284,285,272,273,259,284,285,272,273,259,259,259,259,259,259,259,259,273,259,259,259,273,273,273,259,0,259,259,259,259,259,259,272,273,259,259,284,285,272,273,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,0,259,259,259,259,273,259,259,259,259,259,259,259,259,259,259,259,259,259,284,285,272,273,259,259,284,285,272,273,259,284,285,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,284,285,259,259,259,259,259,259,259,259,259,259,259,259,0,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,284,285,259,259,259,259,259,259,259,259,259,259,259,259,259,272,273,259,259,259,259,259,259,284,285,272,273,259,259,259,259,259,284,285,272,273,259,284,285,272,273,259,259,259,259,259,259,259,259,259,284,285,272,273,259,259,259,259,259,259,259,0,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,0,297,297,0,0,297,0,0,0,0,0,0,301,20,0,297,0,297,297,297,297,297,297,297,297,297,301,20,0,297,297,297,295,20,277,297,277,0,295,277,20,301,306,299,298,295,20,277,297,301,306,299,298,295,20,277,297,295,20,277,297,295,20,277,297,277,295,20,301,306,299,298,298,295,20,277,297,301,306,299,298,295,20,277,297,277,299,301,306,299,298,295,295,20,277,297,295,20,295,295,295,20,20,20,0,301,295,277,295,295,20,277,297,297,0,301,306,299,298,295,295,295,295,20,20,277,297,297,295,295,295,20,277,277,20,303,277,20,301,306,299,298,295,20,277,297,301,306,299,298,295,20,277,297,20,306,295,295,299,295,295,301,20,295,295,20,277,277,277,301,20,277,277,277,277,277,295,277,306,306,277,295,20,277,277,20,295,20,277,277,20,20,277,277,295,20,277,297,297,301,306,299,298,295,20,277,297,301,306,299,298,295,20,277,297,301,306,299,298,295,20,277,297,20,20,20,277,301,306,299,298,295,20,277,297,586,587,587,0,0,0,0,0,0,0,0,0,0,309,310,310,0,311,311,312,313,0,0,312,313,312,312,312,312,313,312,313,312,313,312,313,312,313,312,313,312,313,0,312,313,313,312,312,313,312,313,312,313,312,313,312,313,276,312,313,313,312,313,276,312,313,276,312,313,276,312,313,276,0,276,312,313,276,312,313,276,312,313,276,276,276,276,276,276,312,312,313,313,276,0,312,313,276,312,313,276,312,313,312,313,276,312,313,0,0,0,312,313,276,312,313,276,312,313,276,312,313,276,312,313,276,0,0,337,325,0,352,325,422,392,392,422,0,395,0,369,325,0,0,0,422,217,240,273,422,0,0,0,337,337,0,434,76,42,33,0,0,337,0,0,0,0,0,0,0,0,0,0,401,0,0,0,337,0,0,0,404,413,0,406,186,337,426,424,0,0,436,76,42,172,0,0,325,337,0,42,0,0,76,0,0,172,337,436,76,42,172,0,0,0,0,0,382,410,0,0,408,0,291,416,325,424,0,337,76,42,0,0,0,0,0,0,0,425,337,424,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,337,0,0,337,400,325,17,404,325,424,0,17,337,426,426,426,17,424,352,297,426,401,0,0,0,0,0,0,0,337,337,337,337,337,424,0,0,0,0,0,416,384,386,0,424,436,76,42,172,172,0,0,436,0,424,76,42,0,0,424,0,0,424,76,42,172,172,0,0,413,0,172,337,416,369,337,337,0,421,325,17,0,424,436,76,42,172,0,0,0,0,0,0,500,426,76,42,369,369,583,325,0,325,433,0,0,0,416,337,172,426,426,426,0,0,0,0,325,0,0,0,0,0,337,0,0,337,416,325,426,352,297,273,172,172,0,436,240,172,436,76,42,172,0,0,436,76,42,172,0,0,337,369,291,406,186,337,386,0,0,0,401,181,325,0,0,325,337,425,0,423,0,235,0,0,416,0,297,0,0,0,0,0,0,433,369,369,408,0,416,416,33,580,581,426,426,114,424,0,0,17,416,301,20,0,0,0,0,0,352,297,0,325,0,0,0,0,0,401,0,436,240,0,0,436,76,42,172,0,0,436,76,42,172,0,0,436,76,42,172,0,0,436,76,42,172,0,0,337,337,0,172,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,422,422,0,422,422,422,0,422,424,422,33,422,422,422,424,187,416,433,0,0,0,0,0,400,0,0,558,0,0,558,0,0,0,400,325,398,0,172,0,172,0,0,172,352,297,273,500,0,0,0,0,0,588,382,384,401,410,217,0,325,426,426,238,0,409,114,434,76,42,172,0,0,0,0,337,0,0,0,0,0,0,0,0,325,0,235,0,369,369,0,390,114,337,426,369,369,408,408,403,403,172,416,413,352,186,297,186,337,352,186,297,337,352,297,0,424,242,86,114,424,424,242,86,413,352,186,297,186,337,369,424,337,369,386,424,391,369,0,352,297,421,392,0,0,297,297,424,242,86,7,406,409,114,395,337,0,395,0,17,0,0,395,382,579,404,410,589,273,422,369,369,325,0,436,76,500,42,172,443,337,0,0,0,0,0,0,76,42,0,76,0,583,186,403,403,0,0,369,413,424,134,17,326,432,0,0,33,0,0,0,0,0,0,0,0,0,238,33,0,0,0,0,0,369,0,0,0,0,0,0,0,0,0,0,0,0,0,0,245,0,337,0,0,352,297,0,0,424,0,500,443,413,337,337,436,337,0,0,0,325,0,337,426,337,424,337,0,426,337,588,382,384,410,217,432,0,337,337,0,0,0,0,0,0,424,337,337,0,0,404,17,17,386,0,134,416,0,0,0,0,17,17,0,0,424,242,416,325,0,0,0,0,436,0,0,0,0,0,0,0,0,337,17,337,337,337,391,416,416,325,426,301,20,0,0,408,579,589,416,325,325,0,0,0,426,426,426,0,425,0,426,0,0,352,297,240,436,436,76,42,0,17,0,0,337,0,0,0,76,0,426,426,426,426,426,426,0,76,42,172,0,0,337,17,0,76,325,352,297,337,386,426,0,337,0,0,325,0,386,424,436,76,42,172,172,0,0,424,0,0,0,172,426,426,0,426,337,424,424,424,424,424,424,424,424,134,245,369,0,424,386,436,76,42,172,0,0,436,76,42,172,0,0,436,76,42,172,0,0,436,76,42,172,0,0,0,408,416,172,0,337,0,42,172,0,337,426,0,390,172,172,337,212,212,352,297,0,0,386,424,424,0,325,0,325,386,0,0,424,369,424,398,186,33,212,408,0,379,278,289,373,286,328,380,294,333,381,382,383,332,384,385,386,387,129,118,388,389,390,391,392,393,394,395,396,397,398,399,319,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,352,325,421,369,335,422,423,424,425,426,337,427,428,429,430,431,432,433,434,371,435,436,437,438,100,439,440,115,291,292,270,247,275,114,441,442,443,0,286,318,318,318,0,318,292,320,320,320,320,321,286,322,0,325,326,325,294,294,327,294,328,325,0,325,0,325,0,100,330,431,331,332,331,331,427,325,286,325,0,325,139,140,139,140,139,140,181,328,325,0,325,182,182,325,325,0,181,181,0,292,338,339,340,325,338,339,340,325,183,325,341,0,183,184,325,341,0,342,431,0,325,226,226,227,227,0,343,331,341,345,332,292,341,292,346,347,347,347,347,100,350,100,100,352,100,228,353,341,212,354,0,347,100,100,0,325,356,356,0,393,322,358,361,363,365,322,0,325,0,341,341,341,375,339,218,330,367,357,322,534,358,342,475,343,476,507,450,361,452,379,558,477,278,478,289,373,286,328,380,294,333,381,382,383,332,384,385,386,340,387,521,479,473,129,364,118,363,365,388,389,390,391,392,393,394,395,543,396,397,398,399,319,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,525,416,417,418,419,420,352,325,421,369,335,422,423,424,425,426,337,427,428,429,430,431,432,433,434,371,435,436,437,438,100,100,462,439,440,115,291,500,292,270,247,275,114,441,442,443,375,339,218,330,367,357,322,534,358,342,475,343,476,507,450,361,452,379,558,477,278,478,289,373,286,328,380,294,333,381,382,383,332,384,385,386,340,387,521,479,473,129,364,118,363,365,388,389,390,391,392,393,394,395,543,396,397,398,399,319,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,525,416,417,418,419,420,352,325,421,369,335,422,423,424,425,426,337,427,428,429,430,431,432,433,434,371,435,436,437,438,100,462,439,440,115,291,500,292,270,247,275,114,441,442,443,286,292,138,286,383,385,430,370,371,0,345,372,371,373,0,341,286,185,325,237,286,185,185,237,325,0,325,100,325,376,325,115,377,292,0,0,0,378,341,378,341,388,0,341,341,0,325,0,325,0,325,379,278,289,373,286,328,380,294,333,381,382,383,332,384,385,386,387,129,118,388,389,390,391,392,393,394,395,396,397,398,399,319,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,352,325,421,369,335,422,423,424,425,426,337,427,428,429,430,431,432,433,434,371,435,436,437,438,100,439,440,115,291,292,270,247,275,114,441,442,443,341,379,278,289,373,286,328,380,294,333,381,382,383,332,384,385,386,387,129,118,388,389,390,391,392,393,394,395,396,397,398,399,319,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,352,325,421,369,335,422,423,424,425,426,337,427,428,429,430,431,432,433,434,371,435,436,437,438,100,439,440,115,291,292,270,247,275,114,441,442,443,379,278,289,0,444,383,385,590,435,294,100,0,330,400,319,0,0,286,0,243,243,243,243,153,154,153,154,154,154,286,0,440,440,388,321,389,294,100,397,407,416,0,356,0,444,381,0,0,0,0,339,448,356,340,270,448,356,356,0,0,286,325,356,356,0,0,318,450,452,440,286,453,453,0,325,0,0,325,0,325,0,325,0,0,325,454,407,292,247,247,0,394,0,0,0,394,0,0,0,0,0,455,456,377,427,457,294,428,294,429,441,389,100,100,450,452,278,289,286,333,383,385,386,388,389,390,393,394,395,397,398,399,319,400,403,404,405,406,407,408,410,415,416,325,335,335,335,427,428,430,431,432,433,435,437,438,100,100,100,100,439,115,291,270,247,275,114,0,0,375,339,218,218,330,367,357,322,534,358,342,475,343,476,507,450,361,452,379,558,477,278,478,289,373,286,328,380,294,333,381,382,383,332,384,385,386,340,387,521,479,473,129,364,118,363,365,388,389,390,391,392,393,394,395,543,396,397,398,399,319,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,525,416,417,418,419,420,352,325,421,369,335,335,422,423,424,425,426,337,427,428,429,430,431,432,433,434,371,435,436,437,438,100,100,462,439,440,115,291,500,292,270,247,275,114,441,442,443,375,339,218,218,330,367,357,322,534,358,342,475,343,476,507,450,361,452,379,558,477,278,478,289,373,286,328,380,294,333,381,382,383,332,384,385,386,340,387,521,479,473,129,364,118,363,365,388,389,390,391,392,393,394,395,543,396,397,398,399,319,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,525,416,417,418,419,420,352,325,421,369,335,422,423,424,425,426,337,427,428,429,430,431,432,433,434,371,435,436,437,438,100,462,439,440,115,291,500,292,270,247,275,114,441,442,443,415,45,47,416,286,286,286,286,416,100,0,277,0,438,0,340,325,416,462,439,326,325,327,325,100,100,100,375,339,218,330,367,357,322,534,358,342,475,343,476,507,450,361,452,379,558,477,278,478,289,373,373,286,286,328,380,294,333,381,382,383,332,384,385,386,340,387,521,479,473,129,364,118,363,365,388,389,390,391,392,393,394,395,543,396,397,398,399,319,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,525,416,417,418,419,420,352,325,421,369,335,422,423,424,425,426,337,427,428,429,430,431,432,433,434,371,435,436,437,438,100,100,462,439,440,115,291,500,292,270,247,275,114,441,442,443,325,286,325,341,0,0,325,237,341,111,0,0,388,0,590,435,439,100,100,389,448,448,0,0,468,389,379,278,289,294,382,384,386,129,388,389,390,391,392,393,394,395,396,397,398,399,319,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,352,325,325,421,369,335,335,422,423,424,425,426,337,429,430,431,432,433,434,436,437,438,100,100,100,462,439,115,291,292,292,270,247,275,114,443,325,187,187,278,278,278,289,289,289,294,294,294,382,382,382,384,384,384,386,386,386,129,129,129,388,388,388,389,389,389,390,390,390,391,391,391,392,392,392,393,393,393,394,394,394,395,395,395,397,397,397,398,398,398,399,399,399,319,319,319,400,400,400,401,401,401,402,402,402,403,403,403,404,404,404,405,405,405,406,406,406,407,407,407,408,408,408,409,409,409,410,410,410,411,411,411,412,412,412,414,414,414,325,325,325,421,421,421,369,369,369,422,422,422,423,423,423,424,424,424,425,425,425,426,426,426,429,429,429,430,430,430,431,431,431,432,432,432,433,433,433,434,434,434,437,437,437,438,438,438,100,100,100,439,439,439,291,291,291,270,270,270,247,247,247,275,275,275,114,114,114,443,443,443,471,278,430,325,325,100,286,286,188,325,188,0,325,450,452,356,118,356,356,356,139,590,435,373,286,373,139,341,473,473,473,292,275,590,435,286,325,0,286,325,325,189,190,341,286,325,275,356,356,356,474,451,140,236,330,322,358,475,343,476,444,361,477,478,381,479,363,365,139,444,381,332,475,364,0,286,340,325,0,325,394,0,335,376,325,325,0,100,345,372,370,379,278,289,380,294,294,382,384,386,129,118,388,389,390,391,392,393,394,395,331,396,397,480,398,399,319,400,401,401,402,403,403,404,405,406,407,408,409,410,411,412,413,414,415,325,325,421,369,369,335,422,422,423,423,424,424,425,425,426,426,337,337,427,428,429,430,431,432,433,434,371,435,436,437,438,100,100,100,462,439,440,115,291,292,270,247,275,114,441,442,443,0,437,379,115,0,330,431,430,0,325,375,339,218,330,367,357,322,534,358,342,475,343,476,507,450,361,452,379,558,477,278,478,289,373,286,286,286,328,380,294,333,381,382,383,332,384,385,386,340,387,521,479,473,129,129,364,118,363,365,388,389,390,391,391,392,393,394,395,543,396,397,398,399,319,319,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,525,416,417,418,419,420,352,325,325,325,325,325,325,325,325,325,325,325,325,325,325,421,369,335,335,335,335,335,335,335,335,335,335,335,422,423,424,425,426,337,337,337,337,337,427,428,429,430,431,432,432,433,434,371,435,436,437,438,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,462,462,439,440,115,291,500,292,292,292,270,270,270,270,270,270,270,247,275,275,114,441,442,443,495,497,498,218,100,270,218,218,100,270,591,591,591,151,591,218,218,591,151,218,100,438,479,100,100,151,151,500,218,218,335,501,212,212,0,191,212,439,286,502,192,212,371,0,325,0,325,325,100,341,339,340,212,325,270,193,237,193,237,270,270,375,286,436,33,387,387,387,458,334,270,292,342,270,363,100,100,506,270,275,341,341,345,387,388,0,480,0,254,212,341,444,381,385,286,509,286,286,0,0,303,187,325,100,187,325,388,341,510,278,289,294,382,384,386,388,389,390,391,392,393,394,395,396,397,398,399,319,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,352,325,421,369,422,423,424,425,426,337,429,430,431,432,433,434,436,437,438,100,439,291,270,247,114,443,512,512,328,340,325,356,356,385,0,513,456,377,427,457,428,330,319,288,129,388,0,0,325,0,358,393,278,358,393,100,100,0,278,289,506,270,275,0,0,478,479,333,388,375,339,218,330,367,357,322,534,358,342,475,343,476,507,450,361,452,379,558,477,278,478,289,373,286,328,380,294,333,381,382,383,332,384,385,386,340,387,521,479,473,129,364,118,363,365,388,389,390,391,392,393,394,395,543,396,397,398,399,319,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,525,416,417,418,419,420,352,325,421,369,335,422,423,424,425,426,337,427,428,429,430,431,432,433,434,371,435,436,437,438,100,462,439,440,115,291,500,292,270,247,275,114,441,442,443,129,139,286,502,118,371,270,0,0,442,0,0,325,0,0,325,375,339,218,330,367,357,322,534,358,342,475,343,476,507,450,361,452,379,558,477,278,478,289,373,286,328,380,294,333,381,382,383,332,384,385,386,340,387,521,479,473,129,364,118,363,365,388,389,390,391,392,393,394,395,543,396,397,398,399,319,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,525,416,417,418,419,420,352,325,421,369,335,422,423,424,425,426,337,427,428,429,430,431,432,433,434,371,435,436,437,438,100,462,439,440,115,291,500,292,270,247,275,114,441,442,443,292,218,100,534,507,325,292,270,515,340,100,100,388,271,100,440,287,534,534,401,0,325,0,0,294,439,341,270,275,364,325,0,194,325,439,294,0,325,325,0,195,325,455,456,377,325,325,0,341,325,0,341,118,325,129,247,0,100,271,468,100,129,403,100,294,455,456,377,212,292,270,270,270,270,270,444,339,286,340,502,518,519,286,520,520,330,319,473,521,440,440,278,0,286,340,212,325,523,286,100,405,286,502,330,134,134,134,0,341,340,325,292,270,275,286,341,364,394,325,0,524,294,525,436,325,325,286,328,332,479,385,388,402,325,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,187,325,100,187,325,393,397,399,407,45,47,0,0,100,286,521,325,0,325,342,342,335,335,325,335,521,335,325,0,325,325,0,342,388,342,342,342,342,436,0,0,0,339,286,340,196,325,527,341,462,439,0,286,340,196,325,341,0,339,286,340,197,325,341,528,341,286,383,396,475,270,0,270,247,275,415,427,457,428,377,457,428,0,339,286,340,196,325,196,379,429,115,527,341,462,439,513,456,377,427,457,428,389,0,325,455,456,377,427,529,530,294,294,326,294,325,327,45,47,341,444,381,332,333,383,385,388,543,358,388,339,340,184,325,341,341,325,333,371,111,247,325,325,0,513,456,377,457,294,428,100,403,294,325,0,0,294,531,325,325,342,580,474,451,581,532,218,330,322,358,342,475,343,476,450,361,452,477,478,294,381,332,387,479,364,363,365,319,335,427,428,371,100,292,270,247,100,292,198,341,391,100,270,0,391,292,381,332,391,100,100,100,100,100,100,100,100,534,507,367,357,364,325,325,0,325,187,187,0,0,129,118,394,341,286,325,462,439,389,45,47,363,440,278,289,387,188,330,286,371,325,455,456,377,377,418,420,543,325,325,385,402,438,294,455,513,456,388,294,294,100,444,381,332,388,444,381,332,278,289,325,100,100,0,0,0,0,325,543,590,435,521,521,0,442,527,325,286,388,590,435,100,100,0,286,197,325,528,341,455,456,377,100,389,394,394,388,537,325,100,100,363,100,100,100,100,444,341,381,332,383,385,388,438,0,199,199,326,325,327,270,341,286,270,473,0,0,325,0,356,325,356,342,356,356,0,270,325,0,371,200,341,339,286,340,325,405,330,509,286,325,201,325,341,325,541,325,541,325,541,325,541,325,325,325,541,325,541,325,541,325,541,325,541,325,541,325,541,325,541,325,541,325,541,325,542,376,325,387,387,376,325,387,590,435,407,440,444,381,332,333,383,385,388,431,431,520,335,325,325,388,331,332,286,286,286,286,544,202,202,475,343,286,332,364,363,331,440,333,388,543,440,0,388,286,0,513,456,377,427,457,428,100,286,286,389,394,393,0,202,286,270,270,363,365,475,343,478,363,474,325,292,203,341,339,286,340,325,204,286,325,270,270,319,325,140,341,325,590,435,286,286,286,286,333,388,437,388,0,341,286,340,325,292,292,319,590,435,205,292,205,292,292,292,292,292,0,183,339,286,340,325,325,286,183,341,100,356,292,292,356,356,0,356,0,356,325,278,448,448,407,339,286,340,206,325,341,547,341,118,325,356,0,356,356,356,356,356,405,288,590,435,377,430,325,0,0,356,0,356,0,356,0,356,0,356,100,325,326,325,327,330,521,319,319,521,0,339,286,340,196,325,527,341,335,100,286,328,340,325,207,341,549,549,341,341,208,341,292,0,417,419,394,0,427,428,427,377,286,416,286,436,340,270,292,209,286,551,321,325,356,339,356,521,129,379,278,289,373,286,328,380,294,333,381,382,383,332,384,385,386,387,129,118,388,389,390,391,392,393,394,395,396,397,398,399,319,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,352,325,421,369,335,422,423,424,425,426,337,427,428,429,430,431,432,433,434,371,435,436,437,438,100,439,440,115,291,292,270,247,275,114,441,442,443,325,342,377,294,401,403,325,369,422,423,424,425,426,337,100,270,438,356,356,521,405,405,286,134,134,134,552,294,294,387,294,387,389,294,387,226,226,227,227,243,243,243,243,153,154,153,154,154,154,375,339,218,330,367,357,322,534,358,342,475,343,476,507,450,361,452,379,558,477,278,478,289,373,286,328,380,294,333,381,382,383,332,384,385,386,340,387,521,479,473,129,364,118,363,365,388,389,390,391,392,393,394,395,543,396,397,398,399,319,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,525,416,417,418,419,420,352,325,421,369,335,422,423,424,425,426,337,427,428,429,430,431,432,433,434,371,435,436,436,437,438,100,100,462,439,440,115,291,500,292,270,247,275,114,441,442,443,440,270,270,270,270,270,506,375,339,218,330,367,357,322,534,358,342,475,343,476,507,450,361,452,379,558,477,278,478,289,373,286,328,380,294,333,381,382,383,332,384,385,386,340,387,521,479,473,129,364,118,363,365,388,389,390,391,392,393,394,395,543,396,397,398,399,319,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,525,416,417,418,419,420,352,325,421,369,335,422,423,424,425,426,337,427,428,429,430,431,432,433,434,371,435,436,437,438,100,462,439,440,115,291,500,292,270,247,275,114,441,442,443,388,342,342,325,342,531,411,412,414,100,292,100,100,100,100,100,389,100,100,345,100,590,435,375,339,218,330,367,357,322,534,358,342,475,343,476,507,450,361,452,379,558,477,278,478,289,373,286,328,380,294,333,381,382,383,332,384,385,386,340,387,521,479,473,129,364,118,363,365,388,389,390,391,392,393,394,395,543,396,397,398,399,319,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,525,416,417,418,419,420,352,325,421,369,335,422,423,424,425,426,337,427,428,429,430,431,432,433,434,371,435,436,437,438,100,462,439,440,115,291,500,292,270,247,275,114,441,442,443,23,0,184,339,286,340,325,341,339,286,340,325,286,100,100,388,325,556,556,363,385,402,0,330,319,292,292,212,468,325,288,212,288,292,212,292,339,286,340,206,325,341,547,341,288,557,557,440,100,375,339,218,330,367,357,322,534,358,342,475,343,476,507,450,361,452,379,558,477,278,478,289,373,286,328,380,294,333,381,382,383,332,384,385,386,340,387,521,479,473,129,364,118,363,365,388,389,390,391,392,393,394,395,543,396,397,398,399,319,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,525,416,417,418,419,420,352,325,421,369,335,422,423,424,425,426,337,427,428,429,430,431,432,433,434,371,435,436,437,438,100,462,439,440,115,291,500,292,270,247,275,114,441,442,443,100,455,456,377,455,456,377,386,294,428,294,115,0,418,420,379,429,115,330,427,358,478,332,381,580,581,270,479,388,381,286,319,286,270,475,343,286,363,388,543,286,381,389,476,450,361,452,365,286,365,358,358,427,428,381,389,342,381,388,381,389,381,389,450,452,473,358,428,381,381,388,363,427,428,427,428,478,381,332,479,388,381,332,388,477,478,358,381,388,247,275,427,428,428,427,428,381,389,427,444,475,343,381,381,332,332,479,363,388,479,388,428,358,381,389,286,388,444,381,332,479,388,444,381,332,476,361,363,286,475,343,478,363,388,286,358,381,389,358,381,388,444,381,332,479,388,286,365,444,475,343,286,381,381,332,332,363,388,342,388,478,381,332,479,363,388,381,478,479,388,427,428,358,381,389,286,381,388,381,388,286,365,286,319,358,427,427,381,389,381,389,286,292,292,212,428,427,286,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,100,100,100,325,455,456,377,427,0,210,592,593,594,592,593,594,592,595,596,597,598,598,599,600,601,602,603,604,605,606,607,607,608,601,609,601,605,598,606,610,600,611,608,602,612,613,613,599,614,598,613,611,598,604,611,605,598,613,606,610,614,603,607,612,609,607,603,613,607,603,603,600,600,604,615,616,617,617,618,619,615,620,621,622,623,620,624,619,622,616,625,624,626,625,625,626,617,618,622,623,624,623,624,623,621,619,626,615,621,627,628,629,629,630,631,632,633,634,633,635,634,636,637,638,639,640,641,635,632,634,586,587,587,642,642,642,584,585,584,585,643,644,645,643,644,646,647,648,649,649,646,645,647,648,650,650,0,0,0,0,0,0,0,0,0,0,309,310,310,0,215,213,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,562,0,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,0,0,0,0,0,0,0,0,347,347,347,347,347,379,455,456,457,379,513,456,457,455,456,455,456,457,457,379,513,456,457,455,456,513,456,457,455,456,455,513,456,455,456,541,541,541,541,541,541,541,541,541,541,541,541,541,541,513,456,457,0,455,456,455,456,379,455,456,0,564,564,564,564,564,0,0,564,347,347,347,347,563,347,564,564,564,564,564,564,564,564,564,564,564,564,564,564,0,564,564,564,564,564,564,564,564,0,568,0,0,565,565,565,565,565,565,565,565,565,0,565,565,565,565,566,565,565,565,565,565,568,565,565,565,565,565,569,569,0,0,569,569,569,445,445,569,445,569,445,445,445,445,569,445,569,445,569,445,569,445,445,445,445,445,569,569,445,445,445,569,445,569,445,0,445,445,569,445,569,445,569,445,569,569,569,0,0,569,569,569,445,240,0,76,42,33,0,0,0,0,0,0,0,76,42,172,0,42,0,0,76,0,172,76,42,172,0,0,0,76,42,0,0,0,0,0,0,0,0,76,42,172,172,0,0,76,42,0,0,76,42,172,172,0,0,172,76,42,172,0,0,76,42,172,0,0,0,172,172,0,240,172,76,42,172,0,0,76,42,172,0,0,0,235,0,33,580,581,0,0,0,0,0,0,240,0,0,76,42,172,0,0,76,42,172,0,0,76,42,172,0,0,76,42,172,0,0,172,33,172,172,172,238,76,42,172,0,0,235,0,0,172,242,86,242,86,242,86,7,76,42,172,0,76,42,0,76,0,0,33,238,33,0,0,0,0,0,0,0,0,0,245,0,0,242,0,240,76,42,0,76,0,76,42,172,0,76,76,42,172,172,0,0,0,0,172,245,0,76,42,172,0,0,76,42,172,0,0,76,42,172,0,0,76,42,172,0,0,172,42,172,0,172,172,212,212,33,212,226,226,227,227,228,212,0,237,237,0,243,243,243,243,0,237,111,236,212,212,212,212,212,237,237,33,254,212,212,212,0,0,0,111,580,581,226,226,227,227,243,243,243,243,212,212,212,580,581,212,0,0,0,0,0,235,0,238,235,238,0,0,236,0,0,0,0,0,235,238,235,238,0,0,0,0,0,0,0,0,0,0,0,495,497,498,0,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,0,311,311,0,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,0,0,337,422,422,422,422,337,337,337,337,337,426,424,337,337,0,424,337,0,425,337,424,337,337,424,337,426,426,426,424,426,337,337,337,337,337,424,424,424,424,424,337,337,337,424,426,337,426,426,426,337,337,426,337,337,0,337,425,423,426,426,424,337,337,422,422,422,422,422,422,424,422,422,422,422,424,426,426,337,337,426,337,337,424,424,424,337,424,337,424,424,337,422,337,424,337,0,424,337,337,337,337,426,337,424,337,426,337,337,337,424,337,337,424,337,337,337,337,426,426,426,426,425,426,337,0,426,426,426,426,426,426,337,337,426,337,0,424,424,426,426,426,337,424,424,424,424,424,424,424,424,424,337,337,426,337,424,424,424,424,0,0,0,0,595,596,597,627,628,629,629,630,631,632,633,634,633,635,634,636,637,638,639,640,641,635,632,634,643,644,645,643,644,646,647,648,649,649,646,645,647,648,650,650,0,423,425,425,0,425,571,571,571,571,0,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,572,572,572,572,0,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,0,0,0,0,409,409,0,0,0,0,0,0,0,0,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,0,555,555,555,555,555,555,555,555,555,555,555,555,555,0,555,555,555,555,555,555,555,555,555,217,217,217,0,0,0,0,0,575,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,0,205,205,0,0,0,0,0,205,205,0,0,0,0,0,0,0,0,0,0,0,45,47,45,47,45,47,45,47,205,205,0,0,0,354,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,0,356,356,356,356,356,356,356,0,356,0,356,356,0,356,356,356,356,356,0,356,0,356,0,356,0,356,0,356,356,356,356,356,0,371,371,371,371,371,0,0,651,652,94,0,94,0,0,187,94,0,0,0,0,94,16,16,16,16,16,16,16,16,16,16,341,341,0,16,16,341,341,16,341,341,16,16,16,341,16,16,16,341,341,341,16,578,94,16,578,94,16,341,16,16,16,16,341,16,16,341,341,341,16,16,94,16,341,94,16,16,16,16,16,16,578,94,16,16,578,94,16,16,16,16,16,578,94,16,341,341,16,94,16,187,16,16,16,187,16,16,16,16,16,94,94,94,16,16,16,16,16,16,341,16,341,16,94,16,16,16,578,94,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,341,16,16,16,341,341,341,187,16,16,16,187,16,16,16,341,94,16,16,16,16,16,16,0,16,578,94,16,578,94,16,16,578,271,16,341,16,16,16,16,341,341,271,16,16,16,341,341,16,16,187,16,16,16,187,16,16,16,16,341,341,16,341,341,16,341,16,16,16,16,341,341,341,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,341,16,578,187,16,16,16,187,16,16,16,16,341,0,16,16,341,341,16,16,16,341,16,16,16,341,94,341,16,16,16,16,341,341,16,16,578,341,16,341,341,341,16,16,16,16,16,16,16,16,16,341,16,16,341,16,16,341,341,16,16,341,16,16,16,16,16,16,94,16,16,16,16,16,16,578,94,16,16,16,16,16,578,94,16,16,16,16,16,16,16,578,94,16,16,16,16,16,341,16,341,0,341,341,578,94,16,16,16,16,0,0,0,326,0,326,327,19,0,326,327,19,326,327,19,326,327,19,326,327,19,0,0,378,50,378,50,463,463,0,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,0,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38],"f":"``````{{}b}`````````{{}d}```````{{{f{c}}h}b{}}{{{f{{l{j}}}}}d}{{{l{c}}{l{c}}}{}n}{{{l{A`}}{l{A`}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}}{{{l{Ad}}{l{Ad}}}}{{{f{{l{A`}}}}{f{Af}}}}{{{f{{l{c}}}}e}{}n{AhAj}}{{{l{c}}e}{}n{AhAj}}{{{f{{l{A`}}}}{f{{l{A`}}}}}}{{{f{{l{Ad}}}}{f{{l{Ad}}}}}}{{{f{{l{Ad}}}}{f{{An{Al}}}}}}{{{l{Ab}}{l{Ab}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{j}}}}{f{Bh}}}B`}{{{f{{l{Bj}}}}{f{Bh}}}B`}{{{f{{l{Ab}}}}{f{Bh}}}B`}{{{f{{l{{Bl{c}}}}}}{f{Bh}}}B`Bn}{{{f{{l{Ad}}}}{f{Bh}}}B`}{{{f{{l{A`}}}}{f{Bh}}}B`}{{{f{{l{c}}}}{f{Bh}}}B`n}{{{f{{l{Ab}}}}}d}{{{f{{l{Ab}}}}}{{C`{d}}}}{{{f{{l{Bj}}}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{j}}}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{j}}}}{f{Af}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{Bj}}}}{f{Af}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}54{{{f{Cl{l{c}}}}{f{{l{c}}}}}b{{Db{}{{Cn{D`}}}}}}{{{f{{l{{Bl{c}}}}}}e}{{l{{Bl{c}}}}}Bn{{Df{{C`{{f{c}}}}}{{Dd{{C`{c}}}}}}Dh}}{{{f{{l{Ab}}}}c}{{l{Ab}}}{{Df{{C`{d}}}{{Dd{{C`{d}}}}}}Dh}}{{{f{{l{c}}}}e}{{l{c}}}n{{Df{C`}{{Dd{C`}}}}Dh}}{{{f{{l{A`}}}}c}{{l{A`}}}{{Df{{C`{{f{Af}}}}}{{Dd{{C`{{Dj{Af}}}}}}}}Dh}}{{{f{{l{Ad}}}}c}{{l{Ad}}}{{Df{{C`{{f{{An{Al}}}}}}}{{Dd{{C`{{Dj{{An{Al}}}}}}}}}}Dh}}{{{f{{l{j}}}}c}{{l{j}}}{{Df{{C`{B`}}}{{Dd{{C`{B`}}}}}}Dh}}{{{f{{l{j}}}}c}{{l{j}}}{{Dn{Dl}{{Dd{B`}}}}}}{{{f{{l{Bj}}}}e}{{l{g}}}{}{{Dn{{C`{Dl}}}{{Dd{{C`{c}}}}}}Dh}Db}{{{f{{l{j}}}}e}{{l{g}}}{}{{Dn{{C`{Dl}}}{{Dd{{C`{c}}}}}}Dh}Db}{{{f{{l{Bj}}}}c}{{l{Bj}}}{{Dn{Dl}{{Dd{B`}}}}}}{{{f{{l{E`}}}}c}B`{{Df{{f{B`}}}{{Dd{B`}}}}}}{{{f{{l{Eb}}}}c}B`{{Df{{f{B`}}}{{Dd{B`}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{}{{Dn{C`}{{Dd{{C`{e}}}}}}}Db}{{{l{c}}e}{{l{c}}}n{{Df{}{{Dd{}}}}Dh}}{{{f{{l{c}}}}{f{Df}}}{{l{c}}}n}{{{f{{l{Ab}}}}{f{Df}}}{{l{Ab}}}}{{{f{{l{A`}}}}{f{Df}}}{{l{A`}}}}{{{f{{l{Ad}}}}{f{Df}}}{{l{Ad}}}}{{{f{{l{c}}}}{f{Df}}}{{l{e}}}nDb}{{{f{{l{A`}}}}{f{Df}}}{{l{c}}}Db}{{{f{{l{Ad}}}}{f{Df}}}{{l{c}}}Db}{{{f{{l{Ab}}}}{f{Df}}}{{l{c}}}Db}{{{f{{l{Ad}}}}c}{{l{Ad}}}{{Dn{{f{{An{Al}}}}}{{Dd{{f{{An{Al}}}}}}}}}}{{{f{{l{A`}}}}c}{{l{A`}}}{{Dn{{f{Af}}}{{Dd{{f{Af}}}}}}}}{{{f{Cl{l{c}}}}e}bn{{Df{}{{Dd{}}}}Dh}}{{{f{{l{c}}}}Edg}{{l{i}}}Db{}{{Dn{}{{Dd{e}}}}}Db}{{{f{{l{A`}}}}c}{{l{A`}}}{{Dn{{f{Af}}{f{ClEf}}}}}}{{{f{{l{j}}}}{f{Df}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{Bj}}}}{f{Df}}}{{Bd{{l{Bj}}Bb}}}}{{{f{{l{Ab}}}}e{f{Cl{An{c}}}}}b{}{{Df{{C`{d}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{{Bl{c}}}}}}g{f{Cl{An{e}}}}}bBn{}{{Df{{C`{{f{c}}}}{f{e}}}{{Dd{e}}}}}}{{{f{{l{A`}}}}e{f{Cl{An{c}}}}}b{}{{Df{{C`{{f{Af}}}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{j}}}}e{f{Cl{An{c}}}}}b{}{{Df{{C`{B`}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{c}}}}g{f{Cl{An{e}}}}}bn{}{{Df{C`{f{e}}}{{Dd{e}}}}}}{{{f{{l{Ad}}}}e{f{Cl{An{c}}}}}b{}{{Df{{C`{{f{{An{Al}}}}}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{{Bl{c}}}}}}e}{{l{{Bl{c}}}}}Bn{{Df{{f{c}}}{{Dd{c}}}}Dh}}{{{f{{l{A`}}}}c}{{l{A`}}}{{Df{{f{Af}}}{{Dd{{Dj{Af}}}}}}Dh}}{{{f{{l{Ad}}}}c}{{l{Ad}}}{{Df{{f{{An{Al}}}}}{{Dd{{Dj{{An{Al}}}}}}}}Dh}}{{{f{{l{Ab}}}}c}{{l{Ab}}}{{Df{d}{{Dd{d}}}}Dh}}{{{f{{l{c}}}}e}{{l{c}}}n{{Df{}{{Dd{}}}}Dh}}{{{f{{l{j}}}}c}{{l{j}}}{{Df{B`}{{Dd{B`}}}}Dh}}{{{f{{l{c}}}}g}{{l{i}}}Db{}{{Dn{}{{Dd{e}}}}}Db}{{{f{{l{Eh}}}}Ej}{{l{El}}}}{{{f{{l{A`}}}}Ej}{{l{El}}}}{{{f{{l{Ad}}}}Ej}{{l{El}}}}{{{f{{l{Ab}}}}Ej}{{l{El}}}}{{{f{{l{c}}}}Ej}{{l{El}}}n}{{{f{{l{A`}}}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Ab}}}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Eh}}}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Ad}}}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{c}}}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}n}{{{f{{l{c}}}}}{{Bd{{l{El}}Bb}}}n}{{{f{{l{Ad}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{{Bl{c}}}}}}}{{Bd{{l{El}}Bb}}}Bn}{{{f{{l{A`}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Ab}}}}}{{Bd{{l{El}}Bb}}}}`{{{f{{l{Bj}}}}}{{f{{l{Bj}}}}}}{{{f{{l{A`}}}}}{{l{Ad}}}}{{{f{{l{Ad}}}}}{{f{{l{Ad}}}}}}{{{f{{l{j}}}}}{{f{{l{j}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Db}{{{f{{l{c}}}}}{{f{Ed}}}Db}{{{f{{l{A`}}}}}{{f{{l{A`}}}}}}0{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}DbDb{{Dn{{C`{Dl}}C`C`}{{Dd{{C`{B`}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}F`}{{{l{Ab}}{l{Ab}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}}201021{{{f{c}}}{{f{e}}}{}{}}0{{{f{Clc}}}{{f{Cle}}}{}{}}0``{{{f{{l{c}}}}e}{{l{g}}}n{{Df{}{{Dd{}}}}Dh}n}{{{f{{l{j}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{Eh}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{Bj}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{Ad}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{Ed}}}{{Bd{B`Bb}}}n}{{{f{{l{Ab}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{A`}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}n}{{{f{{l{j}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{Ab}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{Ad}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{A`}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{Eh}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{Bj}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Fd}{{{f{{l{c}}}}e}{{Bd{B`Bb}}}FdAj}{{{f{{l{c}}}}}{{Fl{{Ff{{Cf{Cd}}}}{Fj{{f{{Cf{Cd}}}}}{{Dd{Fh}}}}}}}Db}{{{f{{l{c}}}}}{{f{{Fn{{Cf{Cd}}}}}}}Db}{{{f{Cl{l{c}}}}}{{f{Cl{Fn{{Cf{Cd}}}}}}}Db}{{{f{{l{c}}}}}{{l{c}}}Db}0{{{f{c}}{f{Cle}}}b{}{}}`{{{f{Cl{l{c}}}}}b{Dbn}}`{{{f{{l{c}}}}}{{Bd{{f{An}}Bb}}}n}{{{f{Cl{l{c}}}}{f{{l{c}}}}G`}bDb}{{{f{Cl{l{c}}}}{f{{l{e}}}}G`}bDbDb}{{{f{{l{c}}}}}{{`{Gb}}}n}{{}{{l{c}}}Db}{Fh{{f{c}}}{}}0{Fh{{f{Clc}}}{}}0{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{l{c}}e}{}n{AhAj}}{{{f{{l{c}}}}e}{}n{AhAj}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{Cl{l{c}}}}}bDb}{Fhb}0{{{f{{l{c}}}}}{{l{c}}}Db}{{{f{{l{c}}}}}{{f{Ed}}}Db}{{{f{{l{c}}}}}{{f{{Gd{c}}}}}Db}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{Ab}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}{{l{Ab}}}}{{{f{{l{c}}}}e}{{l{Ab}}}nAj}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Ab}}}n}{{{f{{l{A`}}}}{f{Af}}}{{l{Ab}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{Ab}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Ab}}}}{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{Ab}}}}{{{f{{l{Ad}}}}{f{{An{Al}}}}}{{l{Ab}}}}685423017{{{f{{l{Bj}}}}}{{Bd{{Gj{B`{Gh{Gf}}}}Bb}}}}{{{f{{l{j}}}}}{{Bd{{Gj{B`{Gh{Gf}}}}Bb}}}}{{{f{Cl{l{c}}}}{f{{l{c}}}}}bn}{{{f{{l{Ab}}}}d}{{Bd{{l{Ab}}Bb}}}}{{{f{{l{Ad}}}}{f{{An{Al}}}}}{{Bd{{l{Ad}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}n}{{{f{{l{A`}}}}{f{{l{Ab}}}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}{{Bd{{l{Ab}}Bb}}}}{{{f{{l{{Bl{c}}}}}}{f{{l{Ab}}}}}{{Bd{{l{{Bl{c}}}}Bb}}}Bn}{{{f{{l{Eh}}}}{f{{l{Ab}}}}}{{Bd{{l{Eh}}Bb}}}}{{{f{{l{j}}}}{f{{l{Ab}}}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{Ad}}}}{f{{l{Ab}}}}}{{Bd{{l{Ad}}Bb}}}}{{{f{{l{c}}}}{f{{l{Ab}}}}}{{Bd{{l{c}}Bb}}}n}{{{f{{l{Bj}}}}{f{{l{Ab}}}}}{{Bd{{l{Bj}}Bb}}}}{{{f{{l{c}}}}}{{C`{Fh}}}Db}`{{{f{{l{j}}}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{l{Ad}}}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{l{{Bl{c}}}}}}{f{ClGl}}}{{Bd{bGn}}}Bn}{{{f{{l{Ab}}}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{l{A`}}}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{l{c}}}}{f{ClGl}}}{{Bd{bGn}}}n}{{{f{{l{Bj}}}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{l{c}}}}e}bDb{{Dn{C`}}}}{{{f{{l{Bj}}}}c}b{{Dn{{C`{Dl}}}}}}{{{f{{l{j}}}}c}b{{Dn{{C`{Dl}}}}}}{cc{}}{c{{l{e}}}Cd{{Db{}{{H`{c}}}}}}1{{{f{Af}}c}{{l{e}}}Hb{{Db{}{{H`{}}}}Db}}{{{f{{l{c}}}}e}{{l{c}}}{{Db{}{{H`{}}}}Db}Hb}{{{f{Af}}{Fn{{Cf{Cd}}}}}{{l{c}}}Db}{{{f{Af}}{Fn{{Cf{Cd}}}}Ed}{{l{c}}}Db}{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}{e{{l{{Bl{c}}}}}Bn{{Hb{}{{Cb{{C`{c}}}}}}}}{c{{l{j}}}{{Hb{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}{c{{l{Ab}}}{{Hb{}{{Cb{d}}}}}}{c{{l{j}}}{{Hb{}{{Cb{{C`{B`}}}}}}}}{c{{l{e}}}{{Hb{}{{Cb{{Gj{Fn{C`{Hf}}}}}}}}}n}{e{{l{j}}}{{Hh{B`}}}{{Hb{}{{Cb{c}}}}}}{c{{l{e}}}{{Hb{}{{Cb{C`}}}}}n}{e{{l{Ad}}}{{Hj{{An{Al}}}}}{{Hb{}{{Cb{c}}}}}}{c{{l{Ab}}}{{Hb{}{{Cb{{C`{d}}}}}}}}{e{{l{A`}}}{{Hj{Af}}}{{Hb{}{{Cb{c}}}}}}{e{{l{Ad}}}{{Hl{{An{Al}}}}}{{Hb{}{{Cb{{C`{c}}}}}}}}{e{{l{A`}}}{{Hl{Af}}}{{Hb{}{{Cb{{C`{c}}}}}}}}{{{f{Af}}c}{{l{Ab}}}{{Ch{}{{Cb{{C`{d}}}}}}}}{{{f{Af}}e}{{l{{Bl{c}}}}}Bn{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{Af}}c}{{l{e}}}{{Ch{}{{Cb{C`}}}}}n}{{{f{Af}}e}{{l{A`}}}{{Hl{Af}}}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{Af}}e}{{l{Ad}}}{{Hl{{An{Al}}}}}{{Ch{}{{Cb{{C`{c}}}}}}}}=9>5:78{e{{l{{Bl{c}}}}}Bn{{Hb{}{{Cb{{C`{c}}}}}}}}7{e{{l{Eh}}}{{Hl{{An{Al}}}}}{{Hb{}{{Cb{{C`{c}}}}}}}}={e{{l{Eh}}}{{Hj{{An{Al}}}}}{{Hb{}{{Cb{c}}}}}}{{{f{Af}}e}{{l{Ad}}}{{Hl{{An{Al}}}}}{{Ch{}{{Cb{c}}}}}}{{{f{Af}}c}{{l{e}}}{{Ch{}{{Cb{}}}}}n}{{{f{Af}}e}{{l{A`}}}{{Hl{Af}}}{{Ch{}{{Cb{c}}}}}}{{{f{Af}}e}{{l{{Bl{c}}}}}Bn{{Ch{}{{Cb{c}}}}}}{{{f{Af}}c}{{l{Ab}}}{{Ch{}{{Cb{d}}}}}}`{e{{l{A`}}}{{Hj{Af}}HnI`Ib}{{Id{}{{Cb{c}}}}}}{c{{l{Ab}}}{{Id{}{{Cb{d}}}}}}{c{{l{e}}}{{Id{}{{Cb{C`}}}}}n}{e{{l{A`}}}{{Hl{Af}}HnI`}{{Id{}{{Cb{{C`{c}}}}}}}}{e{{l{Ad}}}{{Hj{{An{Al}}}}HnI`Ib}{{Id{}{{Cb{c}}}}}}{c{{l{Ab}}}{{Id{}{{Cb{{C`{d}}}}}}}}{c{{l{j}}}{{Id{}{{Cb{{C`{B`}}}}}}}}{e{{l{Ad}}}{{Hl{{An{Al}}}}HnI`}{{Id{}{{Cb{{C`{c}}}}}}}}{{c{f{Af}}Ed}{{l{j}}}{{Id{}{{Cb{{C`{B`}}}}}}}}{{{f{Af}}{f{{An{c}}}}}{{l{Ad}}}{{Hl{{An{Al}}}}}}{{{f{Af}}{f{{An{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{Af}}{f{{An{c}}}}}{{l{A`}}}{{Hl{Af}}}}{{{f{Af}}{f{An}}}{{l{c}}}n}{{{f{Af}}{f{{An{d}}}}}{{l{Ab}}}}{{{f{Af}}{f{{An{{C`{c}}}}}}}{{l{Ad}}}{{Hl{{An{Al}}}}}}{{{f{Af}}{f{{An{{C`{c}}}}}}}{{l{{Bl{c}}}}}Bn}{{{f{Af}}{f{{An{C`}}}}}{{l{c}}}n}{{{f{Af}}{f{{An{{C`{c}}}}}}}{{l{A`}}}{{Hl{Af}}}}{{{f{Af}}{f{{An{{C`{d}}}}}}}{{l{Ab}}}}{c{{l{e}}}{{If{}{{Cb{C`}}}}}n}{c{{l{Ab}}}{{If{}{{Cb{{C`{d}}}}}}}}{{{f{Af}}Fn}{{l{c}}}n}{{{f{Af}}Fn{C`{Hf}}}{{l{c}}}n}{{{f{Af}}Fh}{{l{c}}}n}{{{f{Af}}{f{B`}}Fh}{{l{j}}}}{{{f{Af}}{f{Af}}Fh}{{l{A`}}}}{{{f{Af}}{f{{An{Al}}}}Fh}{{l{Eh}}}}{{{f{Af}}{f{B`}}Fh}{{l{Bj}}}}{{{f{Af}}dFh}{{l{Ab}}}}{{{f{Af}}cFh}{{l{{Bl{c}}}}}Bn}{{{f{Af}}{f{{An{Al}}}}Fh}{{l{Ad}}}}{{{f{Af}}Fh}{{l{A`}}}}{{{f{Af}}Fh}{{l{j}}}}{{{f{Af}}Fh}{{l{Bj}}}}{{{f{Af}}Fh}{{l{Ab}}}}{{{f{Af}}Fh}{{l{{Bl{c}}}}}Bn}<{{{f{Af}}Fh}{{l{Ad}}}}{{{f{Af}}Fh}{{l{Eh}}}}{{{f{{l{c}}}}Fh}{{l{c}}}Db}{{{f{Af}}Fh{f{Ed}}Fh}{{l{Bj}}}}{{{f{Af}}Fh{f{Ed}}}{{l{j}}}}{{{f{{l{c}}}}Fh}C`Db}{{{f{{l{Bj}}}}Fh}{{Bd{IhBb}}}}{{{f{{l{Eh}}}}Fh}{{Bd{IhBb}}}}{{{f{{l{Ad}}}}Fh}{{Bd{IhBb}}}}{{{f{{l{{Bl{c}}}}}}Fh}{{Bd{IhBb}}}Bn}{{{f{{l{Ab}}}}Fh}{{Bd{IhBb}}}}{{{f{{l{c}}}}Fh}{{Bd{IhBb}}}n}{{{f{{l{j}}}}Fh}{{Bd{IhBb}}}}{{{f{{l{A`}}}}Fh}{{Bd{IhBb}}}}{{{f{{l{Ad}}}}Fh}Ih}{{{f{{l{Ab}}}}Fh}Ih}{{{f{{l{{Bl{c}}}}}}Fh}IhBn}{{{f{{l{Bj}}}}Fh}Ih}{{{f{{l{Eh}}}}Fh}Ih}{{{f{{l{j}}}}Fh}Ih}{{{f{{l{A`}}}}Fh}Ih}{{{f{{l{c}}}}Fh}Ihn}{{{f{{l{Bj}}}}Fh}{{C`{B`}}}}{{{f{{l{j}}}}Fh}{{C`{B`}}}}{{{f{{l{c}}}}}{{C`{Ij}}}Db}{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}}IlDb}{{{f{{l{Bj}}}}}B`}{{{f{{l{j}}}}}B`}{{{f{{l{c}}}}}{{C`{f}}}Db}0{{{f{{l{{Bl{c}}}}}}Fh}{{C`{{f{In}}}}}Bn}0{{{f{{l{c}}}}Fh}C`Db}{{{f{{l{Bj}}}}}Fh}{{{f{{l{A`}}}}}Fh}{{{f{{l{j}}}}}Fh}{{{f{{l{Eh}}}}}Fh}{{{f{{l{Eh}}}}dd}{{Bd{BhBb}}}}{{{f{{l{Ab}}}}dd}{{Bd{BhBb}}}}{{{f{{l{Ad}}}}dd}{{Bd{BhBb}}}}{{{f{{l{A`}}}}dd}{{Bd{BhBb}}}}{{{f{{l{{Bl{c}}}}}}dd}{{Bd{BhBb}}}Bn}{{{f{{l{Bj}}}}dd}{{Bd{BhBb}}}}{{{f{{l{j}}}}dd}{{Bd{BhBb}}}}{{{f{{l{c}}}}dd}{{Bd{BhBb}}}n}{{{f{{l{c}}}}FhdFh}BhF`}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{Ab}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}{{l{Ab}}}}{{{f{{l{Ad}}}}{f{{An{Al}}}}}{{l{Ab}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{Ab}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Ab}}}n}{{{f{{l{A`}}}}{f{Af}}}{{l{Ab}}}}{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{Ab}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Ab}}}}{{{f{{l{c}}}}e}{{l{Ab}}}nAj}215074683{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}{C`{Fh}}}{{l{c}}}Db}{{}Fh}0{{FhJ`{C`{Jb}}}{{l{c}}}n}{{{f{{l{Bj}}}}}{{f{Ed}}}}{{{f{{l{j}}}}}{{f{Ed}}}}{ce{}{}}0{{{l{Jd}}}{{Jh{JfJd}}}}{{{l{Jj}}Jl{C`{Ef}}}{{Jh{JnJj}}}}{{{l{K`}}{C`{Fh}}Fh}{{Bd{{Jh{KbK`}}Bb}}}}{{{l{K`}}{C`{Fh}}Fh}{{Jh{KbK`}}}}{{{l{Jj}}Jl}{{Jh{KdJj}}}}{{{f{{l{c}}}}}{}n}{{{f{{l{{Bl{c}}}}}}}{}Bn}{{{f{{l{Ad}}}}}}{{{f{{l{A`}}}}}}{{{f{{l{Eh}}}}}}{{{f{{l{Bj}}}}}}{{{f{{l{Ab}}}}}}{{{f{{l{j}}}}}}{{{f{{l{c}}}}}{{`{HnI`KfGbIf}}}n}{{{l{K`}}}B`}{{{l{c}}}B`Db}{{{l{Jj}}}{{Jh{KhJj}}}}{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}}{{l{Ab}}}Kj}000{{{f{{l{c}}}}}{{l{Ab}}}Db}02{{{f{{l{c}}}}}KlDb}{{{f{{l{c}}}}}{{`{Kn}}}Db}{{{f{{l{j}}}}}{{`{{Ch{}{{Cb{Gf}}}}}}}}{{{f{{l{c}}}}}{{Fl{{Ff{{Cf{Cd}}}}{Fj{{f{{Cf{Cd}}}}}{{Dd{{C`{{f{Hf}}}}}}}}}}}Db}`{{{f{{l{c}}}}}C`Db}{{{f{{l{c}}}}}{{C`{Fh}}}Db}{{{f{{l{c}}}}}{{L`{c}}}Db}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{l{c}}}{}n}{{{f{{l{c}}}}}{}n}01{{{f{{l{c}}}}}FhDb}{{{f{{l{c}}}}e}{{l{c}}}n{AhLb}}00{{{f{{l{c}}}}Fh}{{l{c}}}Db}{{{f{{l{Ad}}}}{f{{An{Al}}}}}{{l{Ab}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}{{l{Ab}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Ab}}}n}{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{Ab}}}}{{{f{{l{c}}}}e}{{l{Ab}}}nAj}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{Ab}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{Ab}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Ab}}}}{{{f{{l{A`}}}}{f{Af}}}{{l{Ab}}}}421307586{{{f{{l{Ab}}}}}{{C`{d}}}}{{{f{{l{c}}}}}C`n}{{{f{{l{Ab}}}}}Ld}{{{f{{l{A`}}}}}Ld}{{{f{{l{c}}}}}Ldn}{{{f{{l{Ad}}}}}Ld}{{{f{{l{Ab}}}}}{{C`{Lf}}}}{{{f{{l{c}}}}}{{C`{Lf}}}n}{{{f{{l{E`}}}}}{{C`{Lf}}}}{{{f{{l{c}}}}}{{C`{Lf}}}F`}{{{f{{l{Eb}}}}}{{C`{J`}}}}{{{f{{l{c}}}}}LdF`}{{{f{{l{Eb}}}}}Ld}{{{f{{l{E`}}}}}Ld}{{{f{Cl{l{c}}}}{Gd{c}}}bDb}`{{{f{{l{c}}}}}{{C`{{f{{Gd{c}}}}}}}Db}{{{f{{l{c}}}}}{{C`{{f{{Lh{{Gd{c}}}}}}}}}Db}{{{f{Cl{l{c}}}}}{{f{Cl{Lh{{Gd{c}}}}}}}Db}{{{f{{l{c}}}}}{{Lh{{Gd{c}}}}}Db}{{{f{{l{Ab}}}}}{{C`{d}}}}{{{f{{l{c}}}}}C`n}{{{f{{l{c}}}}}{{C`{Gj}}}n}{{{f{{l{A`}}}}}Ld}{{{f{{l{Ad}}}}}Ld}{{{f{{l{c}}}}}Ldn}{{{f{{l{Ab}}}}}Ld}{{{f{Af}}{f{{An{Al}}}}FhFh}{{l{Ab}}}}{{{f{Af}}{f{An}}}{{l{c}}}n}{{{l{c}}{l{c}}}{}n}{{{l{c}}e}{}n{AhAj}}{{{f{{l{c}}}}e}{}n{AhAj}}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{A`}}}}}{{Bd{FhBb}}}}{{{f{{l{c}}}}}{{Bd{FhBb}}}n}{{{f{{l{Ad}}}}}{{Bd{FhBb}}}}{{{f{{l{c}}}}}{{f{Af}}}Db}{{{f{Af}}{Lj{Jb}}}{{l{Ll}}}}{{{f{Af}}c}{{l{Jj}}}{{Hl{{An{{C`{Gf}}}}}}}}{{{f{Af}}c}{{l{A`}}}{{Hl{{An{{C`{{Dj{Af}}}}}}}}}}{{{f{Af}}c}{{l{Ll}}}{{Hl{{An{Jb}}}}}}{{{f{Af}}c}{{l{Ln}}}{{Hl{{An{M`}}}}}}{{{f{Af}}c}{{l{Ad}}}{{Hl{{An{{C`{{Dj{{An{Al}}}}}}}}}}}}{{{f{Af}}c}{{l{A`}}}{{Hl{{An{{C`{{f{Af}}}}}}}}}}{{{f{Af}}c}{{l{A`}}}{{Hl{{An{{C`{Ef}}}}}}}}{{{f{Af}}c}{{l{Ad}}}{{Hl{{An{{Dj{{An{Al}}}}}}}}}}{{{f{Af}}c}{{l{E`}}}{{Hl{{An{{C`{Lf}}}}}}}}{{{f{Af}}e}{{l{{Bl{c}}}}}Bn{{Hl{{An{{C`{c}}}}}}}}{{{f{Af}}c}{{l{El}}}{{Hl{{An{{C`{Ij}}}}}}}}{{{f{Af}}c}{{l{Ad}}}{{Hl{{An{{C`{{f{{An{Al}}}}}}}}}}}}{{{f{Af}}c}{{l{A`}}}{{Hl{{An{Ef}}}}}}{{{f{Af}}c}{{l{Jd}}}{{Hl{{An{{C`{Mb}}}}}}}}{{{f{Af}}c}{{l{A`}}}{{Hl{{An{{Dj{Af}}}}}}}}{{{f{Af}}c}{{l{Md}}}{{Hl{{An{{C`{Mf}}}}}}}}{{{f{Af}}c}{{l{El}}}{{Hl{{An{Ij}}}}}}{{{f{Af}}c}{{l{Md}}}{{Hl{{An{Mf}}}}}}{{{f{Af}}c}{{l{E`}}}{{Hl{{An{Lf}}}}}}{{{f{Af}}c}{{l{Mh}}}{{Hl{{An{Mj}}}}}}{{{f{Af}}c}{{l{Eb}}}{{Hl{{An{{C`{J`}}}}}}}}{{{f{Af}}c}{{l{Ad}}}{{Hl{{An{{C`{{Fn{Al}}}}}}}}}}{{{f{Af}}c}{{l{Ml}}}{{Hl{{An{Al}}}}}}{{{f{Af}}{Lj{Ij}}}{{l{El}}}}{{{f{Af}}c}{{l{Ad}}}{{Hl{{An{{f{{An{Al}}}}}}}}}}{{{f{Af}}{Lj{Mb}}}{{l{Jd}}}}{{{f{Af}}c}{{l{Ab}}}{{Hl{{An{d}}}}}}{{{f{Af}}c}{{l{Mh}}}{{Hl{{An{{C`{Mj}}}}}}}}{{{f{Af}}c}{{l{Ln}}}{{Hl{{An{{C`{M`}}}}}}}}{{{f{Af}}{Lj{Gf}}}{{l{Jj}}}}{{{f{Af}}c}{{l{Ab}}}{{Hl{{An{{C`{d}}}}}}}}{{{f{Af}}c}{{l{Jj}}}{{Hl{{An{Gf}}}}}}{{{f{Af}}c}{{l{Ad}}}{{Hl{{An{{Fn{Al}}}}}}}}{{{f{Af}}{f{{An{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{Af}}c}{{l{Ll}}}{{Hl{{An{{C`{Jb}}}}}}}}{{{f{Af}}c}{{l{Jd}}}{{Hl{{An{Mb}}}}}}{{{f{Af}}c}{{l{Ml}}}{{Hl{{An{{C`{Al}}}}}}}}{{{f{Af}}c}{{l{Eb}}}{{Hl{{An{J`}}}}}}{{{f{Af}}c}{{l{A`}}}{{Hl{{An{{f{Af}}}}}}}}{{{f{Af}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{Ad}}}}FhFh}{{l{Ad}}}}{{{f{{l{A`}}}}FhFh}{{l{A`}}}}{{{f{{l{Bj}}}}FhFh}{{l{Bj}}}}{{{f{{l{Ab}}}}FhFh}{{l{Ab}}}}{{{f{{l{{Bl{c}}}}}}FhFh}{{l{{Bl{c}}}}}Bn}{{{f{{l{Eh}}}}FhFh}{{l{Eh}}}}{{{f{{l{c}}}}FhFh}{{l{c}}}n}{{{f{{l{j}}}}FhFh}{{l{j}}}}{{{f{Af}}{Fn{c}}}{{l{{Bl{c}}}}}Bn}{{{f{Af}}{Fn{c}}Hf}{{l{{Bl{c}}}}}Bn}{{{f{Af}}Fn}{{l{c}}}n}{{{Lh{Mn}}{Fn{{Cf{Cd}}}}}{{l{c}}}Db}{{{Lh{Mn}}{Fn{{Cf{Cd}}}}IjIj}{{l{c}}}Db}{{{f{{l{c}}}}}{{l{c}}}Kj}{{{l{Ab}}}}{{{f{{l{Ab}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Ab}}}n}{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{Ab}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{Ab}}}}{{{f{{l{c}}}}e}{{l{Ab}}}nAj}{{{f{{l{Ad}}}}{f{{An{Al}}}}}{{l{Ab}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Ab}}}}{{{f{{l{A`}}}}{f{Af}}}{{l{Ab}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}{{l{Ab}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{Ab}}}}103{{{f{{l{Bj}}}}{f{{l{Bj}}}}}}89653{{{f{{l{c}}}}}FhDb}`{{{f{{l{Bj}}}}}{{Bd{{Gh{Gf}}Bb}}}}{{{f{{l{j}}}}}{{Bd{{Gh{Gf}}Bb}}}}`{{{f{{l{A`}}}}}{{`{{N`{}{{Cb{{C`{{f{Af}}}}}}}}}}}}{{{f{{l{j}}}}}{{`{{N`{}{{Cb{{C`{B`}}}}}}}}}}{{{f{{l{A`}}}}}{{`{Nb}}}}{{{f{Cl{l{j}}}}}{{`{Nb}}}}{{{f{{l{c}}}}}Ldn}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{E`}}}}LfNd}{{Bd{{C`{Lf}}Bb}}}}{{{f{{l{c}}}}LfNd}{{Bd{{C`{Lf}}Bb}}}F`}{{{f{{l{Eb}}}}LfNd}{{Bd{{C`{J`}}Bb}}}}{{{f{{l{c}}}}LfNd}{{Bd{LdBb}}}F`}{{{f{{l{E`}}}}LfNd}{{Bd{LdBb}}}}{{{f{{l{Eb}}}}LfNd}{{Bd{LdBb}}}}{{{f{Af}}FhLf}{{Bd{{l{Ab}}Bb}}}}{{{f{Af}}FhLfLf}{{Bd{{l{c}}Bb}}}n}{{{f{Af}}Fh}{{l{c}}}n}{{{f{Af}}FhLfLf}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Db}{{{f{{l{c}}}}}{{f{Mn}}}Db}{{{f{{l{Eb}}}}}B`}{{{f{{l{Ln}}}}}B`}{{{f{{l{Jj}}}}}B`}{{{f{{l{Mh}}}}}B`}{{{f{{l{El}}}}}B`}{{{f{{l{j}}}}}B`}{{{f{{l{Jd}}}}}B`}{{{f{{l{Ll}}}}}B`}{{{f{{l{Ml}}}}}B`}{{{f{{l{E`}}}}}B`}{{{f{{l{Md}}}}}B`}3271905648:{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{l{c}}{l{c}}}{}n}{{{l{c}}e}{}n{AhAj}}{{{f{{l{c}}}}e}{}n{AhAj}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{Cl{l{c}}}}{f{Af}}}bDb}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{Ad}}}}}{{l{Ad}}}}{{{f{{l{Bj}}}}}{{l{Bj}}}}{{{f{{l{A`}}}}}{{l{A`}}}}{{{f{{l{{Bl{c}}}}}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{Ab}}}}}{{l{Ab}}}}{{{f{{l{Eh}}}}}{{l{Eh}}}}{{{f{{l{j}}}}}{{l{j}}}}{{{f{{l{c}}}}{f{Df}}Nf}{{Bd{B`Bb}}}n}{{{f{{l{c}}}}Fhe}{{Bd{{l{c}}Bb}}}Kj{{Dn{{f{Cl{l{c}}}}}{{Dd{C`}}}}}}{{{f{{l{c}}}}Lfdd{C`{Jb}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{c}}}}Fhdd{C`{Jb}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{Ab}}}}{f{{An{Ij}}}}c}{{Bd{B`Bb}}}{{Hb{}{{Cb{{C`{d}}}}}}}}{{{l{c}}{f{{An{Ij}}}}e}{{Bd{B`Bb}}}Nh{{Hb{}{{Cb{C`}}}}}}{{{f{{l{A`}}}}{f{{An{Ij}}}}c}{{Bd{B`Bb}}}{{Hb{}{{Cb{{C`{{f{Af}}}}}}}}}}{{{f{{l{A`}}}}c{C`{{f{Af}}}}}{{Bd{{l{A`}}Bb}}}{{Hb{}{{Cb{Ij}}}}}}{{{f{{l{c}}}}eC`}{{Bd{{l{c}}Bb}}}n{{Hb{}{{Cb{Ij}}}}}}{{{f{{l{Ab}}}}c{C`{d}}}{{Bd{{l{Ab}}Bb}}}{{Hb{}{{Cb{Ij}}}}}}{{{f{{l{Ad}}}}c{C`{{f{{An{Al}}}}}}}{{Bd{{l{Ad}}Bb}}}{{Hb{}{{Cb{Ij}}}}}}{{{f{{l{Ab}}}}ce}{{Bd{{l{Ab}}Bb}}}{{Hb{}{{Cb{Ij}}}}}{{Df{{C`{d}}}{{Dd{{C`{d}}}}}}}}{{{f{{l{A`}}}}ce}{{Bd{{l{A`}}Bb}}}{{Hb{}{{Cb{Ij}}}}}{{Df{{C`{{f{Af}}}}}{{Dd{{C`{Ef}}}}}}}}{{{f{{l{c}}}}eg}{{Bd{{l{c}}Bb}}}n{{Hb{}{{Cb{Ij}}}}}{{Df{C`}{{Dd{C`}}}}}}{{{f{{l{Ad}}}}ce}{{Bd{{l{Ad}}Bb}}}{{Hb{}{{Cb{Ij}}}}}{{Df{{C`{{f{{An{Al}}}}}}}{{Dd{{C`{{Fn{Al}}}}}}}}}}{{{f{{l{c}}}}{f{{l{Ab}}}}C`}{{Bd{{l{c}}Bb}}}n}{{{f{{l{Ab}}}}{f{{l{Ab}}}}{C`{d}}}{{Bd{{l{Ab}}Bb}}}}{{{f{{l{A`}}}}{f{{l{Ab}}}}{C`{{f{Af}}}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{Ad}}}}{f{{l{Ab}}}}{C`{{f{{An{Al}}}}}}}{{Bd{{l{Ad}}Bb}}}}{{{f{Cl{l{j}}}}}b}{{{f{Cl{l{c}}}}d}bDb}{{{f{Cl{l{j}}}}Ed}b}{{{f{Cl{l{c}}}}Ij}bDb}{{{f{Cl{l{c}}}}Kl}bDb}{{{f{{l{Eh}}}}Gf}{{l{Eh}}}}{{{f{{l{j}}}}Gf}{{l{j}}}}{{{f{{l{c}}}}Gf}{{l{c}}}n}{{{f{{l{Bj}}}}Gf}{{l{Bj}}}}{{{f{{l{A`}}}}Gf}{{l{A`}}}}{{{f{{l{Ad}}}}Gf}{{l{Ad}}}}{{{f{{l{Ab}}}}Gf}{{l{Ab}}}}{{{f{{l{{Bl{c}}}}}}Gf}{{l{{Bl{c}}}}}Bn}{{{f{{l{A`}}}}Gf{C`{{f{Af}}}}}{{l{A`}}}}{{{f{{l{Ab}}}}Gf{C`{d}}}{{l{Ab}}}}{{{f{{l{c}}}}GfC`}{{l{c}}}n}{{{f{{l{j}}}}Gf{C`{{f{B`}}}}}{{l{j}}}}{{{f{{l{{Bl{c}}}}}}Gf{C`{{Bl{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{Bj}}}}Gf{C`{{f{B`}}}}}{{l{Bj}}}}{{{f{{l{Ad}}}}Gf{C`{{f{{An{Al}}}}}}}{{l{Ad}}}}{{{f{{l{Eh}}}}Gf{C`{{f{{An{Al}}}}}}}{{l{Eh}}}}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{c}}}}GfFh}{{l{c}}}Db}{{{f{{l{A`}}}}d}{{l{A`}}}}{{{f{{l{Ab}}}}d}{{l{Ab}}}}{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{Eh}}}}d}{{l{Eh}}}}{{{f{{l{Ad}}}}d}{{l{Ad}}}}{{{f{{l{A`}}}}Ej}{{l{A`}}}}{{{f{{l{Ab}}}}Ej}{{l{Ab}}}}{{{f{{l{c}}}}Ej}{{l{c}}}n}{{{f{{l{Eh}}}}Ej}{{l{Eh}}}}{{{f{{l{Ad}}}}Ej}{{l{Ad}}}}{{{f{{l{c}}}}Al}{{C`{Lf}}}n}{{{f{{l{c}}}}Al}LdF`}{{{f{{l{Eb}}}}Al}Ld}{{{f{{l{E`}}}}Al}Ld}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}e}{}n{AhAj}}{{{l{c}}e}{}n{AhAj}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{Ab}}}}}{{C`{Ij}}}}{{{f{{l{c}}}}}C`n}{{{f{{l{c}}}}}Ldn}{{{f{{l{Ab}}}}}Ld}{{{f{{l{Ad}}}}}Ld}{{{f{{l{c}}}}{C`{Fh}}}{{l{c}}}Db}{{{f{{l{c}}}}{f{e}}}{{Bd{{l{c}}Bb}}}Db{{Hl{{An{Ij}}}}Nj}}{{{f{{l{c}}}}{f{{l{El}}}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{c}}}}{f{{An{Nl}}}}Kl}{{l{c}}}Db}{{{f{{l{c}}}}{f{{An{Nl}}}}}{{l{c}}}Db}{{{f{{l{c}}}}{f{{l{El}}}}}{{l{c}}}{{Db{}{{Nn{D`}}}}Db}}{{{f{{l{Ad}}}}{f{{l{El}}}}}{{l{Ad}}}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Db{}{{Nn{D`}}}}Db}{{Hl{{An{Ij}}}}Nj}}{{{f{{l{A`}}}}{f{c}}}{{l{A`}}}{{Hl{{An{Ij}}}}Nj}}{{{f{{l{Ad}}}}{f{c}}}{{l{Ad}}}{{Hl{{An{Ij}}}}Nj}}{{{f{{l{A`}}}}{f{{l{El}}}}}{{l{A`}}}}`{{{f{{l{c}}}}dO`}{{Fn{{Fn{Ob}}}}}Db}{{{f{{l{c}}}}}{{l{c}}}Kj}{{{f{{l{A`}}}}Fh}{{Bd{B`Bb}}}}{{{f{Cl{l{Bj}}}}Ed}b}{{{f{Cl{l{j}}}}Ed}b}{{{f{{l{j}}}}}{{Bd{{Oj{Od{Oh{{Of{Fh}}}}}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{Oj{{Ol{f}}{Oh{{Of{Fh}}}}}}Bb}}}n}{{{f{c}}}e{}{}}{{{f{{l{Ad}}}}}{{l{A`}}}}{{{f{{l{c}}}}}{{Fn{C`}}}n}{{{f{{l{c}}}}}{{On{Fn{Fn{C`}}}}}n}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{f{{l{c}}}}}{}n}{{{l{c}}}{}n}10{{{f{{l{j}}}}c}{{Bd{{l{j}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{j}}}}e}{{Bd{{l{g}}Bb}}}{}{{Dn{{C`{Dl}}}{{Dd{{Bd{{C`{c}}Bb}}}}}}Dh}Db}{{{f{{l{Bj}}}}e}{{Bd{{l{g}}Bb}}}{}{{Dn{{C`{Dl}}}{{Dd{{Bd{{C`{c}}Bb}}}}}}Dh}Db}{{{f{{l{Bj}}}}c}{{Bd{{l{Bj}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{Bj}}}}c}{{Bd{{l{j}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}Dh}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{c{{Bd{e}}}{}{}}0{{{f{Af}}g}{{Bd{{l{i}}e}}}Cd{}{{Hb{}{{Cb{{Bd{ce}}}}}}}{{Db{}{{H`{c}}}}Db}}11{{{f{{l{j}}}}{f{{l{c}}}}e}{{Bd{{l{j}}Bb}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}}}{{{f{c}}}A@`{}}0{{{f{{l{Ad}}}}}{{Bd{{l{Ad}}Bb}}}}{{{f{{l{{Bl{c}}}}}}}{{Bd{{l{{Bl{c}}}}Bb}}}Bn}{{{f{{l{A`}}}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{Ab}}}}}{{Bd{{l{Ab}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}n}{{{f{{l{c}}}}{f{B`}}}{{Bd{{f{{l{c}}}}Bb}}}Db}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{c}}}}Fh}{}Db}{{{f{{l{c}}}}Al}{{C`{Lf}}}n}{{{f{{l{c}}}}Al}LdF`}{{{f{{l{E`}}}}Al}Ld}{{{f{{l{Eb}}}}Al}Ld}{{{f{{l{A`}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ab}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ln}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ll}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Mh}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{El}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{{Bl{c}}}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}Bn}{{{f{{l{Jj}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{E`}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Eh}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{K`}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Md}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Jd}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ad}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ml}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ln}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ad}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{K`}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Md}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{E`}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Eh}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{{Bl{c}}}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}Bn}{{{f{{l{Jj}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ll}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Jd}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ml}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ab}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Mh}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{A`}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{El}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{ce{}{}}0{{{f{{l{Bj}}}}}Fh}{{{f{Af}}c}{{l{e}}}Cd{{Db{}{{H`{c}}}}Db}}{{{f{{l{e}}}}c}{{l{e}}}Cd{{Db{}{{H`{c}}}}Db}}{{{f{{l{c}}}}{Fn{{Cf{Cd}}}}}{{l{c}}}Db}{{{l{c}}{f{Af}}}{{l{c}}}Db}{{{f{{An{A@b}}}}e}c{}{{A@d{{f{{l{El}}}}}{{Dd{c}}}}}}{{{f{{l{c}}}}Kl}{{l{c}}}Db}{{{f{{l{c}}}}}{}n}{{{l{c}}}{}n}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}23012323012323012332103232013223{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{C`{B`}}}}}}}}{{{f{{l{Bj}}}}{f{{l{c}}}}e}{{l{Bj}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{C`{B`}}}}}}}}{{{f{{l{c}}}}{f{{l{Ab}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}````{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}c}e{}{}{}}{{c{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}g{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}c}g{}{}{}}{{c{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}g{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}65654654650654654````````````````{{{f{c}}h}b{}}000{{{f{ClA@n}}{f{Cd}}}b}{{{f{ClA@n}}}b}{{{f{ClAA`}}}b}{{{f{ClAAb}}c}b{{Ch{}{{Cb{{C`{d}}}}}}If}}{{{f{Cl{AAd{c}}}}e}bn{{Ch{}{{Cb{C`}}}}If}}{{{f{Cl{AAd{c}}}}e}bn{{Ch{}{{Cb{}}}}If}}{{{f{ClAAf}}}b}{{{f{ClAAh}}}b}65{{{f{ClAAj}}}b}{{{f{ClAAl}}}b}{{{f{ClAAb}}}b}{{{f{ClAAn}}}b}{{{f{Cl{AAd{c}}}}}bn}{{{f{Cl{AB`{c}}}}}b{ABbNj}}{{{f{ClABd}}}b}{{{f{ClABf}}}b}{{{f{Cl{ABh{c}}}}}bn}{{{f{ClA@n}}{C`{{f{Cd}}}}}b}{{{f{ClA@n}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClAAf}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{Cl{AAd{c}}}}{C`{{f{An}}}}}bn}{{{f{Cl{AB`{c}}}}{C`{e}}}b{ABbNj}{{Hl{c}}}}{{{f{ClAAh}}{C`{c}}}b{}}{{{f{ClAAf}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClA@n}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAA`}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAj}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAl}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAb}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAn}}{f{B`}}}{{Bd{bBb}}}}{{{f{Cl{AAd{c}}}}{f{B`}}}{{Bd{bBb}}}n}{{{f{Cl{AAd{c}}}}{f{An}}}bn}{{{f{ClAAj}}c}b{{Ch{}{{Cb{{C`{{f{Af}}}}}}}}If}}{{{f{ClAAl}}c}b{{Ch{}{{Cb{{C`{{f{{An{Al}}}}}}}}}}If}}{{{f{ClAAh}}c}b{}}{{{f{Cl{AB`{c}}}}e}b{ABbNj}{{Hl{c}}}}{{{f{ClABd}}d}b}{{{f{Cl{ABh{c}}}}}bn}{{{f{ClAAj}}c}b{{Ch{}{{Cb{{f{Af}}}}}}}}{{{f{ClAAl}}c}b{{Ch{}{{Cb{{f{{An{Al}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}0000000000{{{f{Clc}}}{{f{Cle}}}{}{}}0000000000`{{{f{{AB`{c}}}}}{{AB`{c}}}{ABbNj}}{{{f{ABd}}}ABd}{{{f{ABf}}}ABf}{{{f{{ABh{c}}}}}{{ABh{c}}}{ABjn}}{{{f{c}}{f{Cle}}}b{}{}}000{{}A@n}{{}AA`}{Fh{{f{c}}}{}}0000000000{Fh{{f{Clc}}}{}}0000000000{Fhb}0000000000{{{f{AAj}}}d}{{{f{AAl}}}d}{{{f{AAb}}}d}{{{f{{AAd{c}}}}}dn}{{{f{AAf}}}d}{{{f{AAj}}}{{f{Mn}}}}{{{f{AAl}}}{{f{Mn}}}}{{{f{AAb}}}{{f{Mn}}}}{{{f{{AAd{c}}}}}{{f{Mn}}}n}{{{f{AAf}}}{{f{Mn}}}}{AAh{{l{c}}}Db}{{{f{ClA@n}}}{{l{j}}}}{{{f{ClAA`}}}{{l{j}}}}{{{f{ClAAn}}}{{l{j}}}}{{{f{ClAAf}}}{{l{j}}}}{{{AB`{{An{Al}}}}}{{l{Ad}}}}{{{AB`{Af}}}{{l{A`}}}}{ABd{{l{Ab}}}}{ABfABl}{{{ABh{c}}}{{l{c}}}n}`{cc{}}0000000000{{{f{Af}}e}ABn{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{Af}}e}ABn{}{{Ch{}{{Cb{c}}}}}}{{{f{Af}}{f{{An{c}}}}}ABn{}}{{{f{Af}}{f{{An{{C`{c}}}}}}}ABn{}}{{{f{Ed}}FhFh{f{Af}}}{{Bd{{Cf{AAf}}Bb}}}}{{}Fh}0000000000{{{f{ClAAj}}}{{Cf{Cd}}}}{{{f{ClAAl}}}{{Cf{Cd}}}}{{{f{ClAAb}}}{{Cf{Cd}}}}{{{f{Cl{AAd{c}}}}}{{Cf{Cd}}}n}{{{f{ClAAf}}}{{Cf{Cd}}}}{ce{}{}}0000000000`{{{f{Af}}Fh{C`{Ed}}}A@n}{{{f{Af}}Fh{C`{Ed}}}AA`}{{{f{Af}}FhFh}AAj}{{{f{Af}}FhFh}AAl}{{{f{Af}}FhFh}AAb}{{{f{Af}}Fh}AAn}{{{f{Af}}FhFhEd}{{AAd{c}}}n}{{{f{Af}}Fh}{{AB`{c}}}{ABbNj}}{{{f{Af}}Fh}ABd}{{{f{Af}}Fh}ABf}{{{f{Af}}Fh}{{ABh{c}}}n}{{{f{Af}}FhFhEdEd}{{AAd{c}}}n}{{{f{ClAAh}}}b}{{{f{ClABd}}}b}{{{f{ClABf}}}b}{{{f{Cl{ABh{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{Bd{e}}}{}{}}000000000000000000000{{{f{c}}}A@`{}}0000000000{ce{}{}}0000000000````````{{{f{ClAAf}}}b}{{{f{ClAAf}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClAAf}}{f{B`}}}{{Bd{bBb}}}}`{{{f{AAf}}}d}{{{f{AAf}}}{{f{Mn}}}}{{{f{ClAAf}}}{{l{j}}}}{{{f{Ed}}FhFh{f{Af}}}{{Bd{{Cf{AAf}}Bb}}}}{{{f{ClAAf}}}{{Cf{Cd}}}}````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{Fb}}}Fb}{{{f{c}}{f{Cle}}}b{}{}}{{}Fb}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{f{Fb}}{f{Fb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{Fb}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{Fb}}{f{Clc}}}bAC`}{{}Fh}{ce{}{}}{{{f{Fb}}}d}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4``{{ACb{f{Af}}}{{l{c}}}Db}{{ACd{f{{l{c}}}}}{{l{c}}}Db}10{{ACd{f{Af}}Ed}{{l{c}}}Db}0{{ACb{f{Af}}}{{Bd{{l{c}}e}}}Db{}}{{ACd{f{{l{c}}}}}{{Bd{{l{c}}e}}}Db{}}10{{ACd{f{Af}}Ed}{{Bd{{l{c}}e}}}Db{}}0`{ACfACf}``{{ACh{f{Af}}Ed}e{}{{ACj{c}}}}{{e{f{Af}}Ed}ACj{}{{Id{}{{Cb{c}}}}}}`````{{{f{c}}}{{f{e}}}{}{}}000{{{f{Clc}}}{{f{Cle}}}{}{}}000{Fh{{f{c}}}{}}000{Fh{{f{Clc}}}{}}000{Fhb}000{cc{}}000{{}Fh}000{ce{}{}}0000000{{{f{ACl}}}ACn}{{{f{AD`}}Ed}ADb}{{{f{ClACn}}}C`}{{{f{ClADb}}}C`}{{{f{ClADd}}}C`}{{{f{Cl{ADf{c}}}}}C`Ch}32{{{f{Cl{ADf{c}}}}}C`Gb}`{{{f{ACn}}}{{Gj{Fh{C`{Fh}}}}}}{{{f{ADb}}}{{Gj{Fh{C`{Fh}}}}}}{{{f{{ADf{c}}}}}{{Gj{Fh{C`{Fh}}}}}Ch}{c{{Bd{e}}}{}{}}0000000{{{f{c}}}A@`{}}000<<<<```````````````````````{{{f{c}}h}b{}}000{{}G`}{{}Il}{{G`G`}G`}{{IlIl}Il}{{{f{ClG`}}G`}b}{{{f{ClIl}}Il}b}3210{{{f{G`}}}Ij}0{{{f{Il}}}Al}05432{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Clc}}}{{f{Cle}}}{}{}}0000{{{f{{Gd{c}}}}}{{Gd{c}}}Db}{{{f{ADh}}}ADh}{{{f{G`}}}G`}{{{f{Il}}}Il}{{{f{c}}{f{Cle}}}b{}{}}000{{{f{ClADj}}}b}{G`G`}{IlIl}{{{f{G`}}G`}d}{{{f{Il}}Il}d}{{}{{Gd{c}}}Db}{{}G`}{{}Il}{Fh{{f{c}}}{}}0000{Fh{{f{Clc}}}{}}0000{{G`G`}G`}{{IlIl}Il}{{}d}{{{Gd{c}}Ij}{{Gd{c}}}Db}{{{Gd{c}}{C`{Ij}}}{{Gd{c}}}Db}{Fhb}0000983{{{f{G`}}{f{G`}}}d}{{{f{Il}}{f{Il}}}d}{{{f{ClG`}}c}b{{Hb{}{{Cb{G`}}}}}}{{{f{ClIl}}c}b{{Hb{}{{Cb{Il}}}}}}7{{{Gd{c}}d}{{Gd{c}}}Db}{{{Gd{c}}{C`{d}}}{{Gd{c}}}Db}{{{f{{Gd{c}}}}G`}{{Gd{c}}}Db}{{{f{{Gd{c}}}}G`}{{Gd{e}}}DbDb}{{{Gd{c}}Il}{{Gd{c}}}Db}{{{Gd{c}}{C`{Il}}}{{Gd{c}}}Db}{{{f{{Gd{c}}}}{f{ClGl}}}{{Bd{bGn}}}Db}{{{f{ADh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{G`}}{f{ClGl}}}{{Bd{bGn}}}}0000{{{f{Il}}{f{ClGl}}}{{Bd{bGn}}}}0000{cc{}}0000{Ij{{C`{G`}}}}{Al{{C`{Il}}}}{IjG`}0{AlIl}010{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}0{cG`{{Hb{}{{Cb{G`}}}}}}{cIl{{Hb{}{{Cb{Il}}}}}}{{{f{Af}}}{{C`{G`}}}}{{{f{Af}}}{{C`{Il}}}}{{{f{{Gd{c}}}}}{{C`{Ij}}}Db}{{{f{{Gd{c}}}}}dDb}{{{f{Il}}}d}{{{f{{Gd{c}}}}}IlDb}{{{f{{Gd{c}}}}}{{C`{f}}}Db}0{{{f{Il}}}Kl}{{}Fh}0000{{{f{ClG`}}G`}b}{{{f{ClIl}}Il}b}{{G`G`}G`}{{IlIl}Il}{{{f{G`}}G`}d}{{{f{Il}}Il}d}{ce{}{}}0000{G`}{Il}{{{f{G`}}}d}>?0>{{{f{{Gd{c}}}}}KlDb}{{{f{{Gd{c}}}}}dDb}0{{{f{G`}}}{{ADl{G`}}}}{{{f{Il}}}{{ADl{Il}}}}{{{f{G`}}}{{ADn{G`}}}}{{{f{Il}}}{{ADn{Il}}}}{{}d}{{}{{f{{AEb{AE`}}}}}}{{{Gd{c}}}{{Gd{c}}}Db}{{{Gd{c}}C`}{{Gd{c}}}Db}{{{f{{Gd{c}}}}{Gd{c}}}{{AEd{c}}}Db}21{G`G`}{IlIl}{{{f{ClG`}}G`}b}{{{f{ClIl}}Il}b}{{{f{ClG`}}G`d}b}{{{f{ClIl}}Ild}b}{{{f{Cl{Gd{c}}}}{C`{Ij}}}bDb}{{{f{Cl{Gd{c}}}}d}bDb}{{{f{ClIl}}d}b}{{{f{Cl{Gd{c}}}}Il}bDb}{{{f{Cl{Gd{c}}}}C`}bDb}033{{{f{Cl{Gd{c}}}}Kl}bDb}{{{f{ClIl}}Kl}b}{{{Gd{c}}Kl}{{Gd{c}}}Db}{{{Gd{c}}{C`{Kl}}}{{Gd{c}}}Db}{{G`G`}G`}{{IlIl}Il}>=10{{{f{c}}}e{}{}}000?>{c{{Bd{e}}}{}{}}000000000{{{f{c}}}A@`{}}000043{ce{}{}}0000{ADjADj}````{{{f{c}}h}b{}}{{{f{{AEf{c}}}}Fh}{{Gj{{AEf{c}}{AEf{c}}}}}Bn}{e{{AEf{c}}}Bn{{Hb{}{{Cb{{f{c}}}}}}}}{e{{AEf{c}}}Bn{{Hb{}{{Cb{{C`{{f{c}}}}}}}}}}{{AEhe}g{}{{Hb{}{{Cb{c}}}}}{}}0{{{f{In}}}{{f{AEj}}}}{{{f{{AEf{c}}}}}{{f{AEj}}}Bn}{{{f{Cl{AEf{c}}}}}{{f{ClAEj}}}Bn}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}`{{{f{{AEf{c}}}}Fh}dBn}{{{f{{AEf{c}}}}}{{AEf{c}}}{ABjBn}}{{{f{c}}{f{Cle}}}b{}{}}{{{f{{AEf{c}}}}}{{f{AEh}}}Bn}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{f{{f{In}}}}{f{{f{In}}}}}d}{{{f{In}}{f{In}}}d}{{{f{{AEf{c}}}}{f{ClGl}}}{{Bd{bGn}}}{AElBn}}{cc{}}{{FhAEh}{{AEf{c}}}Bn}{{{f{{AEf{c}}}}Fh}{{C`{{f{c}}}}}Bn}{{}AEh}{{{f{Hf}}{f{{AEf{c}}}}{f{{AEf{c}}}}}{{AEf{c}}}Bn}{{AEh{f{Hf}}}{{AEf{c}}}Bn}{{{f{Hf}}{f{{AEf{c}}}}}{{AEf{c}}}Bn}0{{}Fh}{ce{}{}}{{{f{{AEf{c}}}}}{}Bn}{{{f{{AEf{c}}}}Fh}dBn}0{{{f{c}}Fh}d{}}{{{f{{AEf{c}}}}}{{AF`{{f{c}}{Ff{c}}AEn}}}Bn}{{{f{{AEf{c}}}}}{{AF`{AEn}}}Bn}{{{f{{AEf{c}}}}}FhBn}0`{{{f{Cl{AEf{c}}}}{C`{Hf}}}bBn}{{{f{Cl{AEf{c}}}}FhFh}bBn}{{{f{c}}FhFh}e{}{}}01{{{f{{AEf{c}}}}Fh}{{Gj{{Cf{Cd}}{Cf{Cd}}}}}Bn}0{{{f{In}}}{{Cf{In}}}}{{{f{{AEf{c}}}}}{{Cf{Cd}}}Bn}{{{f{c}}}e{}{}}{g{{Bd{{AEf{c}}e}}}Bn{}{{Hb{}{{Cb{{Bd{{f{c}}e}}}}}}}}{g{{Bd{{AEf{c}}e}}}Bn{}{{Hb{}{{Cb{{Bd{{C`{{f{c}}}}e}}}}}}}}{{AEhg}{{Bd{ie}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}{}}0{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}{{{f{In}}}{{f{Af}}}}{{}{{f{Af}}}}{{{f{{AEf{c}}}}}{{C`{{f{Hf}}}}}Bn}{{{f{{AEf{c}}}}Fh}{{f{c}}}Bn}0{{{f{{AEf{c}}}}Fh}{}Bn}{{{f{{AEf{c}}}}}{{f{{Lh{{Fn{c}}}}}}}Bn}{{{f{{AEf{c}}}}}{{Ff{c}}}Bn}{{{f{{AEf{c}}}}}{}Bn}{ce{}{}}{{{AEf{c}}{C`{Hf}}}{{AEf{c}}}Bn}{{{f{{AEf{c}}}}{C`{Hf}}}{{Cf{Cd}}}Bn}1`{{{f{Cl{AFb{c}}}}}bBn}0{{{f{Cl{AFb{c}}}}{C`{c}}}bBn}{{{f{Cl{AFb{c}}}}{f{AEj}}}bBn}{{{f{Cl{AFb{c}}}}c}bBn}{{{f{Cl{AFb{c}}}}{f{AEj}}}{{Bd{bBb}}}Bn}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}{{AFb{c}}}Bn}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{AFb{c}}}{{l{{Bl{c}}}}}Bn}{cc{}}{{}Fh}{ce{}{}}{{{f{Af}}Fh}{{AFb{c}}}Bn}{{{f{Cl{AFb{c}}}}}B`Bn}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4````{{{f{ClAFd}}}b}{{{f{ClAFd}}{C`{{f{AEj}}}}}b}{{{f{ClAFd}}{f{AEj}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}`?>={{{f{AFf}}{f{ClGl}}}{{Bd{bGn}}}}<{{{f{Af}}Fh}{{Cf{AFd}}}}{{}{{Lh{Df}}}}{{}AEh}>={{}d}`{{{Cf{Df}}{Lh{Df}}AEh}b}{{{f{ClAFd}}}B`}==<{ce{}{}}``````````````````````````````````````````````{{{f{c}}h}b{}}00{{{f{{AFj{}{{AFh{c}}}}}}g}{{AFj{}{{AFh{c}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{c}}}}}}Dh}}{{{f{AFl}}{f{Df}}}AFl}{{{f{AFl}}{f{Df}}}{{l{c}}}Db}{{{f{{AFj{}{{AFh{c}}}}}}i{f{Cl{An{g}}}}}b{}{}{}{{Df{{C`{e}}{f{g}}}{{Dd{g}}}}}}{{{f{{AFj{}{{AFh{c}}}}}}g}{{AFj{}{{AFh{c}}}}}{}{}{{Df{e}{{Dd{c}}}}Dh}}{{{f{AFn}}Ej}{{l{El}}}}{{{f{AFn}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{AG`}}}{{Bd{{l{El}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{AGb}}{f{Ed}}}{{Bd{B`Bb}}}}0{{{f{AGb}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{Ej}}}Ej}{{{f{En}}}En}{{{f{AGd}}}AGd}{{{f{c}}{f{Cle}}}b{}{}}00{{}Ej}{{}En}{Fh{{f{c}}}{}}00{Fh{{f{Clc}}}{}}00``{Fhb}00{{{f{Ej}}{f{Ej}}}d}{{{f{En}}{f{En}}}d}{{{f{AGd}}{f{AGd}}}d}{{{f{{AGf{}{{Cb{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000{{{f{AGh}}}{{Bd{B`Bb}}}}{{{f{AGh}}}{{Bd{{Gj{B`{Gh{Gf}}}}Bb}}}}`{{{f{AGj}}c}{{Bd{AGjBb}}}{}}{{{f{AGl}}{f{{l{Ab}}}}}{{Bd{{l{c}}Bb}}}Db}`{{{f{Ej}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{En}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{AGd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{En}}}Ej}{cc{}}{{{f{Ej}}}En}11`{{{f{Af}}cFh}AGn{}}{{{f{Af}}Fh}AH`}`{{{f{AHb}}Fh}{{Bd{IhBb}}}}{{{f{AHb}}Fh}Ih}??{{{f{Ej}}{f{Clc}}}bAC`}{{{f{En}}{f{Clc}}}bAC`}{{{f{AGd}}{f{Clc}}}bAC`}{{}Fh}00{ce{}{}}00{{{f{AHd}}}{{Bd{{l{Ab}}Bb}}}}{{{f{AHf}}}{{Bd{{l{Ab}}Bb}}}}{{{f{{AGf{}{{Cb{c}}}}}}e}c{}{}}0``{{{f{AHh}}}{{C`{c}}}{}}{{{f{AHh}}}{{C`{Lf}}}}{{{f{AHj}}}{{C`{c}}}{}}2{{{f{AHh}}}{{C`{{Gj{cc}}}}}{}}``{{{f{AG`}}}{{Bd{FhBb}}}}{{}Ej}{{}En}{{{f{AHl}}FhFh}{{l{c}}}Db}88``{{{f{AGh}}}{{Bd{{Gh{Gf}}Bb}}}}{{{f{AHj}}LfNd}{{Bd{{C`{c}}Bb}}}{}}{{{f{AHn}}}B`}0{{{f{AI`}}}AI`}{{{f{AIb}}{f{Df}}Nf}{{Bd{B`Bb}}}}{{{f{AId}}c{C`{e}}}{{Bd{AIdBb}}}{{Hb{}{{Cb{Ij}}}}}{}}{{{f{AId}}ci}{{Bd{AIdBb}}}{{Hb{}{{Cb{Ij}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{g}}}}}}}}`{{{f{AId}}{f{{l{Ab}}}}{C`{c}}}{{Bd{AIdBb}}}{}}{{{f{AIf}}Gf}{{l{c}}}Db}{{{f{AIh}}Gfc}{{l{e}}}{}Db}{{{f{AIj}}FhFh}AIj}0`{{{f{AFn}}d}{{l{c}}}Db}{{{f{AFn}}Ej}{{l{c}}}Db}{{{f{AIl}}Al}{{C`{Lf}}}}{{{f{AHh}}}{{C`{c}}}{}}{{{f{AIn}}{f{c}}}{{Bd{AInBb}}}Nj}{{{f{AJ`}}{f{c}}}AJ`Nj}{{{f{AJb}}}{{Fn{{f{{An{Al}}}}}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}A@`{}}00{{{f{AG`}}}{{Bd{AG`Bb}}}}8{ce{}{}}00{{Ejd}Ej}{{End}En}1010{{Enc}En{{Hb{}{{Cb{d}}}}}}210{EjEj}{EnEn}`{{{f{AJd}}{f{{l{Ab}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DbDb{{Df{ff}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}Db}{{{l{c}}{l{e}}gik}{{l{m}}}DbDb{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DbDb{{AJf{C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}g}bDbDb{{Dn{C`C`}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDb{}{{Dn{}{{Dd{g}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Af}}}{{l{k}}}DbDb{CdAJh}{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Af}}}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DbDbCd{{Dn{}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDb{}{}{{Dn{C`C`}{{Dd{{Bd{{C`{g}}i}}}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DbDbDb{{AJj{C`C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDbCdAJl{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{H`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Af}}}{{Bd{{l{m}}i}}}DbDbCdAJl{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DbDbAJl{{Dn{ff}{{Dd{{Bd{{Cf{Cd}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DbDbDb{}{}{{Dn{C`C`C`}{{Dd{{Bd{{C`{i}}k}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{CdAJh}AJl{{Dn{f}{{Dd{{Bd{eg}}}}}}}{{Db{}{{H`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Db{{AJn{C`}}}Db}{{{f{{l{c}}}}e}{{l{g}}}DbAJnDb}{{{f{{l{c}}}}g}{{l{i}}}DbCd{{Dn{f}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}{{{l{c}}g}{{l{i}}}DbCd{{Dn{}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{CdAJh}{{Dn{f}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}0{{{f{{l{c}}}}}Fhn}0{{KlKl}Kl}{{{f{{l{El}}}}Ij}{{Bd{bBb}}}}{{{f{{AK`{Ij}}}}Ij}{{Bd{bBb}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAKbd}{{Fn{Ij}}}Db{{Ch{}{{Cb{C`}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{AKb}}}AKb}{{{f{c}}{f{Cle}}}b{}{}}{{}AKb}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{f{AKb}}{f{AKb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AKb}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{AKb}}{f{Clc}}}bAC`}{{}Fh}{ce{}{}}{{{f{{An{f}}}}cIje}{{Fn{Ij}}}{{Ch{}{{Cb{C`}}}}}{{Df{fFhf}{{Dd{d}}}}}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4`{{Fh{f{Cl{Fn{d}}}}}b}```{{{f{AIj}}FhFh}AIj}0{{Fh{f{{An{B`}}}}{f{ClEn}}}{{Bd{{AKd{{l{El}}}}Bb}}}}{{{f{{An{B`}}}}{f{{An{d}}}}{f{{An{d}}}}}{{Bd{AKfBb}}}}{{{f{Af}}{f{{An{B`}}}}{f{{An{d}}}}{f{{An{d}}}}}{{Bd{{l{Eh}}Bb}}}}{{{f{Af}}{f{{An{B`}}}}}{{Bd{{l{Eh}}Bb}}}}{{{f{B`}}}{{Bd{{Cf{Cd}}Bb}}}}{{{f{{An{B`}}}}}{{Bd{AKfBb}}}}{{{f{{An{B`}}}}}{{Bd{{l{Eh}}Bb}}}}0```````````77`{AKhGf}00{{{f{Af}}}{{Bd{EfBb}}}}{{{f{Af}}}{{Bd{AKjBb}}}}{{{f{AKl}}}Gf}333`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}000000000000000000000000000000000{{{f{AKn}}c}AKn{{Dn{{f{B`}}}{{Dd{B`}}}}}}{{{f{AL`}}}d}{{{f{Ih}}}{{`{{Ch{}{{Cb{Ih}}}}}}}}{{{f{Ih}}{f{Cl{Fn{Ih}}}}}b}{{AL`d}AL`}{{{f{{Jh{KbK`}}}}{f{{Jh{KbK`}}}}}}{{{f{Ih}}{f{Ih}}}Ih}{{{f{{l{Bj}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{l{A`}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Ad}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Ab}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AKn}}{f{Bh}}}B`}{{{f{ClALb}}{C`{{f{Af}}}}}b}{{{f{ClAL`}}{f{AL`}}}{{Bd{bBb}}}}{{{f{ClALb}}}b}{{{f{ClALb}}{f{Af}}}b}{{{f{AL`}}Ej}{{l{El}}}}{eALd{}{{Hb{}{{Cb{c}}}}}}0{{AEhe}ALf{}{{Hb{}{{Cb{c}}}}}}0{{{f{Ld}}}Ih}{{{f{Ih}}}Ih}{{{f{{Jh{JfJd}}}}}{{`{If}}}}{{{f{{Jh{JnJj}}}}}{{`{If}}}}{{{f{Ed}}}{{f{Ed}}}}{{{f{Mn}}}{{f{Ed}}}}{{{f{ALh}}}{{f{Ed}}}}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}{{C`{{f{{An{c}}}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{{f{{Jh{KhJj}}}}}{{`{If}}}}{{{f{c}}}{{f{e}}}{}{}}000000000000000000000000000000000000000000{{{f{Clc}}}{{f{Cle}}}{}{}}000000000000000000000000000000000000000000{Ed{{Cf{Ed}}}}{{{AMd{Af}}}AMf}{{{f{AL`}}{f{AL`}}c}{{Bd{AL`Bb}}}AMh}{{{f{AMj}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{Ih}}{f{Ed}}}Ih}{{{f{Ed}}Ed}Ed}{{{f{{Jh{KdJj}}}}Jl}{{Jh{KdJj}}}}{{{f{{Jh{JnJj}}}}Jl}{{Jh{JnJj}}}}{{{f{AMj}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jh{JfJd}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jh{JnJj}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jh{KbK`}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jh{KdJj}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jh{KhJj}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{AL`}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{AKn}}{f{Ed}}Fb}{{Bd{B`Bb}}}}`{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}00000000{{{f{{l{Eb}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{E`}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AKn}}}{{f{{Fn{{Cf{Cd}}}}}}}}{{{f{{Jh{ce}}}}}{{Jh{ce}}}DbDb}{{{f{AMl}}}AMl}{{{f{AMf}}}AMf}{{{f{AL`}}}AL`}{{{f{AKn}}}AKn}{{{f{Ld}}}Ld}{{{f{AMn}}}AMn}{{{f{Ih}}}Ih}{{{f{AN`}}}AN`}{{{f{Ed}}}Ed}{{{f{Mn}}}Mn}{{{f{Jl}}}Jl}{{{f{Ml}}}Ml}{{{f{Md}}}Md}{{{f{El}}}El}{{{f{Ll}}}Ll}{{{f{Mh}}}Mh}{{{f{Ln}}}Ln}{{{f{Jd}}}Jd}{{{f{Jj}}}Jj}{{{f{Eb}}}Eb}{{{f{E`}}}E`}{{{f{Jf}}}Jf}{{{f{Kh}}}Kh}{{{f{A`}}}A`}{{{f{Ad}}}Ad}{{{f{Eh}}}Eh}{{{f{Ab}}}Ab}{{{f{Kb}}}Kb}{{{f{Jn}}}Jn}{{{f{Kd}}}Kd}{{{f{ANb}}}ANb}{{{f{AEh}}}AEh}{{{f{ANd}}}ANd}{{{f{c}}{f{Cle}}}b{}{}}000000000000000000000000000000000{{{f{ClMn}}Ed}b}{ANfe{}{{ALd{c}}AJh}}0{{ANfAEh}e{}{{ALf{c}}AJh}}0{{{f{Ed}}}d}00{{{AMd{Af}}}Ed}{{{f{Mn}}}{{f{Ed}}}}{{{f{{Jh{KdJj}}}}}{{l{Jj}}}}{{}ANh}{{}AMl}{{}AMf}{{}Ih}{{}AN`}{{}Ed}{{}AEh}{Fh{{f{c}}}{}}0{{{f{{Jh{ce}}}}}fDbDb}11111111111111111111111111111111111111111{Fh{{f{Clc}}}{}}00{{{f{Cl{Jh{ce}}}}}{{f{Cl}}}DbDb}1111111111111111111111111111111111111111{{{f{{Jh{KbK`}}}}{f{{Jh{KbK`}}}}}}{{{f{{l{Bj}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{ALbc}AL`{{Hb{}{{Cb{{C`{{f{Af}}}}}}}}}}{Fhb}0000000000000{{{f{ClAKn}}}b}11111111111111111111111111111{{{f{AMj}}}{{f{Ed}}}}{{{f{{Jh{KdJj}}}}}{{f{Ed}}}}{{{f{{Jh{KbK`}}}}}{{f{Ed}}}}{{{f{{Jh{JnJj}}}}}{{f{Ed}}}}{{{f{{Jh{JfJd}}}}}{{f{Ed}}}}{{{f{{Jh{KhJj}}}}}{{f{Ed}}}}{{{f{AL`}}}{{f{Ed}}}}{{{f{AKn}}}{{f{Ed}}}}{{{f{Ld}}}{{f{Ed}}}}{{{f{Ih}}}Ed}`{{{f{AMl}}{f{AMl}}}d}{{{f{Ih}}{f{Ih}}}d}{{{f{AN`}}{f{AN`}}}d}{{{f{Ed}}{f{AEh}}}d}{{{f{Ed}}{f{Ed}}}d}{{{f{Mn}}{f{Mn}}}d}{{{f{Jl}}{f{Jl}}}d}{{{f{AEh}}{f{AEh}}}d}{{{f{ANd}}{f{ANd}}}d}{{{f{Ih}}{f{Ih}}d}d}{{{f{AL`}}{f{{l{A`}}}}}}{{{f{AL`}}{f{Af}}}}{{{f{AL`}}{f{AL`}}}}{{{f{AKn}}{f{AKn}}}{{l{Ab}}}}3210{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{{Jh{ce}}}}}MnDbDb}{{{f{AKn}}{f{Af}}}{{Bd{B`Bb}}}}{{{f{AKn}}}{{f{{An{B`}}}}}}{{{f{ClAKn}}}{{f{Cl{Fn{B`}}}}}}{{{f{AMf}}{f{Af}}}{{C`{Ij}}}}{{AMh{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{ALbAL`}{ANh{{Lh{AMf}}}}{{{f{AMl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{AMf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{AMn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Ih}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{AN`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Ed}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{Mn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Jl}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{AEh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{ANd}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}0{{{l{Jd}}}{{Jh{JfJd}}}}{{{l{Jj}}}{{Jh{KhJj}}}}22222222222222{dIh}{{{f{Af}}}Ih}4{cIhANj}{{{C`{c}}}Ih{{ANl{Ih}}}}{{{f{{An{Al}}}}}Ih}7{{{f{Ih}}}Ed}8{IhEd}{{{f{AEh}}}Ed}{{{f{Ih}}}Mn};{{{f{ANn}}}Mn}<{{{f{ANd}}}Jl}====================={AO`AEh}{AObAEh}?{{{f{AEh}}d}Ed}{{{l{El}}{Lh{AMf}}dAMl}AL`}{{{f{Af}}cJl}{{Jh{KdJj}}}{{Hb{}{{Cb{AOd}}}}}}{{{f{Af}}cJl}{{Jh{KdJj}}}{{Hb{}{{Cb{{C`{AOd}}}}}}}}{{{l{El}}AMl}AL`}{{{f{Af}}c}{{Jh{JfJd}}}{{Hb{}{{Cb{AOf}}}}}}{{{f{Af}}c}{{Jh{JfJd}}}{{Hb{}{{Cb{{C`{AOf}}}}}}}}{{{f{Af}}cJl}{{Jh{JnJj}}}{{Hb{}{{Cb{AKh}}}}}}{{{f{Af}}cJl}{{Jh{JnJj}}}{{Hb{}{{Cb{{C`{AKh}}}}}}}}{{{f{Af}}c}{{Jh{KhJj}}}{{Hb{}{{Cb{AKl}}}}}}{{{f{Af}}c}{{Jh{KhJj}}}{{Hb{}{{Cb{{C`{AKl}}}}}}}}{{{AOj{AOh}}Ed}Mn}{{{f{{l{A`}}}}{f{{AMd{Af}}}}AMl}{{Bd{AL`Bb}}}}{{{Fn{c}}AEh}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{{Fn{c}}AEh}{{AJh{}{{ALj{e}}{ALl{c}}{ALn{g}}}}}{AM`{AMb{e}}}ABj{{Gb{}{{Cb{e}}}}IfHnI`}}{{FhcAEh}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{FhAEh}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{{f{Af}}dFhAMl}AL`}{{{f{Af}}Fh}AKn}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}Fh}{{C`{c}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{{f{AMf}}Ij}{{f{Af}}}}{{{f{{Jh{KbK`}}}}Fh}{{Bd{IhBb}}}}{{{f{{Jh{KhJj}}}}Fh}{{Bd{IhBb}}}}{{{f{{Jh{KdJj}}}}Fh}{{Bd{IhBb}}}}{{{f{{Jh{JfJd}}}}Fh}{{Bd{IhBb}}}}{{{f{{Jh{JnJj}}}}Fh}{{Bd{IhBb}}}}{{{f{AMj}}Fh}{{Bd{IhBb}}}}{{{f{AL`}}Fh}{{Bd{IhBb}}}}{{{f{AKn}}Fh}{{Bd{IhBb}}}}{{{f{{Jh{KbK`}}}}Fh}Ih}{{{f{{Jh{KdJj}}}}Fh}Ih}{{{f{{Jh{KhJj}}}}Fh}Ih}{{{f{{Jh{JfJd}}}}Fh}Ih}{{{f{{Jh{JnJj}}}}Fh}Ih}{{{f{AMj}}Fh}Ih}{{{f{AL`}}Fh}Ih}{{{f{AKn}}Fh}Ih}{{{f{AMf}}}{{f{{AMd{Af}}}}}}{{}Ed}000000000000000000000000{{{f{AMf}}Ij}{{C`{{f{Af}}}}}}{{{f{AL`}}}{{f{{Lh{AMf}}}}}}{{{f{Ed}}}{{C`{{Fn{Fh}}}}}}{{{f{Ih}}}{{C`{{f{Af}}}}}}{{{f{AOl}}Fh}Ih}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}Fh}{{C`{c}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{{f{AL`}}{f{{l{A`}}}}}}{{{f{AL`}}{f{Af}}}}{{{f{AL`}}{f{AL`}}}}{{{f{AKn}}{f{AKn}}}{{l{Ab}}}}3120{{{f{Ih}}{f{Clc}}}bAC`}{{{f{AN`}}{f{Clc}}}bAC`}{{{f{Ed}}{f{Clc}}}bAC`}{{{f{Mn}}{f{Clc}}}bAC`}{{{f{Jl}}{f{Clc}}}bAC`}{{{f{AEh}}{f{Clc}}}bAC`}{{{f{ANd}}{f{Clc}}}bAC`}{{{f{Ih}}{f{Clc}}d}bAC`}{{{f{{Jh{KhJj}}}}}{{l{Mh}}}}{{{f{{Jh{KdJj}}}}}{{l{Jj}}}}{{}Fh}000000000000000000000000000000000000000000{{{f{Ed}}}{{C`{{f{Ed}}}}}}{{{f{AEh}}}{{C`{{f{AEh}}}}}}{ce{}{}}0000000000000000000000000000000000000000000{{{f{AKn}}}}{{{Jh{JnJj}}}B`}{{{Jh{JfJd}}}B`}{{{Jh{KdJj}}}B`}{{{Jh{KhJj}}}B`}{{{Jh{KbK`}}}B`}{AL`B`}{AKnB`}{{Ld{f{Af}}}B`}{Ih{{Bd{IhBb}}}}{{{f{Ed}}}d}00{{{f{Ih}}}d}11{{{f{AL`}}}d}{{{f{AKn}}}d}1323{{{f{AMf}}}d}34440443434344443444434{{{f{AEh}}}d}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}{{AF`{cgAEn}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{{f{AKn}}}ADd}{{{f{AL`}}}AOn}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}{{C`{c}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{{f{Ed}}}{{f{Ed}}}}{{{f{AMf}}}Fh}{{{f{AL`}}}Fh}{{{f{AKn}}}Fh}{{{f{AL`}}{f{{l{A`}}}}}}{{{f{AL`}}{f{AL`}}}}{{{f{AL`}}{f{Af}}}}{{{f{AKn}}{f{AKn}}}{{l{Ab}}}}2310{{{f{AL`}}{f{AL`}}}{{Bd{{Gj{AL`AL`}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gj{{l{j}}{l{j}}}}Bb}}}}{{{f{Ed}}{f{Ed}}}{{Bd{dBb}}}}{{{f{AN`}}}{{C`{Ed}}}}{{{f{AL`}}}Ld}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}{{{f{ClANh}}{f{{Lh{AMf}}}}}{{Bd{bBb}}}}{{{f{{Jh{KdJj}}}}}{{l{Jj}}}}03{{{f{{Jh{KhJj}}}}}{{l{Mh}}}}1{{{f{{Jh{JfJd}}}}{C`{{f{AKj}}}}}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{{Jh{JnJj}}}}{C`{{f{AKj}}}}}{{Bd{{Jh{JnJj}}Bb}}}}10{{{f{{Jh{KbK`}}}}{f{{Jh{KbK`}}}}}}{{{f{{l{Bj}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{AL`}}}{{Bd{FhBb}}}}{{{f{AL`}}}{{f{Af}}}}{{{f{AKn}}}{{f{{AOj{AOh}}}}}}{{{f{Mn}}}{{f{{AOj{AOh}}}}}}`{{{f{{Jh{KhJj}}}}}{{l{Jd}}}};{{}c{}}0{{{f{Af}}FhAMl}ALb}{{{f{Af}}c}{{Jh{KdJj}}}{{Hl{{An{{C`{AOd}}}}}}}}{{{f{Af}}c}{{Jh{KhJj}}}{{Hl{{An{{C`{AKl}}}}}}}}{{{f{Af}}c}{{Jh{KdJj}}}{{Hl{{An{AOd}}}}}}{{{f{Af}}c}{{Jh{JfJd}}}{{Hl{{An{{C`{AOf}}}}}}}}{{{f{Af}}c}{{Jh{JnJj}}}{{Hl{{An{{C`{AKh}}}}}}}}{{{f{Af}}c}{{Jh{JnJj}}}{{Hl{{An{AKh}}}}}}{{{f{Af}}c}{{Jh{JfJd}}}{{Hl{{An{AOf}}}}}}{{{f{Af}}c}{{Jh{KhJj}}}{{Hl{{An{AKl}}}}}}{{{Lh{AMf}}}ANh}{{{f{Af}}{f{{An{B`}}}}}{{Bd{AKnBb}}}}{{EdIh}Ld}{{{f{Af}}Ed}Mn}{{{l{c}}}{{Jh{ec}}}DbDb}{{{f{ClAOn}}}C`}{{{f{AL`}}{f{{l{A`}}}}}}{{{f{AL`}}{f{Af}}}}{{{f{AL`}}{f{AL`}}}}{{{f{AKn}}{f{AKn}}}{{l{Ab}}}}3210{{{f{AL`}}}Fh}{{{f{AKn}}}Fh}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}}{{Jh{JfJd}}}}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}}{{Jh{KhJj}}}}{{{f{Ih}}{f{Ih}}}{{C`{B@`}}}}{{{f{Jl}}{f{Jl}}}{{C`{B@`}}}}{{{f{AL`}}}{{f{{l{El}}}}}}{{{f{{Jh{KbK`}}}}}{{C`{Fh}}}}{{{f{ClAKn}}}b}{{{f{AKn}}}{{f{Mn}}}}{{{f{ClALb}}{f{Af}}}{{Gj{Ijd}}}}{{{f{{l{Bj}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{ClAKn}}{f{Af}}}b}{{{f{{Jh{JnJj}}}}{f{{l{A`}}}}{C`{{f{AKj}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{{Jh{JfJd}}}}{f{{l{A`}}}}{C`{{f{AKj}}}}}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{AKn}}}{{Bd{{l{Eh}}Bb}}}}{{{f{AMf}}{f{AMf}}}d}{{{f{{Jh{KbK`}}}}}Fh}{{{f{{Jh{KhJj}}}}}{{l{Mh}}}}{{{f{{Jh{KdJj}}}}}{{l{Jj}}}}{{{f{ClMn}}{AOj{AOh}}}b}{{{f{Cl{Jh{JnJj}}}}Jl}b}{{{f{Cl{Jh{KdJj}}}}Jl}b}{{{f{Cl{Jh{JnJj}}}}Ef}{{Bd{bBb}}}}{{{f{AOn}}}{{Gj{Fh{C`{Fh}}}}}}{{{f{AL`}}d}AL`}{{{f{AL`}}Ej}AL`}{{{f{{Jh{KhJj}}}}{f{Af}}}{{l{A`}}}}{{{f{{Jh{JfJd}}}}{f{Af}}}{{l{A`}}}}{{{f{{Jh{JnJj}}}}{f{Af}}}{{Bd{{l{A`}}Bb}}}}{{{f{Ih}}{f{Ed}}}{{C`{Ih}}}}{{{f{{Jh{KbK`}}}}{f{{Jh{KbK`}}}}}}{{{f{{l{Bj}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{Jh{KdJj}}}}}Jl}{{{f{{Jh{JnJj}}}}}Jl}{{{f{{Jh{JnJj}}}}}{{f{{C`{Ef}}}}}}{{{f{AL`}}dd}{{Cf{Cd}}}}{{{f{Ed}}d}AEh}{{{f{Mn}}d}ANn}{JlANd}{{{f{Ed}}{f{Af}}d}ANn}{Jl{{f{Af}}}}{{{f{AL`}}{f{{AMd{Af}}}}B@b}AL`}{{{f{AL`}}}{{Bd{AL`Bb}}}}{{{f{AL`}}}AL`}{{{f{AEh}}}{{f{AEh}}}}{{{f{c}}}e{}{}}000000000000000000000000000000000{{{f{Ed}}}Ed}{{{f{AEh}}}B@d}{{{f{{Jh{KhJj}}}}{f{Af}}}{{l{A`}}}}{{{f{{Jh{JfJd}}}}{f{Af}}}{{l{A`}}}}{{{f{{Jh{JnJj}}}}{f{Af}}}{{Bd{{l{A`}}Bb}}}}{{{f{c}}}Ef{}}00{{{f{Ih}}{f{Ih}}}d}{{{f{AKn}}}Fh}{{{f{{Jh{JnJj}}}}{C`{{f{AKj}}}}{f{{l{A`}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{{Jh{JfJd}}}}{C`{{f{AKj}}}}{f{{l{A`}}}}}{{Bd{{Jh{JfJd}}Bb}}}}{g{{Bd{ALde}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{{AEhg}{{Bd{ALfe}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{ANf{{Bd{eg}}}{}{{ALd{c}}AJh}{}}0{{ANfAEh}{{Bd{eg}}}{}{{ALf{c}}AJh}{}}0{{{f{Ih}}}{{Bd{cBb}}}Lb}{c{{Bd{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{Ih}}{f{Ed}}}{{Bd{IhBb}}}}{{{f{Ed}}d}{{Bd{AEhBb}}}}{{{f{c}}}A@`{}}000000000000000000000000000000000000000000{{{f{AEh}}}AEh}{{{f{AL`}}}{{Bd{AL`Bb}}}}{AKnB@f}{{{f{ClLd}}Ih}b}{{{f{AL`}}}d}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}Fh}cABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{{f{Ld}}}{{f{Ih}}}}{{{f{AL`}}}{{Bd{B@fBb}}}}2{{{f{Ed}}Ih}d}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}gABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{ce{}{}}000000000000000000000000000000000000000000{Fhc{}}0{{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}{C`{Hf}}}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{{f{Ed}}}Ih}```````````{{{f{AL`}}{f{AL`}}c}{{Bd{AL`Bb}}}AMh}{{AMh{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{{{f{AL`}}{f{AL`}}}{{Bd{{Gj{AL`AL`}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gj{{l{j}}{l{j}}}}Bb}}}}`````````{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}B@h}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{{}b}{{{f{ClB@h}}}b}{Fhb}2{cc{}}6{{}Fh}{ce{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}{{}d}3``````````````````````````{{{f{B@j}}}{{f{Af}}}}>>>===`{{BbB@j}Bb}{BbBb}=={{{f{B@j}}}f}>===:::`{{{f{B@l}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{B@j}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{Bb}}{f{ClGl}}}{{Bd{bGn}}}}0<{cB@j{{ANl{{Dj{Af}}}}}}={B@nBb}{BA`Bb}{BAbBb}{cc{}}{BAdBb}{BAfBb}{BAhBb}{{}{{Fj{{f{Af}}B@l}{{Dd{b}}}}}}{{}Fh}00{ce{}{}}00{cBbAJl}````{{{Fj{{f{Af}}B@l}{{Dd{b}}}}}b}{cBbBAj}{{{f{c}}}Ef{}}0{c{{Bd{e}}}{}{}}00000{{{f{c}}}A@`{}}00666``````````````````{{{f{c}}h}b{}}00{{{f{ClB@f}}{Fn{B`}}{f{BAl}}}{{Bd{bBb}}}}{{{f{B@f}}{f{Df}}}{{Fn{B`}}}}0{{{f{B@f}}{f{{l{Ab}}}}}{{Bd{B@fBb}}}}{{{f{B@f}}{f{{An{{AOj{AOh}}}}}}}{{Bd{B@fBb}}}}0{{{f{B@f}}GfFh}B@f}{{{f{ClB@f}}}{{f{ClB@f}}}}{{{f{ClB@f}}{f{Af}}e}{{Bd{{f{ClB@f}}Bb}}}BAn{{A@d{{f{B`}}}{{Dd{c}}}}}}{{{f{ClB@f}}Fhe}{{Bd{{f{ClB@f}}Bb}}}BAn{{A@d{{f{B`}}}{{Dd{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Clc}}}{{f{Cle}}}{}{}}0000{{{f{B@f}}}B@f}{{{f{BB`}}}BB`}{{{f{BBb}}}BBb}2{{{f{c}}{f{Cle}}}b{}{}}00{{{f{B@f}}{f{Af}}}{{Bd{{f{B`}}Bb}}}}{{{f{B@f}}e}{{Bd{{Fn{{f{B`}}}}Bb}}}{{Hl{Af}}}{{Hb{}{{Cb{c}}}}}}{{}BBb}{{}B@f}{Fh{{f{c}}}{}}0000{Fh{{f{Clc}}}{}}0000{Fhb}0000{{{f{B@f}}{f{Af}}}{{Bd{B@fBb}}}}{{{f{ClB@f}}{f{Af}}}{{Bd{B`Bb}}}}{{{f{B@f}}{f{{An{c}}}}}B@f{{Hl{Af}}}}{{{f{B@f}}{f{{BBd{{f{Af}}O`}}}}}B@f}{{{f{B@f}}{C`{{f{{An{c}}}}}}}{{Bd{B@fBb}}}{{Hl{Af}}}}{{{f{B@f}}}{{Fn{Ed}}}}9{{{f{BBb}}{f{BBb}}}d}{{{f{B@f}}{f{B@f}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{B@f}}}Fh}`{{{f{B@f}}e}{{Bd{B@fBb}}}{{Hl{Af}}}{{Hb{}{{Cb{c}}}}}}{{{f{B@f}}{Fn{B`}}}{{Bd{B@fBb}}}}{{{f{ClB@f}}{f{B@f}}}{{Bd{bBb}}}}{{{f{B@f}}}{{Fn{Mn}}}}{{{f{B@f}}AGd}{{Bd{B@fBb}}}}{{{f{B@f}}{f{{l{Ab}}}}}{{Bd{B@fBb}}}}{{{f{BB`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BBb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{B@f}}{f{ClGl}}}{{Bd{bGn}}}}0{cc{}}0000{AKnB@f}{{{f{BBf}}}B@f}{{{f{BAl}}}B@f}{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}{cB@f{{Hb{}{{Cb{B`}}}}}}{{{f{{An{BBh}}}}}{{Bd{B@fBb}}}}{{{f{{An{BBh}}}}{f{BAl}}}{{Bd{B@fBb}}}}{{c{f{BAl}}}{{Bd{B@fBb}}}{{Ch{}{{Cb{{f{BBh}}}}}}}}{{{f{B@f}}Fh}{{C`{{Fn{Ih}}}}}}{{{f{B@f}}{f{Af}}}{{C`{Fh}}}}{{{f{B@f}}}{{Fn{{f{Af}}}}}}{{{f{B@f}}}{{Fn{{AOj{AOh}}}}}}{{{f{B@f}}}{{f{{An{B`}}}}}}{{{f{ClB@f}}}{{f{Cl{Fn{B`}}}}}}{{{f{B@f}}Fh}{{Bd{BBhBb}}}}{{{f{B@f}}Fh{f{ClBBh}}}{{Bd{bBb}}}}{{{f{B@f}}Fh{f{ClBBh}}}b}{{{f{B@f}}}{{C`{{Bd{EdBb}}}}}}`{{{f{B@f}}e}{{Bd{BBjBb}}}{{Hl{Af}}}{{Hb{}{{Cb{c}}}}}}{{{f{B@f}}{Fn{B`}}{f{BBl}}}{{Bd{{Gj{B`{Fn{B`}}Bh}}Bb}}}}1{{{f{B@f}}{Fn{B`}}dd}{{Bd{BBjBb}}}}{{{f{BBb}}{f{Clc}}}bAC`}{{{f{B@f}}{C`{Fh}}}B@f}{{{f{B@f}}}Fh}{{{f{B@f}}{f{{An{B`}}}}}{{Bd{B@fBb}}}}{{{f{ClB@f}}{f{{An{B`}}}}}{{Bd{{f{ClB@f}}Bb}}}}{{{f{ClB@f}}{f{{An{B`}}}}}{{f{ClB@f}}}}{{{f{B@f}}{BBn{Fh}}}f}{{{f{B@f}}Fh}f}{{{f{B@f}}{Lj{Fh}}}f}{{{f{B@f}}{BC`{Fh}}}f}{{{f{B@f}}BCb}f}{{{f{B@f}}{BCd{Fh}}}f}{{{f{B@f}}{BCf{Fh}}}f}{{{f{B@f}}{f{Af}}}f}{{}Fh}0000{{{f{ClB@f}}Fhc}{{Bd{{f{ClB@f}}Bb}}}BAn}{ce{}{}}000000{{B@f{f{Af}}}AKn}{{{f{B@f}}}{{Bd{{l{Ab}}Bb}}}}{{{f{B@f}}}d}1{{{f{B@f}}}{{Ff{B`}}}}{{{f{B@f}}d}BCh}{{{f{B@f}}}BCj}{B@fBCl}{{{f{B@f}}}{{Bd{{C`{B`}}Bb}}}}{{{f{B@f}}BB`}{{Bd{{C`{B`}}Bb}}}}{{{f{B@f}}ce}{{Bd{B@fBb}}}{{BCn{{AOj{AOh}}}}}{{BCn{{AOj{AOh}}}}}}{{{f{B@f}}BD`}{{Bd{B@fBb}}}}3{{{f{B@f}}}Fh}{{{Fn{c}}}{{Bd{B@fBb}}}BAn}{{{Fn{B`}}}B@f}{{{Fn{B`}}}{{Bd{B@fBb}}}}{{{f{ClBCh}}}C`}{{{f{ClBCj}}}C`}{{{f{B@f}}}B@f}{{B@fe}{{Bd{cBb}}}{}{{Df{B@f}{{Dd{{Bd{cBb}}}}}}}}{{{f{ClB@f}}e}{{Bd{cBb}}}{}{{Df{{f{ClB@f}}}{{Dd{{Bd{cBb}}}}}}}}{{B@fgc}{{Bd{eBb}}}{}{}{{Df{B@fc}{{Dd{{Bd{eBb}}}}}}}}{{{f{ClB@f}}}{{C`{B`}}}}{{{f{B@f}}{f{B@f}}}d}{{{f{ClB@f}}{f{Af}}{f{Af}}}{{Bd{{f{ClB@f}}Bb}}}}{{{f{ClB@f}}{f{Af}}c}{{Bd{{f{ClB@f}}Bb}}}BAn}{{{f{ClB@f}}Fhc}{{Bd{{f{ClB@f}}Bb}}}BAn}18{{{f{B@f}}{Fn{B`}}{f{BDb}}}{{Bd{{Gj{B`{Fn{B`}}Bh}}Bb}}}}`{{{f{B@f}}{f{B`}}dd{C`{Jb}}}{{Bd{B@fBb}}}}0{{{f{B@f}}Fhdd{C`{Jb}}}{{Bd{B@fBb}}}}{{{f{B@f}}}BAl}{{{f{B@f}}{f{B@f}}}{{Bd{bBb}}}}{{{f{B@f}}e}{{Bd{B@fBb}}}{{Hl{Af}}}{{Hb{}{{Cb{c}}}}}}{{{f{B@f}}Fh}{{C`{{f{B`}}}}}}{{{f{B@f}}c}{{Bd{B@fBb}}}{{BDd{Fh}}}}2{{{f{B@f}}c}{{Bd{{Fn{B`}}Bb}}}{{BCn{{AOj{AOh}}}}}}{{{f{B@f}}e{f{{Lh{BAl}}}}}{{Bd{B@fBb}}}{{Hl{Af}}}{{Hb{}{{Cb{c}}}}}}{{{f{B@f}}e{f{BAl}}}{{Bd{B@fBb}}}{{Hl{Af}}}{{Hb{}{{Cb{c}}}}}}{{{f{ClB@f}}{f{{An{c}}}}}{{Bd{bBb}}}{{Hl{Af}}}}{{{f{B@f}}}{{Gj{FhFh}}}}{{{f{B@f}}Gf}B@f}{{{f{B@f}}}d}{{{f{ClB@f}}}b}{{{f{BCh}}}{{Gj{Fh{C`{Fh}}}}}}{{{f{BCj}}}{{Gj{Fh{C`{Fh}}}}}}{{{f{B@f}}GfFh}B@f}0{{{f{B@f}}cEn}{{Bd{B@fBb}}}{{BCn{{AOj{AOh}}}}}}{{{f{ClB@f}}cEn}{{Bd{{f{ClB@f}}Bb}}}{{BCn{{AOj{AOh}}}}}}{{{f{ClB@f}}}{{`{{Ch{}{{Cb{B@f}}}}}}}}{{B@fFhd}{{Fn{B@f}}}}{{{f{B@f}}BB`}{{Bd{{C`{B`}}Bb}}}}{{{f{B@f}}{C`{Fh}}}B@f}{{{f{B@f}}{f{{l{El}}}}}{{Bd{B@fBb}}}}{{{f{B@f}}{f{{l{El}}}}}B@f}{{{f{B@f}}{f{{l{El}}}}d}B@f}{{{f{B@f}}}{{f{B@f}}}}{{{f{B@f}}BDf}{{Bd{{Oj{Od{Oh{{Of{Fh}}}}}}Bb}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Ef{}}{{{f{B@f}}FhcEn}{{Bd{B@fBb}}}{{BCn{{AOj{AOh}}}}}}{{{f{ClB@f}}{C`{{f{Af}}}}{C`{{On{Ef{Fn{Ef}}}}}}}{{Bd{B@fBb}}}}{{{f{ClB@f}}{f{Af}}e}{{Bd{{f{ClB@f}}Bb}}}BAn{{A@d{{f{B`}}}{{Dd{{Bd{cBb}}}}}}}}{{{f{ClB@f}}Fhe}{{Bd{{f{ClB@f}}Bb}}}BAn{{A@d{{f{B`}}}{{Dd{{Bd{cBb}}}}}}}}{c{{Bd{e}}}{}{}}0000{BDh{{Bd{B@fBb}}}}{{{Gj{{BDj{{Cf{Cd}}}}{f{{An{ANn}}}}}}}{{Bd{B@fBb}}}}{{c{f{BAl}}}{{Bd{B@fBb}}}{{Ch{}{{Cb{{Bd{{f{BBh}}Bb}}}}}}}}{{{f{B@f}}{f{Af}}}{{Bd{FhBb}}}}44444{{{f{c}}}A@`{}}0000{{{f{B@f}}{C`{{f{{An{Ef}}}}}}BBb{C`{{Gj{GfFh}}}}}{{Bd{B@fBb}}}}{{{f{B@f}}d{C`{{f{{An{Ef}}}}}}BBb{C`{{Gj{GfFh}}}}}{{Bd{B@fBb}}}}1{{{f{B@f}}c}{{Bd{B@fBb}}}{{BCn{Ef}}}}{{{f{B@f}}c{f{Af}}BDl}{{Bd{B@fBb}}}{{BCn{Ef}}}}0{{{f{B@f}}{f{B@f}}}{{Bd{B@fBb}}}}{{{f{ClB@f}}{f{B@f}}}{{Bd{{f{ClB@f}}Bb}}}}{ce{}{}}0000{{{f{B@f}}}Fh}{{{f{ClB@f}}c}{{Bd{{f{ClB@f}}Bb}}}BAn}{{{f{ClB@f}}c{f{BAl}}}{{Bd{{f{ClB@f}}Bb}}}BAn}{{{f{ClB@f}}B`}{{f{ClB@f}}}}{{{f{B@f}}{f{Af}}{C`{Ij}}}{{Bd{B@fBb}}}}{{{f{ClB@f}}{f{Af}}{C`{Ij}}}{{f{ClB@f}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{BD`}}}BD`}{{{f{c}}{f{Cle}}}b{}{}}{{}BD`}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{f{BD`}}{f{BD`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BD`}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{BD`}}{f{Clc}}}bAC`}`{{}Fh}{ce{}{}}`{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}```3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BBj}}}{{Bd{B@fBb}}}}`{{{f{BDn}}}{{f{{An{{BE`{Ij}}}}}}}}{{{f{BBj}}c}{{Bd{B@fBb}}}{{Dn{B@f}{{Dd{{Bd{B@fBb}}}}}}HnI`}}{{{f{Bh}}}{{l{j}}}}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Clc}}}{{f{Cle}}}{}{}}0000000{{{f{BDn}}}BDn}{{{f{Bh}}}Bh}{{{f{BBj}}}BBj}{{{f{BEb}}}BEb}{{{f{c}}{f{Cle}}}b{}{}}000:{{}BDn}{{}Bh}{Fh{{f{c}}}{}}00{{{f{BEd}}}f}11111{Fh{{f{Clc}}}{}}0000000`{{BEfc}{}BEh}{Fhb}0000{{{f{ClBDn}}}b}111{{{f{BDn}}{f{BDn}}}d}{{{f{Bh}}{f{Bh}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BEj}}}Ij}{{{f{BDn}}}{{f{{An{Ij}}}}}}{{{f{BBj}}}{{Bd{B@fBb}}}}{{{f{ClBDn}}}{{f{Cl{Fn{Ij}}}}}}{{{f{BDn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Bh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BBj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BEb}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{Af}}BEb}Ef}{cc{}}000{{{Fn{{Gj{Ij{BE`{Ij}}}}}}}BDn}{{{Fn{{Fn{{Gj{Ij{BE`{Ij}}}}}}}}}BDn}{{{Fn{{Gj{{Fn{Ij}}{Fn{{BE`{Ij}}}}}}}}}BDn}3{BDnBh}444{BElBEb}{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}{cBDn{{Hb{}{{Cb{{Gj{Ij{BE`{Ij}}}}}}}}}}{cBDn{{Id{}{{Cb{{Gj{Ij{BE`{Ij}}}}}}}}}}{{{f{Bh}}Fh}BEj}{{{f{BBj}}}{{f{Bh}}}}{{{f{ClBBj}}}{{f{ClBh}}}}{{{f{Bh}}}{{l{El}}}}{{{f{BEn}}dd}{{Bd{BhBb}}}}{{{f{BBj}}}{{Bd{B@fBb}}}}{{{f{ClBh}}}{{f{ClBDn}}}}{{}Fh}0000000{ce{}{}}0000000{BhBDn}1{BDn}{{{f{BDn}}}}310{{{f{BEj}}}d}{{{f{Bh}}}d}{{{f{BDn}}}d}{{{f{BDn}}}{{BFb{{BF`{{Ff{Ij}}}}{Ff{{BE`{Ij}}}}}}}}{{{f{Bh}}}BFd}{{{f{BBj}}}{{Fn{B`}}}}{{{f{BBj}}{C`{{Gj{GfFh}}}}}{{Fn{B`}}}}={{{f{BEj}}}Fh}{{{f{Bh}}}Fh}?????{{{Fn{Ij}}{Fn{{BE`{Ij}}}}d}BDn}{{{f{B@f}}{Fn{B`}}Bh{C`{{Fn{Ef}}}}}BBj}{{{f{ClBFd}}}C`}{{{f{ClBFd}}Fh}C`}{{{f{BBj}}c}{{Bd{B@fBb}}}{{Df{B@f}{{Dd{{Bd{B@fBb}}}}}}HnI`}}{{{f{c}}}{}{}}{{{f{Bh}}}BEf}{{{f{BBj}}LfNd}{{Bd{B@fBb}}}}{{BBje}BBj{{Hl{Af}}}{{Hb{}{{Cb{c}}}}}}{{{f{Bh}}GfFh}BEd}{{{f{ClBDn}}}b}{{{f{ClBh}}}b}{{{f{BBj}}Al}{{Bd{B@fBb}}}}{{{f{BBj}}}{{Bd{B@fBb}}}}{Bh{{Fn{Ij}}}}0{BBjBh}{{{f{ClBBj}}}Bh}{{{f{c}}}e{}{}}000{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}000000000000000{{{f{c}}}A@`{}}0000000{BhBh}{{{f{Bh}}}{{f{BDn}}}}{{{f{Bh}}}{{f{{Fn{{Of{Ij}}}}}}}};{ce{}{}}0000000`````{{{f{BDn}}c}B`{{Df{{Gj{Ij{f{{BE`{Ij}}}}}}}{{Dd{C`}}}}HnI`}}{{{f{BDn}}c}B`{{Df{{Gj{Ij{f{{BE`{Ij}}}}}}}{{Dd{}}}}HnI`}}{{{f{{An{{Of{Ij}}}}}}c}B`{{Df{{Of{Ij}}}{{Dd{C`}}}}HnI`}}{{{f{{An{{Of{Ij}}}}}}c}B`{{Df{{Of{Ij}}}{{Dd{}}}}HnI`}}{{{f{{An{c}}}}e{C`{{Lh{AEj}}}}}{{AK`{c}}}{BFfBFh}{{Ch{}{{Cb{{Gj{IjIj}}}}}}If}}{{{f{{An{c}}}}{f{Hf}}e{C`{{Lh{AEj}}}}}{{AK`{c}}}{BFfBFh}{{Ch{}{{Cb{{Gj{IjIj}}}}}}If}}{{{f{{l{c}}}}IjIj}{{l{c}}}Db}{{{f{{Fn{{Of{Ij}}}}}}{f{{An{{Cf{Cd}}}}}}}d}{{{f{BFj}}{f{Bh}}}B`}{{BFlBFl}BFl}0`{{{f{BFn}}{f{B@f}}{f{Bh}}}{{Bd{B`Bb}}}}{{{f{BFn}}}{{Bd{{f{Af}}Bb}}}}````````````````````````````````````{{{f{c}}h}b{}}00{{{f{ClBG`}}Ih}{{C`{b}}}}{{{f{ClBGb}}{f{Ih}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{BG`}}}BG`}{{{f{BGb}}}BGb}{{{f{BBh}}}BBh}{{{f{c}}{f{Cle}}}b{}{}}00{{{f{{An{c}}}}}Ed{{Hh{Ed}}}}{{}BBh}{Fh{{f{c}}}{}}00{Fh{{f{Clc}}}{}}00{Fhb}00{{{f{BBh}}{f{BBh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BBh}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{Gj{{f{Ed}}Fh}}}BG`}{{{Gj{{f{Ed}}Fh}}}BGb}22{{eFh}BAl{{ANl{Ed}}}{{Ch{}{{Cb{{Fn{{Gj{Efc}}}}}}}}}}{{}Fh}00{ce{}{}}00{BG`B`}{BGbB`}{{{f{Ed}}Fh}BG`}{{{f{Ed}}Fh}BGb}{{{Fn{Ih}}}BBh}{{{f{ClBG`}}Fh}B`}{{{f{ClBGb}}Fh}B`}{{{f{{An{BBh}}}}{C`{Fh}}}{{Bd{BAlBb}}}}0{{{f{{An{BBh}}}}{C`{Fh}}}{{Bd{{Fn{Ed}}Bb}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}A@`{}}00<<<{{{f{{An{B@f}}}}}{{Bd{B@fBb}}}}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{B@f{f{{An{{f{Af}}}}}}{f{{An{{f{Af}}}}}}{C`{{f{Af}}}}{f{B@f}}}B@f}{{BClc}{{Bd{B@fBb}}}{{Df{BGd{f{Cl{BGh{BGf}}}}{f{Cl{BGh{BGj}}}}}{{Dd{{Bd{bBb}}}}}}}}{{{f{BGl}}{f{{An{Ij}}}}dd}B@f}{{{f{BGl}}{Gj{{On{{Fn{Ij}}{Fn{Nl}}}}{On{{Fn{A@b}}{Fn{Nl}}}}}}{f{B@f}}BGn}{{Bd{B@fBb}}}}{{{f{BGl}}{f{B@f}}{f{B`}}{f{B`}}BGn}{{Bd{B@fBb}}}}{{{f{Af}}{f{Af}}}Ef}{{{f{BGl}}{f{B@f}}{f{B`}}{f{B`}}BGnd{C`{{f{{An{{f{Af}}}}}}}}}{{Bd{B@fBb}}}}{{{f{BDh}}Fh}{{Gj{BDhBDh}}}}{{{f{BH`}}{f{{An{Nl}}}}Kl}B@f}0{{{f{BH`}}{f{{An{Nl}}}}}B@f}0{{{f{BHb}}{C`{{Fn{{f{Af}}}}}}{C`{{f{Af}}}}d}{{Bd{B@fBb}}}}{{BCld}BCl}{{{BHd{c}}{C`{{Lh{BHf}}}}}{{BHd{c}}}BHh}{{{f{B`}}}{{Bd{B`Bb}}}}{BHjBHj}{{{BHl{}{{Dd{c}}}}{f{B`}}}c{}}{{BHjBHj}}{{{f{BDl}}Gf{C`{{f{AKj}}}}}{{Bd{GfBb}}}}0{{{f{BHn}}{f{B`}}}{{Bd{B`Bb}}}}1{{BI`c}BCl{{Hl{{An{BHj}}}}}}5`{{BHj{f{Af}}}BHj}{{}BHj}{{BHjd}BHj}{c{{Bd{BHjBb}}}{{Hl{{An{BHj}}}}}}{{{f{{Lh{ce}}}}}{{f{e}}}{}BIb}{{BIdd}BId}`{{{f{BIf}}}d}{{{f{BIh}}}d}11`{{BHjc}BHj{{ANl{BHj}}}}{{{Lh{BIf}}BIj}{{Bd{BClBb}}}}76{{BHjcd}BHj{{ANl{BHj}}}}{{{f{ClAAf}}}b}{{{f{ClAAh}}}b}{{{f{ClAAf}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClAAh}}{C`{c}}}b{}}{{{f{ClAAf}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAh}}c}b{}}{{{f{{AFj{}{{AFh{c}}}}}}g}{{AFj{}{{AFh{c}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{c}}}}}}Dh}}{{BI`c{Lh{BAl}}}BCl{{Df{B@f}{{Dd{{Bd{B@fBb}}}}}}HnI`}}{{BHjc{BIn{{Lh{BIl}}}}}BHj{{Df{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`}}{{BHjBHjc{BIn{{Lh{BIl}}}}}BHj{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`}}{{{f{BHj}}{f{Clc}}f}{{Bd{BJ`Bb}}}{{Dn{{f{BHj}}f}{{Dd{{Bd{BJ`Bb}}}}}}}}{{{f{AFl}}{f{Df}}}AFl}{{{f{AFl}}{f{Df}}}{{l{c}}}Db}{{BHjc{f{{An{BHj}}}}{BIn{{Lh{BIl}}}}}BHj{{Df{{f{Cl{An{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`}}{{BHjBJb{f{{An{BHj}}}}dd}BHj}{{ce{BIn{{Lh{BIl}}}}d}BHj{{Df{{f{Cl{An{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`}{{Hl{{An{BHj}}}}}}{{{f{{AFj{}{{AFh{c}}}}}}i{f{Cl{An{g}}}}}b{}{}{}{{Df{{C`{e}}{f{g}}}{{Dd{g}}}}}}{{{f{{AFj{}{{AFh{c}}}}}}g}{{AFj{}{{AFh{c}}}}}{}{}{{Df{e}{{Dd{c}}}}Dh}}{{BHjBHjGfEd}BHj}{BDh{{Lh{Cd}}}}{{{f{BJd}}}{{C`{Fh}}}}{BJfBHj}{BJhBHj}{BHjBHj}3210{{{f{AFn}}Ej}{{l{El}}}}{{BHjEj}BHj}{{{f{BJj}}Ej}{{l{El}}}}{{cEn}BHj{{Hl{{An{BHj}}}}}}{{{f{AFn}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{AG`}}}{{Bd{{l{El}}Bb}}}}6{{{f{BJj}}}{{Bd{{l{El}}Bb}}}}{cBHj{{ANl{BHj}}}}{{{f{BJl}}}{{f{{An{Mn}}}}}}``{BHjBJf}{eALd{}{{Hb{}{{Cb{c}}}}}}0{{AEhe}ALf{}{{Hb{}{{Cb{c}}}}}}0`{{{f{Cl{BJn{c}}}}}{{Bd{BBfBb}}}BK`}{{{f{BIf}}}{{f{AEj}}}}{{{f{BJj}}}{{f{AEj}}}}{{{f{BKb}}}{{f{AEj}}}}{{{f{BIh}}}{{f{AEj}}}}{{{f{BDh}}}{{f{AEj}}}}{{{f{ClBJj}}}{{f{ClAEj}}}}{{{f{ClBDh}}}{{f{ClAEj}}}}{{{f{BKd}}}{{f{{l{Ad}}}}}}{{{f{BKf}}{C`{{f{Af}}}}d}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKf}}{C`{{f{Af}}}}}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKf}}{C`{{f{Af}}}}Jldd{C`{{f{Ef}}}}{f{{l{A`}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{BKf}}{C`{{f{Af}}}}Jld{C`{{f{Ef}}}}{f{{l{A`}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{{Lh{c}}}}}BKh{BKjNj}}{{{f{BKl}}}{{f{{l{j}}}}}}{{{f{{Lh{ce}}}}}{}NjBIb}{{{f{{Lh{c}}}}}MbBKn}{{{f{BL`}}}{{f{BHj}}}}{{{f{{Lh{ce}}}}}{{f{c}}}NjBIb}{{{f{ALh}}}{{f{Ed}}}}{{{f{BLb}}}{{f{B`}}}}{{{f{ClBJj}}}{{Bd{FhBb}}}}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}{{C`{{f{{An{c}}}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{{f{BLd}}}{{f{{l{A`}}}}}}{{{Fn{BHj}}}BHj}{{{f{BKf}}{C`{{f{Af}}}}d}{{Bd{{Jh{KhJj}}Bb}}}}{{{Lh{{BLf{c}}e}}}{{Lh{ce}}}{}BIb}{{{Lh{{An{{BLf{c}}}}e}}}{{Lh{{An{c}}e}}}{}BIb}{{{f{Af}}}BHj}{{BHj{C`{Ij}}}BHj}{{{f{BLh}}}{{Bd{{l{A`}}Bb}}}}{{{f{BLh}}}{{l{A`}}}}{{{f{{Jh{JnJj}}}}{f{Jl}}{f{AKj}}}{{Jh{KdJj}}}}`{{{BHd{{Cf{BHh}}}}{C`{{Lh{BAl}}}}}{{Bd{BLjBb}}}}{{{BLl{c}}{f{BAl}}}{{Bd{{BLn{c}}Bb}}}BM`}{{{BMb{c}}{f{BAl}}}{{Bd{{BMd{c}}Bb}}}BM`}{{{BMf{c}}Fh}{{Bd{BMhBb}}}BHh}{{{BMj{c}}{f{BAl}}}{{Bd{{BMl{c}}Bb}}}BM`}{{{f{Cl{BHd{c}}}}}{{Bd{BMnBb}}}BHh}`{BHjBN`}{{BHjBNbBHj}BHj}{{{f{BJj}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{c}}}{{f{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Lh{ce}}}}}{{f{c}}}NjBIb}111111111111111{{{f{Clc}}}{{f{Cle}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BClIjcEn}BCl{{Hl{{An{BHj}}}}}}{BDh{{Cf{Cd}}}}`{BClBCl}```{{{f{BNd}}{f{Af}}}{{Bd{EfBb}}}}{{BNf{Fn{BHj}}}{{Bd{BHjBb}}}}{{{f{AL`}}{f{AL`}}c}{{Bd{AL`Bb}}}AMh}{{{f{BKb}}{f{Cl{An{B`}}}}}{{Bd{{C`{B`}}Bb}}}}{{{f{BNh}}B`B`}{{Bd{B`Bb}}}}{{BNf{Fn{BHj}}}BHj}{{{f{BNj}}}b}{{BHjEd}BHj}{{{f{BJj}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{BCl{BNl{{f{Af}}EdO`}}d}BCl}{{{f{AGb}}{f{Ed}}}{{Bd{B`Bb}}}}3{{{f{AMj}}{f{Ed}}}{{Bd{B`Bb}}}}{{BClEdd}BCl}2{{{f{AGb}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{AMj}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{BHjEdFb}BHj}`{BHjBNn}{{{f{{Lh{c}}}}}{{C`{{f{AJl}}}}}{AJlNj}}{BHjBHj}{{{f{BO`}}}{{Bd{B`Bb}}}}1`{{{f{BOb}}}{{Bd{{l{Jd}}Bb}}}}{{{f{BDh}}Fh}d}{{{f{BBf}}{f{BBf}}{C`{{f{{An{Ef}}}}}}{f{Af}}}{{Bd{bBb}}}}{{{f{BAl}}{f{BAl}}{C`{{f{{An{Ef}}}}}}{f{Af}}}{{Bd{bBb}}}}0{{{f{BOd}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BJj}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BOd}}c}{{Bd{B`Bb}}}Aj}{{{f{BJj}}}{{Fl{{Ff{{Cf{Cd}}}}{Fj{{f{{Cf{Cd}}}}}{{Dd{Fh}}}}}}}}``{{{f{BJj}}}{{f{{Fn{{Cf{Cd}}}}}}}}{{{f{ClBJj}}}{{f{Cl{Fn{{Cf{Cd}}}}}}}}{{{f{B`}}{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BHjBHjBHj}BHj}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BHjBHj}BHj}10{{{f{BOf}}}BOf}{{{f{BBl}}}BBl}{{{f{BDb}}}BDb}{{{f{BNj}}}BNj}{{{f{BCl}}}BCl}{{{f{BI`}}}BI`}{{{f{BOh}}}BOh}{{{f{BDl}}}BDl}{{{f{BIj}}}BIj}{{{f{BOj}}}BOj}{{{f{BOl}}}BOl}{{{f{BOn}}}BOn}{{{f{BIh}}}BIh}{{{f{C@`}}}C@`}{{{f{C@b}}}C@b}{{{f{C@d}}}C@d}{{{f{C@f}}}C@f}{{{f{A@b}}}A@b}{{{f{Nl}}}Nl}{{{f{C@h}}}C@h}{{{f{C@j}}}C@j}{{{f{C@l}}}C@l}{{{f{C@n}}}C@n}{{{f{CA`}}}CA`}{{{f{CAb}}}CAb}{{{f{CAd}}}CAd}{{{f{CAf}}}CAf}{{{f{CAh}}}CAh}{{{f{CAj}}}CAj}{{{f{CAl}}}CAl}{{{f{CAn}}}CAn}{{{f{BGn}}}BGn}{{{f{CB`}}}CB`}{{{f{CBb}}}CBb}{{{f{CBd}}}CBd}{{{f{CBf}}}CBf}{{{f{CBh}}}CBh}{{{f{CBj}}}CBj}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{CCh}}}CCh}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{BL`}}}BL`}{{{f{BHj}}}BHj}{{{f{CDj}}}CDj}{{{f{BNb}}}BNb}{{{f{{BIn{c}}}}}{{BIn{c}}}ABj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{BJb}}}BJb}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{BNf}}}BNf}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{{Lh{ce}}}}}{{Lh{ce}}}Nj{BIbABj}}{{{f{CFn}}}CFn}{{{f{CG`}}}CG`}{{{f{Nf}}}Nf}{{{f{BDf}}}BDf}{{{f{BDh}}}BDh}{{{f{BAl}}}BAl}{{{f{ANn}}}ANn}{{{f{BBf}}}BBf}{{{f{Nd}}}Nd}{{{f{CGb}}}CGb}{{{f{CGd}}}CGd}{{{f{CGf}}}CGf}{{{f{BJj}}}{{Lh{BJj}}}}{{{f{c}}{f{Cle}}}b{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CGh}}}{{C`{{f{CGj}}}}}}````{{{f{BDl}}{f{BDl}}}B@`}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}B@`{CGlNj}BIb}{{{f{{An{BHj}}}}}BHj}{{BIdCB`}BId}{{{f{CB`}}{f{CBb}}}d}`{{{f{{An{B`}}}}}{{Bd{B`Bb}}}}{{{f{Af}}}BHj}{BCl{{Bd{B@fBb}}}}{c{{Bd{{Fn{B@f}}Bb}}}{{Id{}{{Cb{BCl}}}}}}{ANfe{}{{ALd{c}}AJh}}0{{ANfAEh}e{}{{ALf{c}}AJh}}0{{ACb{f{Af}}}{{l{c}}}Db}{{ACd{f{{l{c}}}}}{{l{c}}}Db}10{{ACd{f{Af}}Ed}{{l{c}}}Db}0{BCl{{Bd{BNjBb}}}}{cBHj{{BCn{Ef}}}}{{{f{CG`}}Fh}CGn}``{{{f{BHb}}{Fn{{f{Af}}}}{C`{{f{Af}}}}d}{{Bd{B@fBb}}}}`{{{f{c}}{f{e}}}B@`{}{}}0``{{{f{CD`}}}{{Bd{{Lh{BAl}}Bb}}}}{{cCFl}{{Bd{BClBb}}}{{Hl{{An{BCl}}}}}}{{{f{BLh}}{f{{l{A`}}}}}{{l{A`}}}}{{ed}{{Bd{BHjBb}}}{{ANl{BHj}}ABj}{{Hl{{An{c}}}}}}{{{f{CGh}}{Fn{BCl}}}{{Bd{BClBb}}}}{{{f{BOj}}{Fn{BCl}}}{{Bd{BClBb}}}}44{e{{Bd{BHjBb}}}{{ANl{BHj}}ABj}{{Hl{{An{c}}}}}}{{c{f{Af}}d}BHj{{Hl{{An{BHj}}}}}}{{BJfc}BHj{{ANl{BHj}}}}{{{f{CH`}}{f{{An{Al}}}}}{{l{Ab}}}}{{{f{BLh}}{f{Af}}d}{{Bd{{l{Ab}}Bb}}}}{{BJhc}BHj{{ANl{BHj}}}}{{{f{BAl}}{f{Af}}}d}{{{f{CH`}}{f{{l{Ad}}}}}{{l{Ab}}}}{{{f{BLh}}{f{{l{A`}}}}dd}{{Bd{{l{Ab}}Bb}}}}{{{f{BLh}}{f{Af}}}{{Bd{{l{Ab}}Bb}}}}{{{f{Cd}}{f{AEh}}}{{Cf{Cd}}}}{{{f{B`}}Fh}{{Bd{{l{El}}Bb}}}}{BClBCl}{BHjBHj}{{{f{BLh}}{f{Af}}d}{{Bd{{l{El}}Bb}}}}{{{f{BLh}}{f{{l{A`}}}}d}{{Bd{{l{El}}Bb}}}}{{{f{CHb}}Al{C`{Al}}{C`{{f{C@n}}}}Ald}{{Bd{FhBb}}}}{{{AMd{Af}}}Ed}{{{f{BGl}}{f{{An{Nl}}}}d}B@f}{{{f{CHd}}c}{{Cf{CHf}}}BM`}{{{f{CHh}}c}{{Cf{CHf}}}BM`}`{{BClBCl{C`{Ef}}}BCl}{{{f{CHj}}{f{B@f}}{C`{{f{Af}}}}{C`{{Gj{GfFh}}}}}{{Bd{B@fBb}}}}{{{f{CHj}}{f{B@f}}{C`{{Gj{GfFh}}}}d}{{Bd{{Gj{B@fB@f}}Bb}}}}{{{f{B`}}d}{{Bd{B`Bb}}}}{{BHjd}BHj}{{BHjced}BHj{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`ABj}{{Hl{{An{BHj}}}}}}212121{{ce}BHj{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`ABj}{{Hl{{An{BHj}}}}}}32{{CHlBHjFhd}BHj}`{{{f{BDh}}}{{f{AEh}}}}{{{f{ANn}}}{{f{AEh}}}}```{{BHjBHjBDlBOl}BHj}`{CEfBHj}`{{BHjBHjBDlBOl{C`{Jl}}{C`{Ef}}}BHj}0{AKhGf}00{{{f{CHn}}}{{l{Mh}}}}{{{f{CI`}}}{{l{Mh}}}}{{{f{BOb}}}{{Bd{{l{Mh}}Bb}}}}`{{{f{CIb}}}{{l{Jj}}}}{{{f{BDl}}}Gf}`{{{f{BDl}}}d}```{{}b}{cbBIb}{{}CHd}{{}CHh}{{}BBl}{{}BDb}{{}BCl}{{}BIj}{{}BOn}{{}C@b}{{}C@d}{{}C@h}{{}C@j}{{}C@l}{{}CAb}{{}CAd}{{}CAf}{{}CAj}{{}CAl}{{}CAn}{{}BGn}{{}CB`}{{}CBf}{{}CBh}{{}CBj}{{}CBl}{{}CBn}{{}CC`}{{}CCd}{{}CCn}{{}CD`}{{}BHj}{{}{{BIn{{Lh{CId}}}}}}{{}{{BIn{{Lh{BIl}}}}}}{{}{{BIn{{Lh{BNh}}}}}}{{}CEf}{{}CEh}{{}CEl}{{}CEn}{{}CF`}{{}CFb}{{}CFf}{{}CFj}{{}CFl}{{}{{Lh{{An{c}}}}}{}}{{}{{Lh{Af}}}}{{}{{Lh{CIf}}}}{{}{{Lh{c}}}CIh}{{}CFn}{{}Nf}{{}BDf}{{}BAl}{{}ANn}{{}BBf}{{}Nd}`{{}{{On{{Fn{A@b}}{Fn{Nl}}}}}}{Fh{{f{c}}}{}}00{{{f{{AKd{c}}}}}f{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BIn{c}}}}}f{}}222222222222222222222{{{f{{Lh{ce}}}}}{{f{c}}}NjBIb}33333333333333{Fh{{f{Clc}}}{}}00{{{f{Cl{AKd{c}}}}}{{f{Cl}}}{}}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CD`}}}{{Bd{EfBb}}}}{{{f{BCl}}}{{Bd{EfBb}}}}0001{{{f{{Lh{c}}}}}{{f{Af}}}{AJlNj}}{{{f{ANn}}{f{CIj}}}{{Bd{CIlBb}}}}```{{{f{B`}}GfCIn}{{Bd{B`Bb}}}}{{BJhGfCIn}BHj}{{BHjGfCIn}BHj}{{{f{CD`}}}{{Bd{{`{BAj}}Bb}}}}``{{{BHl{}{{Dd{c}}}}{f{B`}}}c{}}{{BHjBHj}}{{{f{BHn}}{f{B`}}}{{Bd{B`Bb}}}}{{BHjc}BHj{{ANl{BHj}}}}{{{Lh{AEjc}}}{{Bd{{Lh{ec}}{Lh{AEjc}}}}}BIb{AEjHnI`}}{{{Lh{AEjc}}}{{Lh{ec}}}BIb{AEjHnI`}}{{{f{{Lh{ce}}}}}{{CJ`{ce}}}Nj{ABjBIb}}{Fhb}0000000000000000000000{{{f{ClBNj}}}b}1{{BCle}BCl{{Hl{Af}}}{{Hb{}{{Cb{c}}}}}}2222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Cl{Lh{ce}}}}}bNjBIb}333333333333333{BHjBHj}{{BCl{C`{{Fn{BHj}}}}}BCl}1{{{f{BJj}}}B`}{{{f{{Jh{JnJj}}}}{f{Jl}}{f{AKj}}}{{Jh{KdJj}}}}`{BHjCJb}{{{f{AMj}}}{{f{Ed}}}}{{{f{BJj}}}{{f{Ed}}}}`{{{f{Ed}}}BHj}{cBHj{{Hl{{An{Ed}}}}}}`{CEhBHj}``{{}CFn}{{{f{c}}}e{}{{CJf{CJd}}}}0`{{{f{CH`}}{f{{An{Al}}}}}{{l{Ab}}}}{{{f{CH`}}{f{{l{Ad}}}}}{{l{Ab}}}}{{BDl{f{Ed}}{f{Af}}}{{Bd{bBb}}}}{{BDl{C`{{f{Af}}}}{f{Af}}}{{Bd{bBb}}}}{{{f{CJh}}{f{Af}}}{{Bd{bBb}}}}`{{{f{BOf}}{f{BOf}}}d}{{{f{BBl}}{f{BBl}}}d}{{{f{BDb}}{f{BDb}}}d}{{{f{BDl}}{f{BDl}}}d}{{{f{BOl}}{f{BOl}}}d}{{{f{C@`}}{f{C@`}}}d}{{{f{C@d}}{f{C@d}}}d}{{{f{A@b}}{f{A@b}}}d}{{{f{C@h}}{f{C@h}}}d}{{{f{C@j}}{f{C@j}}}d}{{{f{C@l}}{f{C@l}}}d}{{{f{C@n}}{f{C@n}}}d}{{{f{CA`}}{f{CA`}}}d}{{{f{CAb}}{f{CAb}}}d}{{{f{CAd}}{f{CAd}}}d}{{{f{CAf}}{f{CAf}}}d}{{{f{CAh}}{f{CAh}}}d}{{{f{CAj}}{f{CAj}}}d}{{{f{CAl}}{f{CAl}}}d}{{{f{CAn}}{f{CAn}}}d}{{{f{BGn}}{f{BGn}}}d}{{{f{CB`}}{f{CB`}}}d}{{{f{CBb}}{f{CBb}}}d}{{{f{CBd}}{f{CBd}}}d}{{{f{CBf}}{f{CBf}}}d}{{{f{CBh}}{f{CBh}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{CBl}}{f{CBl}}}d}{{{f{CBn}}{f{CBn}}}d}{{{f{CC`}}{f{CC`}}}d}{{{f{CCb}}{f{CCb}}}d}{{{f{CCd}}{f{CCd}}}d}{{{f{CCf}}{f{CCf}}}d}{{{f{CCh}}{f{CCh}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{BL`}}{f{BL`}}}d}{{{f{BHj}}{f{BHj}}}d}{{BHjc}BHj{{ANl{BHj}}}}{{{f{CDj}}{f{CDj}}}d}{{{f{BNb}}{f{BNb}}}d}{{{f{{BIn{B`}}}}{f{{BIn{B`}}}}}d}{{{f{{BIn{{Lh{c}}}}}}{f{{BIn{{Lh{c}}}}}}}dNj}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{BJb}}{f{BJb}}}d}{{{f{CEj}}{f{CEj}}}d}{{{f{CEl}}{f{CEl}}}d}{{{f{CEn}}{f{CEn}}}d}{{{f{CF`}}{f{CF`}}}d}{{{f{CFb}}{f{CFb}}}d}{{{f{CFd}}{f{CFd}}}d}{{{f{CFh}}{f{CFh}}}d}{{{f{CFj}}{f{CFj}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{{Lh{CJj}}}}{f{CJj}}}d}{{{f{{Lh{Cd}}}}{f{Cd}}}d}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{CJlNj}BIb}{{{f{CIl}}{f{CIl}}}d}{{{f{CFn}}{f{CFn}}}d}{{{f{Nf}}{f{Nf}}}d}{{{f{BDf}}{f{BDf}}}d}{{{f{BDh}}{f{{f{Cd}}}}}d}{{{f{BDh}}{f{BDh}}}d}{{{f{BAl}}{f{BAl}}}d}{{{f{ANn}}{f{ANn}}}d}{{{f{BBf}}{f{BBf}}}d}{{{f{Nd}}{f{Nd}}}d}{{{f{CGf}}{f{CGf}}}d}{{BHjc}BHj{{ANl{BHj}}}}{{{f{{AGf{}{{Cb{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CJnBHjd}BHj}``{{BHjc}BHj{{BCn{Ef}}}}{{BHjc}BHj{{Hl{{An{Ed}}}}}}{{{f{Clc}}e}{{Bd{{f{Clg}}BAb}}}{}CK`{}}{{{f{BCl}}d}{{Bd{EfBb}}}}{{BCle}BCl{{ANl{BHj}}ABj}{{Hl{{An{c}}}}}}{{{f{AGh}}}{{Bd{B`Bb}}}}{BHjBHj}{{{f{AGh}}}{{Bd{{Gj{B`{Gh{Gf}}}}Bb}}}}`{{BHjBHjBHj}BHj}{{{f{CHd}}}CHb}{{{f{CHh}}}CHb}{{{f{BLh}}{f{{l{A`}}}}Fh}{{Bd{{l{A`}}Bb}}}}{Nl{{Gj{IjIj}}}}{{{f{BLh}}{f{Af}}}{{Bd{{l{j}}Bb}}}}{{{f{BLh}}{f{{l{A`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BLh}}{f{Af}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{AAf}}}d}``{{{f{BNj}}}{{C`{{Bd{B@fBb}}}}}}{{BClFh}{{Bd{B@fBb}}}}{{{f{BNj}}}{{Bd{B@fBb}}}}{{{f{AAf}}}{{f{Mn}}}}{{{f{BJj}}}{{Dj{Mn}}}}{{CKbGf}BHj}{{CKb{f{Af}}}BHj}{{CKb{f{{An{c}}}}}BHj{{Hl{Af}}}}{{{f{BDh}}}{{f{{An{ANn}}}}}}```{{BClc}BCl{{ANl{BHj}}}}{{BHjc}BHj{{ANl{BHj}}}}`10{{BHjAGd}BHj}{{{f{AGj}}c}{{Bd{AGjBb}}}{}}{{{f{AGl}}{f{{l{Ab}}}}}{{Bd{{l{c}}Bb}}}Db}{{{f{BJj}}{f{{l{Ab}}}}}{{Bd{B`Bb}}}}{{BClBHj}BCl}5{{BBfc}BBf{{Df{Fh{f{ANn}}}{{Dd{d}}}}}}{{{f{BLh}}{f{Af}}d}{{Bd{{l{El}}Bb}}}}{{{f{BLh}}{f{{l{A`}}}}dd}{{Bd{{l{El}}Bb}}}}{{{f{BLh}}{f{Af}}}{{Bd{{l{El}}Bb}}}}{CKd{{Bd{B@fBb}}}}{{{f{ClCHf}}{f{ClB@f}}}{{Bd{bBb}}}}{AAh{{l{c}}}Db}{{AMh{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{BIdBCl}{{{BHd{c}}}{{Bd{B@fBb}}}BHh}{{{f{Cl{BLl{c}}}}{f{ClB@f}}}{{Bd{bBb}}}BM`}{{{CKf{c}}}{{Bd{B@fBb}}}BHh}{{{BJn{c}}}{{Bd{B@fBb}}}BK`}{{{f{Cl{CKh{c}}}}{f{ClB@f}}}{{Bd{bBb}}}BM`}{CGh{{Bd{BClBb}}}}{{{f{Cl{BMb{c}}}}{f{ClB@f}}}{{Bd{bBb}}}BM`}{{{f{Cl{CKj{c}}}}{f{ClB@f}}}{{Bd{bBb}}}BM`}{{{CKl{c}}}{{Bd{B@fBb}}}BHh}{BOj{{Bd{BClBb}}}}{{{CKn{c}}}{{Bd{B@fBb}}}BHh}{{{BMf{c}}}{{Bd{B@fBb}}}BHh}{{{BMj{c}}{f{ClB@f}}}{{Bd{JbBb}}}BM`}{{{f{ClAAf}}}{{l{j}}}}84{BIh{{Bd{BClBb}}}}{{{CKf{c}}{C`{{Lh{BHf}}}}d}{{Bd{B@fBb}}}BHh}{{{f{BMh}}Fh}d}{{}BHj}{BClBCl}{BJhBHj}{BHjBHj}`0``{{}{{BIn{{Lh{BIl}}}}}}{{{f{BO`}}}{{Bd{B`Bb}}}}2{{BHjBHj}BHj}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{Cl{Lh{AE`}}}}}{{Bd{bBAb}}}}{{{f{BKb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BNh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BNd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BOf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BBl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BDb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BOh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BDl}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{BOl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@d}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{A@b}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Nl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@h}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@j}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@l}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@n}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CA`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BIf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CL`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BGn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CB`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CBb}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CBd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CBf}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CBh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CBj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CBl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CBn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CC`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BHj}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CDj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BNb}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{{BIn{c}}}}{f{ClGl}}}{{Bd{bGn}}}{}}{{{f{CDl}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CDn}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CE`}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CEb}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CEd}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{BJb}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CEf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CEh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CEj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CEl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CEn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CF`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BNf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{Lh{ce}}}}{f{ClGl}}}{{Bd{bGn}}}{BAjNj}BIb}{{{f{{Lh{ce}}}}{f{ClGl}}}{{Bd{bGn}}}NjBIb}{{{f{{Lh{ce}}}}{f{ClGl}}}{{Bd{bGn}}}{AElNj}BIb}{{{f{CIl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CG`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Nf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BDf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BDh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BAl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{ANn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BBf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Nd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CGb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CGd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CGf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Af}}BEb}Ef}```{{BHjce}BHj{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`ABj}{{Hl{{An{BHj}}}}}}{{BIdd}BId}``{{{f{Af}}c}{{Bd{BHjBb}}}{{Hl{{An{BHj}}}}}}{{BHj{C`{Ij}}}BHj}{cc{}}00000000000000000000000{CD`BCl}1{BI`BCl}22222222222222222{IjA@b}3333333{{{f{Af}}}C@n}4444444444{CBbBGn}555555555555555555555555{J`BHj}{dBHj}{GfBHj}{MjBHj}{MfBHj}{MbBHj}{IjBHj}{AlBHj}{{{f{Af}}}BHj}{LfBHj}{BL`BHj}{cc{}}{M`BHj}{JbBHj}22{CLb{{BIn{{Lh{BKb}}}}}}{CEd{{BIn{{Lh{BKb}}}}}}{CLd{{BIn{{Lh{BKb}}}}}}{CLf{{BIn{{Lh{BKb}}}}}}{CLh{{BIn{{Lh{BKb}}}}}}{CDl{{BIn{{Lh{BKb}}}}}}{CE`{{BIn{{Lh{BKb}}}}}}{CDn{{BIn{{Lh{BKb}}}}}}{BJb{{BIn{{Lh{BKb}}}}}}{CLj{{BIn{{Lh{BKb}}}}}}<<<<<<{CDnBJb}{CDlBJb}>{CEdBJb}{CLhBJb}{cc{}}00000{CFbCF`}1111111{{{f{{An{c}}}}}{{Lh{{An{c}}}}}ABj}{{{Fn{ce}}}{{Lh{{An{c}}e}}}{}{BIbABj}}{{{Of{c}}}{{Lh{{An{c}}}}}{}}{{{Cf{ce}}}{{Lh{ce}}}NjBIb}{CLl{{Lh{CIf}}}}{{{f{CIf}}}{{Lh{CIf}}}}7{CHb{{Lh{CLn}}}}{CM`{{Lh{CMb}}}}{{{f{CLn}}}{{Lh{CLn}}}}{{{f{CMb}}}{{Lh{CMb}}}}{c{{Lh{c}}}{}}{{{Dj{c}}}{{Lh{c}}}{CMdNj}}{CMfc{}}{{{Lh{Af}}}{{Lh{{An{Al}}}}}}{Ef{{Lh{Af}}}}{{{f{Af}}}{{Lh{Af}}}}{cc{}}{CMhCIl}11111{CMjBDh}2{CMlBDh}{{{f{BBf}}}BAl}{{{Lh{BBf}}}BAl}{{{f{{An{B`}}}}}BAl}6{{{f{{Lh{BBf}}}}}BAl}{{{f{BBh}}}BAl}{BBfBAl}9{{{Fn{ANn}}}BBf}:::::{{c{C`{Hf}}}CMn{}}{{{CN`{Gf}}{CN`{Al}}{C`{Hf}}}CNb}{{{CN`{Gf}}{CN`{Al}}{C`{Hf}}}CNd}{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}00{c{{AKd{{l{Ab}}}}}{{Hb{}{{Cb{d}}}}}}{c{{AKd{{l{e}}}}}{{Hb{}{{Cb{}}}}}n}{e{{Lh{{An{c}}}}}{}{{Hb{}{{Cb{c}}}}}}{eBAl{{ANl{Mn}}}{{Hb{}{{Cb{c}}}}}}{{gFh}{{CNf{Gf}}}Hl{{Hb{}{{Cb{{C`{c}}}}}}}{{Hb{}{{Cb{{C`{e}}}}}}}}0{e{{CNf{Gf}}}{{Hb{}{{Cb{{C`{d}}}}}}}{{Hb{}{{Cb{{C`{c}}}}}}}}{{{f{Af}}e}ABn{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{gAEh}{{CNf{Gf}}}BFh{{Hb{}{{Cb{{C`{c}}}}}}}{{Hb{}{{Cb{{C`{e}}}}}}}}673{{{f{Af}}e}ABn{}{{Ch{}{{Cb{c}}}}}}{c{{AKd{{l{e}}}}}{{Id{}{{Cb{}}}}}n}{e{{Lh{{An{c}}}}}Hn{{Id{}{{Cb{c}}}}}}`{c{{Bd{{CKn{AE`}}Bb}}}{{ANl{CHb}}}}{{}{{Lh{c}}}Nj}{c{{Lh{ec}}}BIbNj}{{{f{Af}}{f{{An{c}}}}}ABn{}}{{{f{Af}}{f{{An{{C`{c}}}}}}}ABn{}}{{{f{Af}}}{{Bd{CNh}}}}{c{{AKd{{l{e}}}}}{{If{}{{Cb{}}}}}n}{c{{AKd{{l{Ab}}}}}{{If{}{{Cb{d}}}}}}{Ed{{BIn{{Lh{BIl}}}}}}{{{f{Af}}c}CNj{}}{{{Fn{c}}AEh}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{{Fn{c}}AEh}{{AJh{}{{ALj{e}}{ALl{c}}{ALn{g}}}}}{AM`{AMb{e}}}ABj{{Gb{}{{Cb{e}}}}IfHnI`}}`{{{f{Af}}cFh}AGn{}}{{FhcAEh}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{}CFn}{{BClBClcc}BCl{{ANl{BHj}}}}{{{f{CNl}}{f{B@f}}ee}{{Bd{B@fBb}}}{{Hl{Af}}}{{Hb{}{{Cb{c}}}}}}{{{f{Af}}Fh}AH`}{{FhAEh}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}``{{BHjc{BIn{{Lh{BIl}}}}CNn}BHj{{Df{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`}}`{{BHjc}BHj{{ANl{BHj}}}}{{BHjFhFh}BHj}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{CO`Nj}BIb}{{{f{BJj}}Fh}{{Bd{IhBb}}}}{{BJfBHjd}BHj}{{BJhBHjd}BHj}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}Fh}{{C`{c}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}6{{{f{BAl}}{f{Af}}}{{C`{{f{Ed}}}}}}{{{f{AHb}}Fh}{{Bd{IhBb}}}}{{{f{AMj}}Fh}{{Bd{IhBb}}}}{{{f{AHb}}Fh}Ih}{{{f{AMj}}Fh}Ih}{{{f{BAl}}Fh}{{C`{{Gj{{f{{AOj{AOh}}}}{f{Ed}}}}}}}}{{{f{ClBAl}}Fh}{{C`{{Gj{{f{Cl{AOj{AOh}}}}{f{ClEd}}}}}}}}{BNnBHj}{{{f{BCl}}}CFf}{{{f{CFh}}}Ed}{{}Ed}{{{f{C@f}}GfBOl{C`{{f{AKj}}}}}{{Bd{BOhBb}}}}00{{{f{CId}}{f{BAl}}COb{f{Mn}}{f{Mn}}}{{C`{Mn}}}}{{{f{BIl}}{f{BAl}}COb{f{{An{Mn}}}}}Mn}{{{f{BAl}}{f{Af}}}{{C`{Mn}}}}{{{f{AEh}}}{{f{{An{ANn}}}}}}{{{f{BJl}}}Fh}{{{f{BAl}}{f{Af}}}{{C`{{Gj{Fh{f{{AOj{AOh}}}}{f{Ed}}}}}}}}{{{f{Cl{BMf{c}}}}}{{Bd{{f{{Lh{CG`}}}}Bb}}}BHh}{{{f{Cl{Lh{ce}}}}}{{C`{{f{Clc}}}}}NjBIb}{{{f{Cl{Lh{ce}}}}}{{f{Clc}}}NjBIb}{{{f{COd}}}{{Fn{{f{Af}}}}}}{{{f{BAl}}}{{Fn{{f{Af}}}}}}{{{f{BBf}}}{{Fn{{f{Af}}}}}}{{{f{BJj}}Fh}{{C`{{f{In}}}}}}{{{f{BJj}}FhFh}{{C`{{f{In}}}}}}{{{f{BKb}}}{{C`{{BIn{{Lh{BIl}}}}}}}}{{{f{C@f}}BOhBOlJl{C`{{f{AKj}}}}C@d}{{Bd{COfBb}}}}{{{f{C@h}}}{{Lh{C@j}}}}{{{f{Clc}}}{{Bd{COhBb}}}{BK`BHhNj}}{{{f{CL`}}{f{BAl}}}{{Bd{{Lh{BAl}}Bb}}}}{{cFh}{{Fn{{Gj{FhFh}}}}}{{Ch{}{{Cb{Fh}}}}}}{{{f{AOl}}Fh}Ih}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}Fh}{{C`{c}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{{f{BJj}}Fh}Ih}{{{f{CGh}}}d}{{{f{BOj}}}d}`{{BCle}BI`{{ANl{BHj}}ABj}{{Hl{{An{c}}}}}}{{{f{COj}}{Fn{B`}}{f{BBl}}}{{Bd{{Gj{B`{Fn{B`}}Bh}}Bb}}}}{{BClBHjcBBl}BI`{{Hl{{An{BHj}}}}}}2{{BDlBDl{f{{An{Gf}}}}BOlJl{C`{AKj}}}{{Bd{{Fn{{Of{Ij}}}}Bb}}}}{{C@f{f{{An{Gf}}}}BOlJl{f{{C`{Ef}}}}ddC@d}{{Gj{{Fn{{Of{Ij}}}}{Fn{Gf}}{Fn{Gf}}}}}}{{{f{BEn}}dd}{{Bd{BhBb}}}}{{{f{{AGf{}{{Cb{c}}}}}}e}c{}{}}{{BHjc}BHj{{ANl{BHj}}}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{CO`Nj}BIb}21`{{{f{BJj}}}d}{{{f{COl}}}d}{{{f{BBl}}{f{Clc}}}bAC`}{{{f{BDb}}{f{Clc}}}bAC`}{{{f{BDl}}{f{Clc}}}bAC`}{{{f{BOl}}{f{Clc}}}bAC`}{{{f{C@`}}{f{Clc}}}bAC`}{{{f{C@d}}{f{Clc}}}bAC`}{{{f{C@h}}{f{Clc}}}bAC`}{{{f{C@j}}{f{Clc}}}bAC`}{{{f{C@l}}{f{Clc}}}bAC`}{{{f{C@n}}{f{Clc}}}bAC`}{{{f{CA`}}{f{Clc}}}bAC`}{{{f{CAb}}{f{Clc}}}bAC`}{{{f{CAd}}{f{Clc}}}bAC`}{{{f{CAf}}{f{Clc}}}bAC`}{{{f{CAh}}{f{Clc}}}bAC`}{{{f{CAj}}{f{Clc}}}bAC`}{{{f{CAl}}{f{Clc}}}bAC`}{{{f{CAn}}{f{Clc}}}bAC`}{{{f{BGn}}{f{Clc}}}bAC`}{{{f{CB`}}{f{Clc}}}bAC`}{{{f{CBb}}{f{Clc}}}bAC`}{{{f{CBd}}{f{Clc}}}bAC`}{{{f{CBf}}{f{Clc}}}bAC`}{{{f{CBh}}{f{Clc}}}bAC`}{{{f{CBj}}{f{Clc}}}bAC`}{{{f{CBl}}{f{Clc}}}bAC`}{{{f{CBn}}{f{Clc}}}bAC`}{{{f{CC`}}{f{Clc}}}bAC`}{{{f{CCb}}{f{Clc}}}bAC`}{{{f{CCd}}{f{Clc}}}bAC`}{{{f{CCf}}{f{Clc}}}bAC`}{{{f{CCh}}{f{Clc}}}bAC`}{{{f{CCj}}{f{Clc}}}bAC`}{{{f{CCl}}{f{Clc}}}bAC`}{{{f{CCn}}{f{Clc}}}bAC`}{{{f{BL`}}{f{Clc}}}bAC`}{{{f{BHj}}{f{Clc}}}bAC`}{{{f{CDj}}{f{Clc}}}bAC`}{{{f{BNb}}{f{Clc}}}bAC`}{{{f{CDl}}{f{Clc}}}bAC`}{{{f{CDn}}{f{Clc}}}bAC`}{{{f{CE`}}{f{Clc}}}bAC`}{{{f{CEb}}{f{Clc}}}bAC`}{{{f{CEd}}{f{Clc}}}bAC`}{{{f{BJb}}{f{Clc}}}bAC`}{{{f{CEj}}{f{Clc}}}bAC`}{{{f{CEl}}{f{Clc}}}bAC`}{{{f{CEn}}{f{Clc}}}bAC`}{{{f{CF`}}{f{Clc}}}bAC`}{{{f{CFb}}{f{Clc}}}bAC`}{{{f{CFd}}{f{Clc}}}bAC`}{{{f{CFh}}{f{Clc}}}bAC`}{{{f{CFj}}{f{Clc}}}bAC`}{{{f{CFl}}{f{Clc}}}bAC`}{{{f{{Lh{ce}}}}{f{Clg}}}b{COnNj}BIbAC`}{{{f{CFn}}{f{Clc}}}bAC`}{{{f{BDf}}{f{Clc}}}bAC`}{{{f{BAl}}{f{Clc}}}bAC`}{{{f{ANn}}{f{Clc}}}bAC`}{{{f{Nd}}{f{Clc}}}bAC`}{{{f{CGf}}{f{Clc}}}bAC`}{{{f{D@`}}{f{B`}}CBfd}{{Bd{{Gj{{Gj{{Fn{Ij}}{Fn{Ij}}}}d}}Bb}}}}{{{f{D@`}}{f{B`}}CBfd}{{Bd{{Gj{{AK`{Ij}}{AK`{Ij}}}}Bb}}}}{{BI`{C`{Fh}}}BCl}{{BJhBHj}BHj}{{BHj{C`{Fh}}}BHj}{{{f{BLh}}}{{Bd{{l{A`}}Bb}}}}{{{f{BLh}}}{{l{A`}}}}`{{{f{{An{{f{{l{A`}}}}}}}}{f{Af}}d}{{Bd{{l{A`}}Bb}}}}{{{f{D@b}}}{{l{Mh}}}}{{{f{CI`}}}{{l{Mh}}}}{{{f{BOb}}}{{Bd{{l{Mh}}Bb}}}}`{{{f{CIb}}}{{l{Jj}}}}`{{BIdCBb}BId}``{{{f{A@b}}}Ij}`{{{f{{Jh{JnJj}}}}{f{{l{A`}}}}CGf{Fj{Gf}{{Dd{AKh}}}}{Fj{AKh}{{Dd{Gf}}}}{f{AKj}}{f{AKj}}}{{Bd{{l{Jj}}Bb}}}}{{{f{{Jh{JnJj}}}}{C`{{f{Af}}}}{Fj{Gf}{{Dd{AKh}}}}{Fj{AKh}{{Dd{Gf}}}}{f{AKj}}{f{AKj}}}{{Bd{{l{Jj}}Bb}}}}{BHjBHj}{{{f{AKh}}}d}{{{BLl{c}}d}{{BLl{c}}}BM`}``0`{{}b}{cb{ABjBIb}}{cBHj{{Hl{{An{Gf}}}}}}``{{{f{COd}}{f{Af}}}{{C`{Fh}}}}{{{f{BAl}}{f{Af}}}{{C`{Fh}}}}{{{f{BBf}}{f{Af}}}{{C`{Fh}}}}{{{f{{An{Ij}}}}}{{`{{Ch{}{{Cb{Fh}}}}}}}}{{{f{COh}}Al{C`{Fh}}d{C`{{f{BAl}}}}FhFh{C`{{f{C@n}}}}{C`{Al}}Al{C`{{f{CA`}}}}dd{f{Cl{C`{Fh}}}}d}{{Bd{{Gj{BAlFhFh}}Bb}}}}{{{CKl{c}}{C`{{D@d{Fh}}}}}{{CKl{c}}}BHh}{{{CKn{c}}{C`{{D@d{Fh}}}}}{{CKn{c}}}BHh}``{{}Fh}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{ClAAf}}}{{Cf{Cd}}}}{{BClBClcc}BCl{{ANl{BHj}}}}{{{f{CNl}}{f{B@f}}ee}{{Bd{B@fBb}}}{{Hl{Af}}}{{Hb{}{{Cb{c}}}}}}{{{f{ClNl}}}{{f{ClJb}}}}`{{{f{ClBAl}}Fh{AOj{AOh}}Ed}{{Bd{{C`{Ed}}Bb}}}}{{BHjBHjGfEd}BHj}{{BHjBHjBHj}BHj}``{{{f{B`}}CCb}B`}{{BHjCCb}BHj}`{{{f{B`}}{f{B`}}d}{{Bd{B`Bb}}}}{{BHjBHj}BHj}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BDh{{Gj{{Fn{ANn}}{Fn{{Cf{Cd}}}}{C`{Hf}}}}}}{{{AKd{c}}}c{}}{{{Lh{ce}}}{{C`{c}}}{}BIb}33{{{f{BHj}}}}{{{f{BDh}}}}{BAl}{D@fBJh}{BJhBJh}{{{Lh{ce}}}{}NjBIb}{{{Lh{ce}}}{{Gj{e}}}NjBIb}{{C@hc}{{BHd{c}}}BHh}{BAnB`}{{{Lh{BJj}}}B`}{CG`D@h}{BCn{{Fn{c}}}{}}{c{{Fn{Ef}}}{}}{c{{Fn{{AOj{AOh}}}}}{}}{{{f{CBb}}}d}{{{f{B`}}{f{B`}}{f{B`}}CCd}{{Bd{{l{Ab}}Bb}}}}{{BHjccCCd}BHj{{ANl{BHj}}}}{cd{{Hl{CLn}}}}{{{f{{An{Al}}}}}d}{{{f{BDl}}{C`{{f{Af}}}}}d}{{{f{CFn}}}d}{{{f{BJj}}}d}{{{f{BAl}}}d}{{{f{BBf}}}d}{{{f{BMh}}}d}{BHjBHj}{{{f{B`}}}{{Bd{{l{Ab}}Bb}}}}{{{f{AHd}}}{{Bd{{l{Ab}}Bb}}}}27{{{f{BDl}}}d}{{{f{B`}}{f{B`}}}{{Bd{{l{Ab}}Bb}}}}{{BHjc}BHj{{ANl{BHj}}}}54{{{f{AHf}}}{{Bd{{l{Ab}}Bb}}}}6{{{f{CHn}}}{{l{Ab}}}}{{{f{CI`}}}{{l{Ab}}}}{{{f{BOb}}}{{Bd{{l{Ab}}Bb}}}}999{{{f{BJj}}}{{l{Ab}}}}::0{{{f{Nl}}}d};{{{f{A@b}}}d}`{{{f{B`}}}d}{{{f{{Lh{AE`}}}}}d}{{}d}{{{f{CJh}}Ej}{{Bd{dBb}}}}{{{f{c}}}d{}}0{{{f{CBf}}{f{CBb}}}{{Bd{bBb}}}}4?{{{f{CHn}}}{{l{Jd}}}}{{{f{CI`}}}{{l{Jd}}}}{{{f{BOb}}}{{Bd{{l{Jd}}Bb}}}}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}{{AF`{cgAEn}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{{f{BDh}}}{{AF`{{Fn{{Cf{CJj}}}}D@jAEn}}}}{{{f{BAl}}}{{`{{Ch{}{{Cb{{Gj{{f{{AOj{AOh}}}}{f{Ed}}}}}}}}}}}}{{{f{BAl}}}{{`{Kf}}}}{{{f{ClBAl}}}{{`{Kf}}}}11{{{f{CGh}}}{{Bd{{C`{{Cf{Ch}}}}Bb}}}}{{BJfBHjd}BHj}{{BClBClccBGn}BCl{{Hl{{An{BHj}}}}}}{{BJhBHjd}BHj}{{{f{CNl}}{f{B@f}}eeBGn}{{Bd{B@fBb}}}{{Hl{Af}}}{{Hb{}{{Cb{c}}}}}}{{{f{D@l}}{f{B@f}}{f{Af}}{f{Af}}CBl{C`{Ih}}{C`{Ef}}}{{Bd{B@fBb}}}}{{{f{D@n}}{f{B@f}}{f{Af}}{f{Af}}eeCBl{C`{Ih}}}{{Bd{B@fBb}}}{{Hl{Af}}}{{Hb{}{{Cb{c}}}}}}{BClBId}{{{f{DA`}}{f{Af}}d}{{Bd{{l{A`}}Bb}}}}{{{f{DA`}}{f{{l{A`}}}}d}{{Bd{{l{A`}}Bb}}}}{{BIdd}BId}`{CKbBHj}{DAbBHj}{{{f{CG`}}}{{f{{C`{{Fn{DAd}}}}}}}}``{{}BHj}{BClBCl}{BJhBHj}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}{{C`{c}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{BHjBHj}{DAfBCl}4{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{CO`Nj}BIb}`{{BClBClcc}BCl{{ANl{BHj}}}}{{{f{CNl}}{f{B@f}}ee}{{Bd{B@fBb}}}{{Hl{Af}}}{{Hb{}{{Cb{c}}}}}}{{BIdc}BId{{Hl{{An{BHj}}}}}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}c}e{}{}{}}{{c{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}<{{{f{BJj}}}Fh};9{{{f{BDh}}}Fh}{{{f{BAl}}}Fh}{{{f{BBf}}}Fh}{{BClIj}BCl}{{{f{BJj}}Fh}B`}{{{f{BMh}}}d}`{BHjBJh}{cBHjDAh}{DAhBHj}{BDlBHj}{DAjBHj}{CFhBHj}{{BHjc}BHj{{ANl{BHj}}}}0``{{BIhd}BIh}{{{CKn{c}}d}{{CKn{c}}}BHh}```{BHjBHj}{{{f{DA`}}}{{l{El}}}}0{{{f{DA`}}{f{{An{B`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{DA`}}GfCIn}{{Bd{{l{j}}Bb}}}}{{{f{DA`}}Gfd}{{Bd{B`Bb}}}}{{{f{DA`}}{f{{l{A`}}}}d}{{Bd{{l{A`}}Bb}}}}4{{{f{DA`}}}{{Bd{B`Bb}}}}{{{f{DA`}}}B`}01{{{f{DA`}}}{{Bd{{l{El}}Bb}}}}{{{f{DA`}}}{{l{j}}}}{{{f{DA`}}{f{B`}}}{{Bd{{l{j}}Bb}}}}{{{f{DA`}}GfFh}{{l{j}}}}{{{f{DA`}}Ej}{{Bd{{l{j}}Bb}}}}{{{f{DA`}}Al}B`}7{{{f{DA`}}}{{Bd{{l{j}}Bb}}}}01{{{f{{AGf{}{{Cb{c}}}}}}e}c{}{}}{{BHjc}BHj{{ANl{BHj}}}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{CO`Nj}BIb}21``````{{{f{AL`}}{f{AL`}}}{{Bd{{Gj{AL`AL`}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gj{{l{j}}{l{j}}}}Bb}}}}{{{f{Cl{Lh{ce}}}}}{{f{Clc}}}ABj{BIbABj}}{{BClcCFf{C`{{Lh{CL`}}}}{C`{{f{Af}}}}}BCl{{Df{B@f}{{Dd{{Bd{B@fBb}}}}}}HnI`}}{{DAbc}BHj{{Df{{f{Af}}}{{Dd{{Bd{EfBb}}}}}}HnI`}}{{BHjc{BIn{{Lh{BIl}}}}}BHj{{Df{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`}}{{BHjBHjc{BIn{{Lh{BIl}}}}}BHj{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`}}{{BHj{f{Clc}}{f{Cl}}}{{Bd{BHjBb}}}{{Dn{BHj{f{Cl}}}{{Dd{{Bd{BHjBb}}}}}}}}{{{f{BJl}}{C`{{f{Ef}}}}}{{Bd{MnBb}}}}{{{f{BJl}}c}{{Bd{MnBb}}}{{A@d{{f{Ed}}}{{Dd{Ed}}}}}}{c{{BIn{{Lh{BIl}}}}}{{Df{{f{Ed}}}{{Dd{Ed}}}}HnI`}}{c{{BIn{{Lh{BIl}}}}}{{Df{{f{{An{{f{Ed}}}}}}}{{Dd{Ed}}}}HnI`}}{{BHjc}BHj{{Dn{BHj}{{Dd{BHj}}}}}}{c{{BIn{{Lh{BIl}}}}}{{Df{{f{Mn}}}{{Dd{Mn}}}}HnI`}}{{DAb{Lh{Df}}}BHj}{c{{BIn{{Lh{BIl}}}}}{{Df{{f{{An{Mn}}}}}{{Dd{Mn}}}}HnI`}}:{{ce{BIn{{Lh{BIl}}}}}BHj{{Df{{f{Cl{An{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`}{{Hl{{An{BHj}}}}}}{{BHjc{f{{An{BHj}}}}{BIn{{Lh{BIl}}}}}BHj{{Df{{f{Cl{An{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`}}{{BHjBJb{f{{An{BHj}}}}dd}BHj}2{{{f{BJl}}}{{Bd{MnBb}}}}{{C@hc}C@h{{Df{C@j}{{Dd{C@j}}}}}}1111{CFhCFh}{{{C`{{f{{An{Fh}}}}}}{f{BBf}}{C`{{f{{An{B`}}}}}}{C`{{f{DAl}}}}}B@f}{{{C`{{f{{An{Ef}}}}}}{f{BAl}}{C`{{f{{An{B`}}}}}}d}{{C`{{Fn{Fh}}}}}}{{{f{Af}}}BHj}{BJfBHj}{BClBCl}{BJhBHj}{{{f{AHh}}}{{C`{c}}}{}}{BHjBHj}{{{f{DAn}}}Ld}{{{f{BJj}}}{{Bd{LdBb}}}}``754{{{f{AHh}}}{{C`{Lf}}}}3{{{f{BJj}}}{{C`{Lf}}}}9876{{{f{AHj}}}{{C`{c}}}{}}51{{{f{DB`}}}Ld}4{{BClBD`}BCl}``{{{CKf{c}}{C`{CHb}}}{{CKf{c}}}BHh}{{{f{ClBAl}}BAl}b}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}{{{f{ClBAl}}{f{BAl}}}b}````{{{f{CIb}}}{{l{Jj}}}}`{{{f{BOb}}}{{Bd{{l{Jd}}Bb}}}}1`{{{f{Af}}}BHj}{BJfBHj}{BClBCl}{BJhBHj}{{{f{AHh}}}{{C`{c}}}{}}{BHjBHj}{{{f{AHh}}}{{C`{{Gj{cc}}}}}{}}```{{{f{DAn}}}Ld}{{{f{BJj}}}{{Bd{LdBb}}}}``{{{f{D@b}}}{{l{Mh}}}}{{{f{CI`}}}{{l{Mh}}}}{{{f{BOb}}}{{Bd{{l{Mh}}Bb}}}}`=```6{{{f{CHn}}}{{l{Mh}}}}21`{{{f{DBb}}{C`{{f{AKj}}}}}{{Bd{DBbBb}}}}{{{f{DBd}}{C`{{f{AKj}}}}}{{Bd{DBdBb}}}}{{{f{BDl}}}Gf}{{{f{BDl}}}d}{{{BHl{}{{Dd{c}}}}{f{B`}}}c{}}{{BDlGf}BDl}{{BHjBHj}}{{{f{BHn}}{f{B`}}}{{Bd{B`Bb}}}}``{{{f{BJj}}}Fh}{{{f{CGh}}}{{C`{Fh}}}}{{{f{BOj}}}{{C`{Fh}}}}{{{f{BIh}}}{{C`{Fh}}}}`````{{{BLl{c}}Fh}{{BLl{c}}}BM`}`{BJfBHj}{BJhBHj}{{{f{AG`}}}{{Bd{FhBb}}}}{BHjBHj}{{{f{BJj}}}{{Bd{FhBb}}}}{{{f{BJj}}}{{f{Af}}}}{BHjDAb}````33`{{{f{D@b}}}{{l{Jd}}}}{{{f{CI`}}}{{l{Jd}}}}{{{f{BOb}}}{{Bd{{l{Jd}}Bb}}}}{{{f{CIb}}}{{l{Jj}}}}{{{f{BDl}}}Gf}`{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{CJlNj}BIb}{{{f{CBf}}}d}{BDl}{BHj}{{{f{B`}}}{{Bd{B`Bb}}}}0{{{f{BDl}}}d}{{DBfFh}{{C`{Fh}}}}{{BHjc}BHj{{ANl{BHj}}}}0{{{f{BJl}}}{{Bd{MnBb}}}}{{}c{}}{cCKdBK`}{cCHfBM`}2{{{f{Af}}c}DBh{}}{c{{AKd{c}}}{}}{BClBId}{c{{BHd{c}}}BHh}{c{{BLl{c}}}BM`}{{{f{{An{Mn}}}}}BJl}{c{{CKf{c}}}BHh}{c{{BJn{c}}}BK`}{c{{CKh{c}}}BM`}{{}CHd}{c{{BMb{c}}}BM`}{{}CHh}{c{{CKj{c}}}BM`}{c{{CKl{c}}}BHh}{GfBDl}{cBOj{{Hl{CLn}}}}{cBIh{{Hl{CLn}}}}{{BDlBDlBDl}C@f}{c{{CKn{c}}}BHh}{{DBj{Lh{CG`}}{Lh{BBf}}Fh{C`{{Fn{Fh}}}}{C`{{Lh{BHf}}}}{C`{DAl}}Fhd{C`{{Fn{B`}}}}CBh}{{Bd{BMhBb}}}}{c{{BMf{c}}}BHh}{c{{BMj{c}}}{BM`BM`}}{CBbBGn}{c{{BIn{c}}}{}}{{BHjBHjBHj}CEf}{{}CEh}{{{f{Af}}{Fn{Mn}}{BIn{{Lh{BIl}}}}c}BNfBKb}{c{{Lh{c}}}{}}{{AEh{Fn{{Cf{Cd}}}}{C`{Hf}}}BDh}{{}BAl}{{cAEhd}ANn{{ANl{Ef}}}}{e{{Lh{c}}}{}{{A@d{{f{{CJ`{c}}}}}{{Dd{c}}}}}}{AEhBDh}{{{f{AHl}}FhFh}{{l{c}}}Db}{{{f{BJj}}FhFh}B`}{{{f{Af}}}C@n}{{ce}{{Lh{ce}}}{}BIb}{{{f{BAl}}Fh{AOj{AOh}}Ed}{{Bd{BAlBb}}}}{{Gf{f{Af}}}{{Bd{B`Bb}}}}{EfC@n}{{AEhFh}BDh}{{{Lh{{An{CHb}}}}}BOj}{{{Lh{{An{CHb}}}}}BIh}{AlC@n}{{}{{Lh{{BLf{c}}}}}{}}{c{{Lh{{BLf{e}}c}}}BIb{}}{Fh{{Lh{{An{{BLf{c}}}}}}}{}}{{Fhc}{{Lh{{An{{BLf{e}}}}c}}}BIb{}}3210{{{f{ClDBl}}}C`}{{{f{ClCOf}}}C`}{{{f{ClBMn}}Fh}{{Bd{{C`{{Fn{B@f}}}}Bb}}}}{{{f{ClBLj}}Fh}{{Bd{{C`{{Fn{B@f}}}}Bb}}}}{{{f{ClBMh}}Fh}{{Bd{{C`{{Fn{B@f}}}}Bb}}}}{{{f{BHj}}{f{Cl{BE`{{f{BHj}}}}}}}b}{{BHj{f{Cl{BE`{BHj}}}}}b}{BHjBHj}0{{{f{{AGf{}{{Cb{c}}}}}}e}c{}{}}0{GfBHj}`{{}A@b}{{}Nl}`{{{f{BJj}}}Fh}{BClBCl}6`````{{{f{Cl{BMf{c}}}}}{{Bd{FhBb}}}BHh}````{{{f{AGh}}}{{Bd{{Gh{Gf}}Bb}}}}{{BIdc}BId{{Hl{{An{BHj}}}}}}{{BCl{f{Cl{BGh{BGf}}}}{f{Cl{BGh{BGj}}}}}{{Bd{BGdBb}}}}`{{BHjc}BHj{{ANl{BHj}}}}{{{f{CHn}}}{{l{Ln}}}}{{{f{CI`}}}{{l{Ln}}}}{{{f{BOb}}}{{Bd{{l{Ln}}Bb}}}}{{{f{BOb}}}{{Bd{{l{Jd}}Bb}}}}{{CDdc}BHj{{ANl{BHj}}}}{{CDhc}BHj{{ANl{BHj}}}}`{{BHje}BHj{{ANl{BHj}}ABj}{{Hl{{An{c}}}}}}{{BHje{C`{{Gj{eEj}}}}CFb}BHj{{ANl{BHj}}ABj}{{Hl{{An{c}}}}}}```{{{f{Af}}}BDl}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}}{{Jh{JfJd}}}}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}}{{Jh{KhJj}}}}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}Jl}{{Jh{JnJj}}}}``{{{f{BDl}}{f{BDl}}}{{C`{B@`}}}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}{{C`{B@`}}}{CO`Nj}BIb}{{{f{CGh}}}{{f{CLn}}}}{{{f{BOj}}}{{f{CLn}}}}{{{f{BIh}}}{{f{CLn}}}}`{{{f{CGh}}}{{f{{An{CHb}}}}}}{{{f{BOj}}}{{f{{An{CHb}}}}}}{{{f{BIh}}}{{f{{An{CHb}}}}}}``{{}BHj}{c{{DBn{{Lh{c}}}}}{}}{{ce}{{DBn{{Lh{ce}}}}}{}BIb}````{{BHjc}BHj{{ANl{BHj}}}}```{{DAb{f{Af}}}BHj}0{{{f{B@f}}{f{B@f}}d}{{Bd{{Gj{{On{{Fn{Ij}}{Fn{Nl}}}}{On{{Fn{A@b}}{Fn{Nl}}}}}}Bb}}}}`{{{f{DAn}}}Ld}{BHjBHj}{BCl{{Bd{{Gj{B@fB@f}}Bb}}}}```{{{f{{Lh{c}}}}{f{ClDC`}}}b{AJlNj}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}dNjBIb}{{{f{Af}}BHjNd}BHj}{{BClBHjNd}BCl}{{{f{AHj}}LfNd}{{Bd{{C`{c}}Bb}}}{}}{{BHjBHjNd}BHj}{{{f{DB`}}LfNd}{{Bd{LdBb}}}}{{{f{BJj}}LfNd}{{Bd{LdBb}}}}{{{f{CHn}}}{{l{Mh}}}}{{{f{CI`}}}{{l{Mh}}}}{{{f{BOb}}}{{Bd{{l{Mh}}Bb}}}}{{{f{Clc}}e}{{Bd{{f{Clg}}BAb}}}{}CK`{}}````{{{f{DCb}}CCn{C`{Jb}}}B`}{{BHjCCn{C`{Jb}}}BHj}{{{f{Cl{Lh{AE`}}}}{f{Cl{An{Al}}}}}{{Bd{FhBAb}}}}{{{f{Cl{Lh{AE`}}}}DCd}{{Bd{bBAb}}}}{{{BMf{c}}CBh}{{BMf{c}}}BHh}{{{f{Cl{Lh{AE`}}}}{f{Cl{Fn{Al}}}}}{{Bd{FhBAb}}}}{{{f{Cl{Lh{AE`}}}}{f{ClEf}}}{{Bd{FhBAb}}}}{{{f{Clc}}}{{Bd{eBAb}}}{}DCf}{{{f{Cl{Lh{AE`}}}}{f{Cl{An{DCh}}}}}{{Bd{FhBAb}}}}{{{f{CGh}}}d}{{{f{BJj}}}B`}{{{f{BOj}}}d}{{{f{BIh}}}d}````{{ce}BHj{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HnI`ABj}{{Hl{{An{BHj}}}}}}{{{f{AHn}}}B`}0{{{BHl{}{{Dd{c}}}}{f{B`}}}c{}}{{BHjBHj}}{{{f{BHn}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{ClBAl}}{f{Af}}}{{C`{Ed}}}}{{{f{ClBJj}}{f{Af}}}b}{{BClei}BCl{{Hl{Af}}}{{Hb{}{{Cb{c}}}}}{{Hl{Af}}}{{Hb{}{{Cb{g}}}}}}{{{f{ClBAl}}{f{Af}}{AOj{AOh}}}{{C`{{AOj{AOh}}}}}}{{CKb{Fn{Ef}}}BHj}{{cBHj}BHj{{ANl{BHj}}}}{{{f{B`}}{f{{l{El}}}}}{{Bd{{l{j}}Bb}}}}{{BHjc}BHj{{ANl{BHj}}}}{{{f{B`}}{f{B`}}{f{B`}}{f{B`}}{C`{Ed}}}{{Bd{B`Bb}}}}{{{f{BLh}}{f{Af}}{f{Af}}}{{Bd{{l{A`}}Bb}}}}{{BHjcc{C`{c}}{C`{Ed}}}BHj{{ANl{BHj}}}}1{{{f{BJl}}{C`{Ed}}}{{Bd{MnBb}}}}{{{f{BLh}}{f{Af}}{f{Af}}Fh}{{Bd{{l{A`}}Bb}}}}3{{{f{{Jh{JnJj}}}}{C`{{f{Af}}}}{f{{l{A`}}}}CGf}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{ClBAl}}Fh}b}{{BHj{f{{An{Gf}}}}CFd}BHj}{{{f{CLn}}}CHb}`{{{f{AI`}}}AI`}{{{f{BJj}}}B`}{BJfBHj}{BClBCl}{BJhBHj}{BHjBHj}`{{BIdc}BId{{Hl{{An{BHj}}}}}}{{{f{COj}}{Fn{B`}}{f{BDb}}}{{Bd{{Gj{B`{Fn{B`}}Bh}}Bb}}}}{{BClBHjcBDb}BI`{{Hl{{An{BHj}}}}}}{{BHjBDb}BHj}{{{f{AIb}}{f{Df}}Nf}{{Bd{B`Bb}}}}{{BHj{Lh{Df}}{BIn{{Lh{BIl}}}}Nf}BHj}{{{f{BJj}}{f{Df}}Nf}{{Bd{B`Bb}}}}{{BHjFhc}BHj{{Dn{{f{Cl{l{E`}}}}}{{Dd{{C`{Lf}}}}}}HnI`Dh}}{{{f{DCj}}Nf}{{Bd{B`Bb}}}}{{BHjNf}BHj}{{{f{DCj}}{f{B`}}BOf}{{Bd{B`Bb}}}}{{BHjBHjBOf}BHj}32102032103{{BHjNdLfNf}BHj}2{{BHjBHjNdLfBOf}BHj}543254325432{{{f{DCl}}{f{{l{A`}}}}{C`{{f{AKj}}}}}{{Bd{DClBb}}}}{{{f{BO`}}Ij}{{Bd{B`Bb}}}}{{BHjIj}BHj}{{{f{C@f}}Gf{C`{{f{AKj}}}}}{{Bd{GfBb}}}}0{{{f{BO`}}Mb}{{Bd{B`Bb}}}}{{BHjMb}BHj}2````{{{f{CGh}}}{{C`{{f{DAl}}}}}}{{{f{BOj}}}{{C`{{f{DAl}}}}}}{{{f{BIh}}}{{C`{{f{DAl}}}}}}``````{{{f{DA`}}{l{j}}}{{l{j}}}}{{}{{BIn{{Lh{BIl}}}}}}{{BHjBHjdd{C`{Jb}}}BHj}0`{{{f{BIf}}DCn}{{Bd{B@fBb}}}}{{{f{BIh}}DCn}{{Bd{B@fBb}}}}{{cBOn}{{Bd{BClBb}}}{{Hl{CLn}}}}{{{Lh{{An{CHb}}}}BOn}{{Bd{BClBb}}}}{{cC@b}{{Bd{BClBb}}}{{Hl{CLn}}}}{{{Lh{{An{CHb}}}}C@b}{{Bd{BClBb}}}}{{DD`{f{{An{Ij}}}}e}{{Bd{B`Bb}}}Dh{{Hb{}{{Cb{{C`{c}}}}}}}}{{{f{AId}}c{C`{e}}}{{Bd{AIdBb}}}{{Hb{}{{Cb{Ij}}}}}{}}{{{f{AId}}ci}{{Bd{AIdBb}}}{{Hb{}{{Cb{Ij}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{g}}}}}}}}{{{f{Cl{CKf{c}}}}}{{Bd{{Lh{BBf}}Bb}}}BHh}{{{f{Cl{BJn{c}}}}}{{Bd{BAlBb}}}BK`}{{{f{ClBCl}}}{{Bd{{Lh{BAl}}Bb}}}}{{{f{BIh}}{C`{Fh}}}{{Bd{{Lh{BAl}}Bb}}}}{{{f{BMh}}}{{f{{Lh{BBf}}}}}}{{{f{Cl{BMf{c}}}}}{{Bd{{Lh{BBf}}Bb}}}BHh}{{{f{BIf}}{C`{Fh}}}{{Bd{{Lh{BAl}}Bb}}}}{{{f{CG`}}}{{f{DDb}}}}``````{{{f{ClBCl}}{f{Cl{BGh{BGf}}}}{f{Cl{BGh{BGj}}}}}{{Bd{{Lh{BAl}}Bb}}}}`{{{f{D@b}}}{{l{Mh}}}}{{{f{CI`}}}{{l{Mh}}}}{{{f{BOb}}}{{Bd{{l{Mh}}Bb}}}}`{{{f{CIb}}}{{l{Jj}}}}`{{{f{Cl{Lh{AE`}}}}DDd}{{Bd{JbBAb}}}}{{BClc}BCl{{Hl{{An{BHj}}}}}}0````{{{f{AId}}{f{{l{Ab}}}}{C`{c}}}{{Bd{AIdBb}}}{}}{{{f{BCl}}{BGh{BGf}}{BGh{BGj}}}b}{{{f{ClBAl}}{f{Af}}Ed}{{C`{Ed}}}}{{{f{ClBAl}}FhEd}{{C`{Ed}}}}{{{BMf{c}}d}{{BMf{c}}}BHh}{{{BMj{c}}d}{{BMj{c}}}BM`}{{{CKf{c}}d}{{CKf{c}}}BHh}{{{BJn{c}}d}{{BJn{c}}}BK`}{{{CKl{c}}d}{{CKl{c}}}BHh}4{{CKdd}CKd}{{BHjKl}BHj}{{{f{ClBDh}}{C`{Hf}}}b}{{{f{AIf}}Gf}{{l{c}}}Db}{{{f{BJj}}Gf}B`}{{BJfBHj}BHj}{{BClc}BCl{{ANl{BHj}}}}{{BJhBHj}BHj}{{BHjBHj}BHj}{{{f{AIh}}Gfc}{{l{e}}}{}Db}{{BClce}BCl{{ANl{BHj}}}{{ANl{BHj}}}}{{BHjce}BHj{{ANl{BHj}}}{{ANl{BHj}}}}{{{f{ClBAl}}{f{Af}}}{{C`{Ed}}}}{{{f{ClBAl}}Fh}{{C`{{Gj{{AOj{AOh}}Ed}}}}}}{{{f{BGn}}}d}{BHjBHj}{{{f{ClAAh}}}b}{{{f{ClBJj}}}b}{{BHj{C`{Jb}}}BHj}``{{BClCHbCAb}{{Bd{bBb}}}}{{BClCHbCAj}{{Bd{bBb}}}}{{BClCHbCAn}{{Bd{bBb}}}}{{BClCHbCBn}{{Bd{bBb}}}}`````{{{f{BJj}}GfFh}B`}{{BClGfIj}BCl}{{BJhBHjBHj}BHj}>{{{f{ClBDh}}FhFh}b}0```{{{f{AIj}}FhFh}AIj}{{{f{c}}FhFh}e{}{}}1022{{BDhFhFh}BDh}0`{{{f{AFn}}d}{{l{c}}}Db}{{BJfEj}BHj}{{BClcEn}BCl{{BCn{{AOj{AOh}}}}}}{{BJhEj}BHj}{{BHjEj}BHj}{{BHjeEn}BHj{{ANl{BHj}}ABj}{{Hl{{An{c}}}}}}{{BClcEn}BCl{{Hl{{An{BHj}}}}}}{{{f{AFn}}Ej}{{l{c}}}Db}{{{f{BJj}}Ej}{{Bd{B`Bb}}}}{{{f{{Lh{c}}}}}{{C`{{f{AJl}}}}}{AJlNj}}{{{f{BLh}}{f{{l{A`}}}}}{{l{j}}}}{{{f{BDh}}Fh}{{Gj{{Cf{Cd}}{Cf{Cd}}}}}}0{{{f{BLh}}{f{{l{A`}}}}Fh}{{Bd{AKnBb}}}}0{{{f{{l{A`}}}}{f{{l{A`}}}}e}{{l{j}}}{{Ch{}{{Cb{{f{Af}}}}}}}{{Df{{f{Af}}{f{Af}}}{{Dd{c}}}}}}3{{{f{{l{A`}}}}{f{{l{A`}}}}Fhed}{{Bd{AKnBb}}}{{Ch{}{{Cb{{f{Af}}}}}}}{{Df{{f{Af}}{f{Af}}}{{Dd{c}}}}}}2{BHjBHj}`{{{f{CH`}}{f{{An{Al}}}}}{{l{Ab}}}}{{{f{CH`}}{f{{l{Ad}}}}}{{l{Ab}}}}`{{BJfAl}BHj}{{BClAl}BCl}{{BJhAl}BHj}{{{f{AIl}}Al}{{C`{Lf}}}}{{BHjAl}BHj}{{{f{BJj}}Al}{{C`{Lf}}}}{{{f{DDf}}Al}Ld}{{{f{BJj}}Al}{{Bd{LdBb}}}}{{IjIj}Nl}{BHjDDh}{{{f{BLh}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{A`}}}}{f{Af}}d}{{l{A`}}}}{{{f{BLh}}}{{l{El}}}}0{{{f{BLh}}}{{l{A`}}}}{{{f{BLh}}{f{B`}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}4````{{{f{BOb}}{f{Af}}}{{Bd{B`Bb}}}}`{{BHjEd}BHj}`{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{A`}}}}707070{{{f{BLh}}{f{{l{A`}}}}}{{l{A`}}}}10{{{f{{Lh{ce}}}}}FhNjBIb}{BHjCKb}{{{BHl{}{{Dd{c}}}}{f{B`}}}c{}}{{BHjBHj}}{{{f{BHn}}{f{B`}}}{{Bd{B`Bb}}}}{{BIdc}BId{{Hl{Af}}}}{{DAb{f{Af}}}BHj}{{{f{BGn}}}{{f{Af}}}}`1{{{f{Af}}}BHj}{BJfBHj}{BClBCl}{BJhBHj}{{{f{AHh}}}{{C`{c}}}{}}{BHjBHj}{{{f{DAn}}}Ld}{{{f{BJj}}}{{Bd{LdBb}}}}{{}{{BIn{{Lh{BIl}}}}}}{{{f{Clc}}i}{{Bd{gBAb}}}{}{}{}{{A@d{{f{Cle}}}{{Dd{g}}}}}}{{BClIj}BCl}{{BI`{C`{Fh}}}BCl}{{BJhBHj}BHj}{{BHj{C`{Fh}}}BHj}{{{f{AIn}}{f{c}}}{{Bd{AInBb}}}Nj}{{{f{BJj}}{f{{l{El}}}}}{{Bd{B`Bb}}}}{{{f{DDj}}{f{{An{Nl}}}}Kl}DDj}{{{f{DDj}}{f{{An{Nl}}}}}DDj}{{{f{BJj}}{f{{An{Ij}}}}}{{Bd{B`Bb}}}}{{{f{BJj}}{f{{An{Ij}}}}}B`}{{{f{AJ`}}{f{c}}}AJ`Nj}{{{f{BJj}}{f{{l{El}}}}}B`}{{{f{ClBDh}}}{{C`{Hf}}}}{{BHjBHjBHj}BHj}{{CDbc}CDd{{ANl{BHj}}}}{{CDfc}CDh{{ANl{BHj}}}}`{{BHjBHjBDlBOl}BHj}```{{{f{BOb}}Jl}{{Bd{{l{Jj}}Bb}}}}{BCl{{Bd{DDlBb}}}}{CD`{{Bd{DDlBb}}}}1{{{f{CFh}}}{{C`{Ih}}}}{{BJhFh}BHj}{{{f{BAl}}d}BBf}{{{f{BDh}}}{{Cf{Cd}}}}{{{f{AJb}}}{{Fn{{f{{An{Al}}}}}}}}{{{f{BCl}}d}{{Bd{EfBb}}}}{{{f{DDn}}{C`{{f{Af}}}}d}{{Bd{B@fBb}}}}{{{f{BHb}}{C`{{f{Af}}}}d}{{Bd{B@fBb}}}}{{{f{BHj}}{f{BAl}}COb}{{Bd{MnBb}}}}{{{f{BLh}}{f{{l{El}}}}d}{{Bd{{l{Jj}}Bb}}}}{BJfBHj}{{{f{BLh}}}{{l{A`}}}}{DAbBHj}{{{f{A@b}}}{{C`{Ij}}}}{{{f{c}}}e{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BHjBHj}{{{f{BJl}}}{{Bd{MnBb}}}}{{{f{BOb}}{f{Af}}}{{Bd{B`Bb}}}}{{{f{c}}}Ef{}}00000000000{{{f{ClBAl}}{f{BAl}}}{{Bd{dBb}}}}`887``{{BClIjcEn}BCl{{Hl{{An{BHj}}}}}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}g{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}c}g{}{}{}}{{c{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}g{}{}{}}{{{f{DE`}}{C`{{f{AKj}}}}{f{{l{A`}}}}}{{Bd{DE`Bb}}}}{{{f{BDl}}Gf{C`{{f{AKj}}}}ceg}{{Bd{GfBb}}}{{Df{Gf}{{Dd{Gf}}}}}{{Df{Gf}{{Dd{AKh}}}}}{{Df{AKh}{{Dd{Gf}}}}}}{{{f{BDl}}Gf{C`{{f{AKj}}}}}{{Bd{GfBb}}}}{{{f{C@f}}Gf{C`{{f{AKj}}}}}{{Bd{GfBb}}}}10`10{g{{Bd{ALde}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{{AEhg}{{Bd{ALfe}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{ANf{{Bd{eg}}}{}{{ALd{c}}AJh}{}}0{{ANfAEh}{{Bd{eg}}}{}{{ALf{c}}AJh}{}}0{{ACb{f{Af}}}{{Bd{{l{c}}e}}}Db{}}{{ACd{f{{l{c}}}}}{{Bd{{l{c}}e}}}Db{}}10{{ACd{f{Af}}Ed}{{Bd{{l{c}}e}}}Db{}}0{c{{Bd{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Ih{{Bd{CFhBb}}}}111{{{Lh{{An{c}}e}}}{{Bd{{Lh{{Of{c}}e}}}}}{}BIb}22222222222222{D@h{{Bd{CG`BAd}}}}{{{f{BAl}}{f{Af}}}{{Bd{{f{Ed}}Bb}}}}{{{f{BAl}}Fh}{{Bd{{Gj{{f{{AOj{AOh}}}}{f{Ed}}}}Bb}}}}{{{f{BAl}}{f{Af}}}{{Bd{MnBb}}}}{{{f{BAl}}{f{Af}}}{{Bd{{Gj{Fh{f{{AOj{AOh}}}}{f{Ed}}}}Bb}}}}{{{f{ClBAl}}{f{Af}}}{{Bd{{f{ClEd}}Bb}}}}{{{f{COd}}{f{Af}}}{{Bd{FhBb}}}}9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999{{C@h{C`{CHb}}}{{Bd{{BHd{AE`}}Bb}}}}{{{f{BJl}}c}{{Bd{MnBb}}}{{A@d{{f{Ed}}}{{Dd{{Bd{EdBb}}}}}}}}{{{f{BJl}}c}{{Bd{MnBb}}}{{A@d{{f{{An{{f{Ed}}}}}}}{{Dd{{Bd{EdBb}}}}}}}}{{BHjc}{{Bd{BHjBb}}}{{Dn{BHj}{{Dd{{Bd{BHjBb}}}}}}}}{{{f{BJl}}c}{{Bd{MnBb}}}{{A@d{{f{Mn}}}{{Dd{{Bd{MnBb}}}}}}}}{{DBfFh}{{Bd{FhBb}}}}{Al{{Bd{CCfBb}}}}{Ij{{Bd{CChBb}}}}{Mb{{Bd{CClBb}}}}{c{{Bd{{Lh{c}}DEb}}}{}}{{AEh{Fn{{Cf{Cd}}}}{C`{Hf}}}{{Bd{BDhBb}}}}{{ce}{{Bd{{Lh{ce}}DEb}}}{}BIb}{{}{{Bd{{Lh{{BLf{c}}}}DEb}}}{}}{c{{Bd{{Lh{{BLf{e}}c}}DEb}}}BIb{}}10`{c{{Bd{{DBn{{Lh{c}}}}DEb}}}{}}{{ce}{{Bd{{DBn{{Lh{ce}}}}DEb}}}{}BIb}{{{f{BKb}}{f{Cl{Fn{Al}}}}}{{Bd{bBb}}}}{{{Lh{ce}}}{{Bd{c{Lh{ce}}}}}{}BIb}``{{{f{c}}}A@`{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Af}}}}`{{{f{AG`}}}{{Bd{AG`Bb}}}}{BJfBHj}{{BCl{C`{{Fn{Ef}}}}BBb}BCl}{BJhBHj}{BHjBHj}{{{f{BJj}}}{{Bd{B`Bb}}}}4321{{BCle}BCl{{Hl{Af}}}{{Hb{}{{Cb{c}}}}}}{{{Lh{{DEd{c}}}}}{{Bd{cb}}}Hn}{{{Lh{ce}}}cABjBIb}{{{f{ClC@h}}{f{DEf}}}b}5{{{f{DEh}}c{f{Af}}BDl}{{Bd{B@fBb}}}{{BCn{Ef}}}}0{{{BMf{c}}d}{{BMf{c}}}BHh}```{{BIdCBf}BId}`{{{f{BDh}}}{{C`{{f{Hf}}}}}}0{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}Fh}cABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{{f{CJh}}ddEf}{{Bd{B@fBb}}}}{{BHjddEf}BHj}`2`{{{f{BDh}}}{{f{{An{{Cf{Cd}}}}}}}}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}gABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{{f{BDh}}}D@j}{{BJfAl}BHj}{{BClAl}BCl}{{BJhAl}BHj}{{{f{AIl}}Al}{{C`{Lf}}}}{{BHjAl}BHj}{{{f{BJj}}Al}{{C`{Lf}}}}{{{f{DDf}}Al}Ld}{{{f{BJj}}Al}{{Bd{LdBb}}}}`{{{f{DEj}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{DEj}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}`{{{f{{Lh{{DEd{c}}}}}}g}{{Bd{eb}}}Hn{}{{A@d{{f{c}}}{{Dd{e}}}}}}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Lh{ce}}}}}FhNjBIb}{{{f{CHn}}}{{l{Mh}}}}{{{f{CI`}}}{{l{Mh}}}}{{{f{BOb}}}{{Bd{{l{Mh}}Bb}}}}210{{{f{C@d}}}{{C`{Ij}}}}{{{f{BDl}}}Gf}`{{{f{BDl}}}d}`{cCDb{{ANl{BHj}}}}{{CDdc}CDf{{ANl{BHj}}}}{{CDhc}CDf{{ANl{BHj}}}}```{{BIdBCl}BId}{{CEfBHj}CEf}{{{BLl{c}}{D@d{Fh}}}{{BLl{c}}}BM`}{{{CKl{c}}{D@d{Fh}}}{{CKl{c}}}BHh}{{BIh{C`{{D@d{Fh}}}}}BIh}{{BOjd}BOj}{Fhc{}}0{FhBAl}{{{CKn{c}}{C`{{D@d{Fh}}}}}{{CKn{c}}}BHh}{{C@hFh}C@h}{{BOj{C`{CGj}}}BOj}{{BCld}BCl}{{BGnCB`}BGn}{{BClBHj}BCl}{{{f{ClBAl}}{AOj{AOh}}Ed}{{C`{Ed}}}}{{{CKf{c}}{C`{{Fn{Ef}}}}}{{CKf{c}}}BHh}{{{BJn{c}}{C`{{Fn{Ef}}}}}{{BJn{c}}}BK`}{{BClc}BCl{{Hl{{An{BHj}}}}}}{{{BMf{c}}{C`{{Fn{Ef}}}}}{{BMf{c}}}BHh}{{C@h{C`{{Lh{{Fn{Ef}}}}}}}C@h}`2{{BOj{C`{{f{Af}}}}}BOj}{{C@j{C`{c}}}C@j{{ANl{C@n}}}}{{{CKh{c}}{C`{CAl}}}{{CKh{c}}}{}}{{CHd{C`{CAl}}}CHd}{{{BMb{c}}{C`{CAl}}}{{BMb{c}}}BM`}{{CHh{C`{CAl}}}CHh}{{{BMj{c}}CC`}{{BMj{c}}}BM`}{{BClc}BCl{{Hl{{An{BCl}}}}}}{{{BMj{c}}{C`{Fh}}}{{BMj{c}}}BM`}{{{BLl{c}}{C`{Ef}}}{{BLl{c}}}BM`}0{{CEfBHj}CEf}{{CEhBHj}CEh}{{BOjd}BOj}{{C@jd}C@j}{{{f{BJl}}Ed}{{Bd{MnBb}}}}{{BOj{C`{{Lh{BAl}}}}}BOj}{{C@h{C`{{Lh{{Fn{Ed}}}}}}}C@h}{{BOjC@l}BOj}{{C@jC@l}C@j}{{BOjAl}BOj}{{C@jAl}C@j}{{CHdCHb}CHd}{{CHhCHb}CHh}{{CKb{Fn{BHj}}}BHj}{{{BLl{c}}{C`{Fh}}}{{BLl{c}}}BM`}{{CEhBHjBHjBHj}CEh}=={{C@hd}C@h}{{{BMf{c}}{C`{{Fn{B`}}}}}{{BMf{c}}}BHh}{{CEfBHjBHjBHj}CEf}3{{CEfBHj}CEf}{{CEhBHj}CEh}{{{CKl{c}}d}{{CKl{c}}}BHh}{{BOjd}BOj}{{BIhd}BIh}{{{CKn{c}}d}{{CKn{c}}}BHh}8{{BOj{C`{Fh}}}BOj}{{BIh{C`{Fh}}}BIh}{{C@h{C`{Fh}}}C@h}{{{CKj{c}}DEl}{{CKj{c}}}BM`}{{{CKl{c}}DEl}{{CKl{c}}}BHh}{{{BLl{c}}Ef}{{BLl{c}}}BM`}8>{{ANn{DEn{EfEf}}}ANn}{{BBf{DEn{EfEf}}}BBf}=<<=<:{{C@jd}C@j}>{{CGhc}CGh{{ANl{{C`{Fh}}}}}}{{{CKf{c}}{C`{Fh}}}{{CKf{c}}}BHh}{{{BJn{c}}{C`{Fh}}}{{BJn{c}}}BK`}{{BOjc}BOj{{ANl{{C`{Fh}}}}}}<;{{BIhc}BIh{{ANl{{C`{Fh}}}}}}{{{CKn{c}}{C`{Fh}}}{{CKn{c}}}BHh}{{{BMf{c}}{C`{Fh}}}{{BMf{c}}}BHh}=1={{CEhBHj}CEh};{{BOj{C`{CA`}}}BOj}{{C@j{C`{CA`}}}C@j}{{BClCFf}BCl}{{C@hC@j}C@h}{{CGhCHb}CGh}{{BOjCHb}BOj}{{BIhCHb}BIh}{{{CKn{c}}{C`{e}}}{{CKn{c}}}BHh{{ANl{CHb}}}}{{C@h{C`{c}}}C@h{{ANl{CHb}}}}{{CGh{Lh{{An{CHb}}}}}CGh}{{BOj{Lh{{An{CHb}}}}}BOj}{{BIh{Lh{{An{CHb}}}}}BIh}{{{CKh{c}}d}{{CKh{c}}}{}}{{{BMb{c}}d}{{BMb{c}}}BM`}{{{BMf{c}}{C`{{Lh{BHf}}}}}{{BMf{c}}}BHh}{{BCld}BCl}{{{CKf{c}}{C`{{Fn{Fh}}}}}{{CKf{c}}}BHh}{{{BJn{c}}{C`{{Fn{Fh}}}}}{{BJn{c}}}BK`}{{{CKl{c}}{C`{{Fn{Ef}}}}}{{CKl{c}}}BHh}{{{BMf{c}}{C`{{Fn{Fh}}}}}{{BMf{c}}}BHh}{{C@h{C`{{Lh{{Fn{Fh}}}}}}}C@h}5{{{BLl{c}}Al}{{BLl{c}}}BM`}{{BOj{C`{Al}}}BOj}{{C@j{C`{Al}}}C@j}{{{BLl{c}}CAf}{{BLl{c}}}BM`}{{BOjd}BOj}{{C@hd}C@h}{{CGhd}CGh}2{{BIhd}BIh}{{{CKn{c}}d}{{CKn{c}}}BHh}3>{{{BMj{c}}{C`{Fh}}}{{BMj{c}}}BM`}{{CGhc}CGh{{ANl{{C`{DAl}}}}}}{{{CKf{c}}{C`{DAl}}}{{CKf{c}}}BHh}{{{BJn{c}}{C`{DAl}}}{{BJn{c}}}BK`}{{BCl{f{Af}}{C`{Ij}}}BCl}{{BOj{C`{DAl}}}BOj}{{BOjc}BOj{{ANl{{C`{DAl}}}}}}{{BIhc}BIh{{ANl{{C`{DAl}}}}}}{{BIh{C`{DAl}}}BIh}{{{BMf{c}}{C`{DAl}}}{{BMf{c}}}BHh}{{C@h{C`{DAl}}}C@h}{{{f{BJl}}}{{Bd{MnBb}}}}{{C@hFh}C@h}{{{CKl{c}}{Lh{BAl}}}{{CKl{c}}}BHh}{{BOj{C`{{Lh{BAl}}}}}BOj}{{BIh{C`{{Lh{BAl}}}}}BIh}{{{CKn{c}}{Lh{BAl}}}{{CKn{c}}}BHh}{{{BMf{c}}{C`{{Lh{BBf}}}}}{{BMf{c}}}BHh}{{C@h{C`{{Lh{BAl}}}}}C@h}{{BOjc}{{Bd{BOjBb}}}{{Df{BAl}{{Dd{{Bd{BAlBb}}}}}}}}{{{CKl{c}}{f{BAl}}}{{CKl{c}}}BHh}{{{CKn{c}}{f{BAl}}}{{CKn{c}}}BHh}3{{CEfBHj}CEf}{{CEhBHj}CEh}{{{BLl{c}}Al}{{BLl{c}}}BM`}{{BOjAl}BOj}{{C@jAl}C@j}{{BCld}BCl}{{BOjFh}BOj}{{C@hFh}C@h}102{{{BMj{c}}CFn}{{BMj{c}}}BM`}3{{BGn{C`{Ef}}}BGn}{{{BLl{c}}{C`{Ef}}}{{BLl{c}}}BM`}{{CEfJl}CEf}{{CEf{C`{Ef}}}CEf}{{BOjd}BOj}{{C@jd}C@j}109{{BDh{C`{Hf}}}BDh}{{{f{BDh}}{C`{Hf}}}{{Cf{Cd}}}}{{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}{C`{Hf}}}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{CEhBHj}CEh}{{CEfBHj}CEf}{BClBCl}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}c}e{}{}{}}10{{c{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}210213210210{{{f{Cl{Lh{AE`}}}}{f{{An{Al}}}}}{{Bd{FhBAb}}}}{{{f{Clc}}e}{{Bd{FhBAb}}}{}DCf}{{{f{Cl{Lh{AE`}}}}{f{{An{DF`}}}}}{{Bd{FhBAb}}}}{{BHjc}BHj{{ANl{BHj}}}}{{{f{CHn}}}{{l{Jd}}}}{{{f{CI`}}}{{l{Jd}}}}{{{f{BOb}}}{{Bd{{l{Jd}}Bb}}}}``{{{f{AJd}}{f{{l{Ab}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{BDn}}c}B`{{Df{{Gj{Ij{f{{BE`{Ij}}}}}}}{{Dd{C`}}}}HnI`}}{{{f{BDn}}c}B`{{Df{{Gj{Ij{f{{BE`{Ij}}}}}}}{{Dd{}}}}HnI`}}{{{f{{An{{Of{Ij}}}}}}c}B`{{Df{{Of{Ij}}}{{Dd{C`}}}}HnI`}}{{{f{{An{{Of{Ij}}}}}}c}B`{{Df{{Of{Ij}}}{{Dd{}}}}HnI`}}{{{f{{An{c}}}}e{C`{{Lh{AEj}}}}}{{AK`{c}}}{BFfBFh}{{Ch{}{{Cb{{Gj{IjIj}}}}}}If}}{{{f{{An{c}}}}{f{Hf}}e{C`{{Lh{AEj}}}}}{{AK`{c}}}{BFfBFh}{{Ch{}{{Cb{{Gj{IjIj}}}}}}If}}{{{f{{l{c}}}}IjIj}{{l{c}}}Db}{{{f{{Fn{{Of{Ij}}}}}}{f{{An{{Cf{Cd}}}}}}}d}{{{f{BFj}}{f{Bh}}}B`}{{BFlBFl}BFl}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DbDb{{Df{ff}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}Db}{{{l{c}}{l{e}}gik}{{l{m}}}DbDb{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DbDb{{AJf{C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}g}bDbDb{{Dn{C`C`}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDb{}{{Dn{}{{Dd{g}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Af}}}{{l{k}}}DbDb{CdAJh}{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Af}}}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DbDbCd{{Dn{}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDb{}{}{{Dn{C`C`}{{Dd{{Bd{{C`{g}}i}}}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DbDbDb{{AJj{C`C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDbCdAJl{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{H`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Af}}}{{Bd{{l{m}}i}}}DbDbCdAJl{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DbDbAJl{{Dn{ff}{{Dd{{Bd{{Cf{Cd}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DbDbDb{}{}{{Dn{C`C`C`}{{Dd{{Bd{{C`{i}}k}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{CdAJh}AJl{{Dn{f}{{Dd{{Bd{eg}}}}}}}{{Db{}{{H`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Db{{AJn{C`}}}Db}{{{f{{l{c}}}}e}{{l{g}}}DbAJnDb}{{{f{{l{c}}}}g}{{l{i}}}DbCd{{Dn{f}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}{{{l{c}}g}{{l{i}}}DbCd{{Dn{}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{CdAJh}{{Dn{f}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}0``{{{f{DFb}}}{{l{El}}}}0{{{f{DFb}}{f{{l{Jj}}}}d}{{Bd{B`Bb}}}}{{{f{DFb}}{f{{l{A`}}}}d}{{Bd{B`Bb}}}}{{{f{DFb}}}B`}{{{f{DFb}}}{{Bd{B`Bb}}}}1{{{f{DFb}}}{{Bd{{l{El}}Bb}}}}{{{f{DFb}}}{{l{Bj}}}}{{{f{DFb}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{DFb}}Ej}{{Bd{{l{Bj}}Bb}}}}{{{f{DFb}}Al}{{Bd{B`Bb}}}}5{{{f{DFb}}}{{Bd{{l{j}}Bb}}}}01{{{f{DFd}}}{{f{{l{Bj}}}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{BN`BHj}BHj}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}3{cc{}}{{}Fh}{ce{}{}}6{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}2````````{{{f{BKf}}{C`{{f{Af}}}}d}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKf}}{C`{{f{Af}}}}}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKf}}{C`{{f{Af}}}}Jldd{C`{{f{Ef}}}}{f{{l{A`}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{BKf}}{C`{{f{Af}}}}Jld{C`{{f{Ef}}}}{f{{l{A`}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{BKf}}{C`{{f{Af}}}}d}{{Bd{{Jh{KhJj}}Bb}}}}`{{{f{CHn}}}{{l{Mh}}}}{{{f{CI`}}}{{l{Mh}}}}{{{f{CIb}}}{{l{Jj}}}}`{{{f{D@b}}}{{l{Mh}}}}21{{{f{CHn}}}{{l{Ab}}}}{{{f{CI`}}}{{l{Ab}}}}{{{f{CHn}}}{{l{Jd}}}}{{{f{CI`}}}{{l{Jd}}}}55`46576{{{f{D@b}}}{{l{Jd}}}}16{{{f{CHn}}}{{l{Ln}}}}{{{f{CI`}}}{{l{Ln}}}}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}}{{Jh{JfJd}}}}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}}{{Jh{KhJj}}}}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}Jl}{{Jh{JnJj}}}}=<{{{f{DCj}}Nf}{{Bd{B`Bb}}}}{{{f{DCj}}{f{B`}}BOf}{{Bd{B`Bb}}}}101010101010<>=`?>?>`98````````{{{f{c}}h}b{}}{{{f{BKf}}{C`{{f{Af}}}}d}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKf}}{C`{{f{Af}}}}}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKf}}{C`{{f{Af}}}}Jldd{C`{{f{Ef}}}}{f{{l{A`}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{BKf}}{C`{{f{Af}}}}Jld{C`{{f{Ef}}}}{f{{l{A`}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{DFf}}}{{f{{l{A`}}}}}}{{{f{BKf}}{C`{{f{Af}}}}d}{{Bd{{Jh{KhJj}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DFh}}}DFh}{{{f{c}}{f{Cle}}}b{}{}}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{f{DFh}}{f{DFh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{DFh}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{DFh}}{f{Clc}}}bAC`}`{{}Fh}{ce{}{}}{{{f{DFh}}{f{Af}}}d}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{{DFj{c}}}}}{{DFj{c}}}{ABjn}}{{{f{c}}{f{Cle}}}b{}{}}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}?{{{f{Af}}}{{C`{DFh}}}}>=`{{{f{Cl{DFj{c}}}}{f{Af}}}C`n}{{{f{ClDFl}}{f{{An{Al}}}}{C`{Jl}}}{{C`{c}}}{}}{{{f{Cl{DFj{Jj}}}}{f{{An{Al}}}}{C`{Jl}}}{{C`{Gf}}}}{{{f{Cl{DFj{Jd}}}}{f{{An{Al}}}}{C`{Jl}}}{{C`{Mb}}}}`?>{{c{C`{Jl}}}{{Bd{{DG`{}{{DFn{e}}}}Bb}}}{}{}}{{DFh{C`{Jl}}}{{Bd{{DFj{Jj}}Bb}}}}{{DFh{C`{Jl}}}{{Bd{{DFj{Jd}}Bb}}}}{c{{Bd{e}}}{}{}}{{{f{c}}}A@`{}}{ce{}{}}```````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Clc}}}{{f{Cle}}}{}{}}0{{{f{CGj}}}CGj}{{{f{c}}{f{Cle}}}b{}{}}{{}CGj}{Fh{{f{c}}}{}}0{Fh{{f{Clc}}}{}}0{Fhb}0{{{f{CGj}}{f{CGj}}}d}{{{f{DGb}}{f{DGb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CGj}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}0{{{f{Af}}}{{Bd{DGb}}}}{{{f{Af}}g}{{Bd{CGjBb}}}{{Hl{Af}}}{{ANl{Ef}}}{{Hb{}{{Cb{{Gj{ce}}}}}}}}{{{f{CGj}}{f{Clc}}}bAC`}{{}Fh}0{ce{}{}}0``{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}000{{{f{c}}}A@`{}}033`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eALd{}{{Hb{}{{Cb{c}}}}}}0{{AEhe}ALf{}{{Hb{}{{Cb{c}}}}}}0{{{f{ALh}}}{{f{Ed}}}}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}{{C`{{f{{An{c}}}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{{f{AL`}}{f{AL`}}c}{{Bd{AL`Bb}}}AMh}{{{f{AMj}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{AMj}}{f{Ed}}Fb}{{Bd{B`Bb}}}}`{ANfe{}{{ALd{c}}AJh}}0{{ANfAEh}e{}{{ALf{c}}AJh}}0{{{AMd{Af}}}Ed}{{{f{AMj}}}{{f{Ed}}}}`{{AMh{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{{{Fn{c}}AEh}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{{Fn{c}}AEh}{{AJh{}{{ALj{e}}{ALl{c}}{ALn{g}}}}}{AM`{AMb{e}}}ABj{{Gb{}{{Cb{e}}}}IfHnI`}}{{FhcAEh}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{FhAEh}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}Fh}{{C`{c}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{{f{AMj}}Fh}{{Bd{IhBb}}}}{{{f{AMj}}Fh}Ih}{{}Ed}{{{f{AOl}}Fh}Ih}4{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}{{AF`{cgAEn}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}{{C`{c}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{{{f{AL`}}{f{AL`}}}{{Bd{{Gj{AL`AL`}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gj{{l{j}}{l{j}}}}Bb}}}}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}`{{}c{}}0{g{{Bd{ALde}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{{AEhg}{{Bd{ALfe}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{ANf{{Bd{eg}}}{}{{ALd{c}}AJh}{}}0{{ANfAEh}{{Bd{eg}}}{}{{ALf{c}}AJh}{}}0{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}Fh}cABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}0{{{f{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}}}gABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}{Fhc{}}0{{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}{C`{Hf}}}{{AJh{}{{ALj{c}}{ALl{e}}{ALn{g}}}}}ABj{AM`{AMb{c}}}{{Gb{}{{Cb{c}}}}IfHnI`}}```````````{{{f{AL`}}{f{AL`}}c}{{Bd{AL`Bb}}}AMh}{{AMh{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}=<`````````{{}b}0{{}d}{{{f{{Jh{JnJj}}}}{f{{l{A`}}}}CGf{Fj{Gf}{{Dd{AKh}}}}{Fj{AKh}{{Dd{Gf}}}}{f{AKj}}{f{AKj}}}{{Bd{{l{Jj}}Bb}}}}{{{f{{Jh{JnJj}}}}{C`{{f{Af}}}}{Fj{Gf}{{Dd{AKh}}}}{Fj{AKh}{{Dd{Gf}}}}{f{AKj}}{f{AKj}}}{{Bd{{l{Jj}}Bb}}}}{{{f{{Jh{JnJj}}}}{C`{{f{Af}}}}{f{{l{A`}}}}CGf}{{Bd{{Jh{JnJj}}Bb}}}}```{{c{C`{Hf}}}CMn{}}{{{CN`{Gf}}{CN`{Al}}{C`{Hf}}}CNb}{{{CN`{Gf}}{CN`{Al}}{C`{Hf}}}CNd}`{CJbBHj}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{CJbJl}BHj}3{{CJbBHjJl}BHj}{{CJbEf}BHj}555{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}8{cc{}}9{{}Fh}{ce{}{}};;;;;;;;;;{{CJb{C`{Ef}}BHjCGf}BHj}{{CJbBHj}BHj}={{CJb{f{Af}}}BHj}>;0>>>>>>>1{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}5{CJbBHj}0>0`{{{f{BFn}}{f{B@f}}{f{Bh}}}{{Bd{B`Bb}}}}{{{f{BFn}}}{{Bd{{f{Af}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}DGd}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{DGd{C`{{f{AEh}}}}}{{Bd{AD`Bb}}}}{cc{}}{{}Fh}{ce{}{}}{{{f{DGd}}}d}{{FhFh}DGd}{{{f{ClDGd}}{Cf{Cd}}}b}{{{f{ClDGd}}}b}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}6`{{{f{{l{c}}}}}Fhn}0`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DGf}}}DGf}{{{f{c}}{f{Cle}}}b{}{}}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{f{DGf}}{f{DGf}}}d}{{{f{DGf}}{f{ClGl}}}{{Bd{bGn}}}}0{cc{}}{{{f{DGf}}{f{Clc}}}bAC`}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DGh}}}DGh}{{{f{c}}{f{Cle}}}b{}{}}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{f{DGh}}{f{DGh}}}d}{{{f{DGh}}{f{ClGl}}}{{Bd{bGn}}}}0{cc{}}{{{f{DGh}}{f{Clc}}}bAC`}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4{{KlKl}Kl}{{{f{{l{El}}}}Ij}{{Bd{bBb}}}}{{{f{{AK`{Ij}}}}Ij}{{Bd{bBb}}}}```{{{f{B`}}CCb}B`}{{{f{B`}}{f{B`}}d}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{Bh}}}B`}0{{{f{B`}}{f{Af}}}B`}0`{{{f{c}}h}b{}}{{{f{DGj}}}{{f{AEj}}}}{{{f{ClDGj}}}{{Cf{Cd}}}}{{{f{ClDGj}}}{{f{ClAEj}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DGj}}}DGj}{{{f{c}}{f{Cle}}}b{}{}}{{{f{DGj}}}{{f{AEh}}}}{{}DGj}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{f{ClDGj}}Fh}b}{{{f{DGj}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{}Fh}{ce{}{}}{{{f{DGj}}}Fh}{FhDGj}{{{f{ClDGj}}}b}70{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}{{{f{DGj}}}{{C`{{f{DGl}}}}}}7`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DEf}}}DEf}{{{f{c}}{f{Cle}}}b{}{}}{{}DEf}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{f{DEf}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{DEf}}}Fh}{{{f{DEf}}}{{Lh{BAl}}}}{{{f{COh}}Al{C`{Fh}}d{C`{{f{BAl}}}}FhFh{C`{{f{C@n}}}}{C`{Al}}Al{C`{{f{CA`}}}}dd{f{Cl{C`{Fh}}}}d}{{Bd{{Gj{BAlFhFh}}Bb}}}}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}{{{f{COh}}{f{C@h}}}{{Bd{DEfBb}}}}1{{{f{c}}}A@`{}}4{{DEf{Lh{BAl}}}DEf}````{{{f{{l{c}}}}eAKbd}{{Fn{Ij}}}Db{{Ch{}{{Cb{C`}}}}}}{{{f{{An{f}}}}cIje}{{Fn{Ij}}}{{Ch{}{{Cb{C`}}}}}{{Df{fFhf}{{Dd{d}}}}}}``{{{f{DGn}}}{{f{B`}}}}{{{f{BOb}}}{{Bd{{l{Jd}}Bb}}}}{{{f{BOb}}}{{Bd{{l{Mh}}Bb}}}}0{{{f{BOb}}}{{Bd{{l{Ab}}Bb}}}}22112{{{f{BOb}}}{{Bd{{l{Ln}}Bb}}}}322{{{f{BOb}}{f{Af}}}{{Bd{B`Bb}}}}{{{f{BOb}}Jl}{{Bd{{l{Jj}}Bb}}}}1445`{{{f{AIj}}FhFh}AIj}0`{{Fh{f{Cl{Fn{d}}}}}b}```11{{Fh{f{{An{B`}}}}{f{ClEn}}}{{Bd{{AKd{{l{El}}}}Bb}}}}{{{f{{An{B`}}}}{f{{An{d}}}}{f{{An{d}}}}}{{Bd{AKfBb}}}}{{{f{Af}}{f{{An{B`}}}}{f{{An{d}}}}{f{{An{d}}}}}{{Bd{{l{Eh}}Bb}}}}{{{f{Af}}{f{{An{B`}}}}}{{Bd{{l{Eh}}Bb}}}}{{{f{B`}}}{{Bd{{Cf{Cd}}Bb}}}}{{{f{{An{B`}}}}}{{Bd{AKfBb}}}}{{{f{{An{B`}}}}}{{Bd{{l{Eh}}Bb}}}}0```````````88```{{{f{BLd}}}{{f{{l{A`}}}}}}{{{f{BLh}}}{{Bd{{l{A`}}Bb}}}}{{{f{BLh}}}{{l{A`}}}}{{{f{BLh}}{f{{l{A`}}}}}{{l{A`}}}}{{{f{BLh}}{f{Af}}d}{{Bd{{l{Ab}}Bb}}}}{{{f{BLh}}{f{{l{A`}}}}dd}{{Bd{{l{Ab}}Bb}}}}{{{f{BLh}}{f{Af}}}{{Bd{{l{Ab}}Bb}}}}{{{f{BLh}}{f{Af}}d}{{Bd{{l{El}}Bb}}}}{{{f{BLh}}{f{{l{A`}}}}d}{{Bd{{l{El}}Bb}}}}{{{f{BLh}}{f{{l{A`}}}}Fh}{{Bd{{l{A`}}Bb}}}}{{{f{BLh}}{f{Af}}}{{Bd{{l{j}}Bb}}}}{{{f{BLh}}{f{{l{A`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BLh}}{f{Af}}{f{Ed}}}{{Bd{B`Bb}}}}5{{{f{BLh}}{f{{l{A`}}}}dd}{{Bd{{l{El}}Bb}}}}{{{f{BLh}}{f{Af}}}{{Bd{{l{El}}Bb}}}}=<{{{f{{An{{f{{l{A`}}}}}}}}{f{Af}}d}{{Bd{{l{A`}}Bb}}}}{{{f{BLh}}{f{Af}}{f{Af}}}{{Bd{{l{A`}}Bb}}}}0{{{f{BLh}}{f{Af}}{f{Af}}Fh}{{Bd{{l{A`}}Bb}}}}1{{{f{BLh}}{f{{l{A`}}}}}{{l{j}}}}{{{f{BLh}}{f{{l{A`}}}}Fh}{{Bd{AKnBb}}}}0{{{f{{l{A`}}}}{f{{l{A`}}}}e}{{l{j}}}{{Ch{}{{Cb{{f{Af}}}}}}}{{Df{{f{Af}}{f{Af}}}{{Dd{c}}}}}}2{{{f{{l{A`}}}}{f{{l{A`}}}}Fhed}{{Bd{AKnBb}}}{{Ch{}{{Cb{{f{Af}}}}}}}{{Df{{f{Af}}{f{Af}}}{{Dd{c}}}}}}2{{{f{BLh}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{A`}}}}{f{Af}}d}{{l{A`}}}}{{{f{BLh}}}{{l{El}}}}0{{{f{BLh}}}{{l{A`}}}}{{{f{BLh}}{f{B`}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}4{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{A`}}}}505050{{{f{BLh}}{f{{l{A`}}}}}{{l{A`}}}}10{{{f{BLh}}{f{{l{El}}}}d}{{Bd{{l{Jj}}Bb}}}}444````````{{eFhFh}{{DH`{Gf}}}{{Hl{Af}}}{{Ch{}{{Cb{c}}}}}}{{eFhFh}{{DHb{Gf}}}{{Hl{{An{Al}}}}}{{Ch{}{{Cb{c}}}}}}```````````{{{f{c}}h}b{}}0{{{f{Af}}{Fn{{Cf{Cd}}}}{f{AEh}}}{{Bd{B`Bb}}}}{{{f{Af}}{Fn{{Cf{Cd}}}}{f{AEh}}{C`{{f{{DEn{EfEf}}}}}}}{{Bd{B`Bb}}}}{{B`c}{}{AhLb}}{{{f{B`}}c}{}{AhLb}}{{B`B`}}{{{f{B`}}{f{B`}}}}{{{f{ClB`}}{f{B`}}}{{Bd{{f{ClB`}}Bb}}}}{{{f{B`}}}{{C`{Fh}}}}0{{{f{BJj}}Ej}{{l{El}}}}{{{f{BJj}}}{{Bd{{l{El}}Bb}}}}`{{{f{B`}}}{{Bd{{f{{l{Bj}}}}Bb}}}}{{{f{B`}}Fh}{{f{{Cf{Cd}}}}}}{{{f{BJj}}}{{f{AEj}}}}{{{f{ClBJj}}}{{f{ClAEj}}}}{{{f{B`}}}{{l{j}}}}{{{f{ClBJj}}}{{f{Cl{l{c}}}}}Db}{{{f{BJj}}}{{f{{l{c}}}}}Db}{{{f{B`}}}{{f{BJj}}}}{{{f{B`}}}{{f{B`}}}}0{{{f{ClBJj}}}{{Bd{FhBb}}}}{{{f{ClB`}}}{{Bd{FhBb}}}}{{{f{B`}}}{{Bd{{f{{l{Ad}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Eh}}}}Bb}}}}{{{f{BJj}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{B`}}}{{Bd{{f{{l{Ab}}}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{BJj}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{B`}}{f{Ed}}}{{Bd{B`Bb}}}}0{{{f{B`}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{AL`}}Bb}}}}7{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}c}{{Bd{B`Bb}}}Aj}{{{f{BJj}}}{{Fl{{Ff{{Cf{Cd}}}}{Fj{{f{{Cf{Cd}}}}}{{Dd{Fh}}}}}}}}{{{f{BJj}}}{{f{{Fn{{Cf{Cd}}}}}}}}{{{f{ClBJj}}}{{f{Cl{Fn{{Cf{Cd}}}}}}}}{{{f{ClB`}}}{{f{Cl{Fn{{Cf{Cd}}}}}}}}{{{f{B`}}}B`}{{{f{Kl}}}Kl}1{{{f{BJj}}}{{Lh{BJj}}}}{{{f{c}}{f{Cle}}}b{}{}}0{{{f{ClB`}}}b}{{{f{B`}}}{{Bd{{f{{Jh{JfJd}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jh{JnJj}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jh{KbK`}}}}Bb}}}}{{}B`}{Fh{{f{c}}}{}}00{{{f{B`}}}f}{Fh{{f{Clc}}}{}}00{{{f{B`}}c}{}{AhLb}}{{B`B`}}{{{f{B`}}{f{B`}}}}{{B`c}{}{AhLb}}{Fhb}00{{{f{BJj}}}B`}{{{f{BJj}}}{{f{Ed}}}}{{{f{B`}}}{{Bd{{f{{Jh{KdJj}}}}Bb}}}}{{{f{Kl}}{f{Kl}}}d}{{{f{B`}}{f{B`}}}d}{{{f{{AGf{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{B`}}}{{Bd{{l{Ab}}Bb}}}}{{{f{B`}}c}{{Bd{{l{Ab}}Bb}}}ANj}{{{f{B`}}{f{Af}}}{{Bd{{l{Ab}}Bb}}}}3{{{f{B`}}{f{Af}}}}3{{{f{B`}}c}{}ANj}66{{{f{c}}{f{e}}}d{}{}}00{{{f{B`}}}Fh}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{ClB`}}{f{B`}}}{{Bd{{f{ClB`}}Bb}}}}{{{f{B`}}IhFh}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Eb}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{E`}}}}Bb}}}}{{{f{BJj}}}{{Dj{Mn}}}}{{{f{B`}}AGd}{{Bd{B`Bb}}}}{{{f{BJj}}{f{{l{Ab}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{{l{Ab}}}}d}{{Bd{B`Bb}}}}{{{f{Kl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{B`}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{B`}}}Ef}{cc{}}0{{{Jh{JfJd}}}B`}{{{Jh{KdJj}}}B`}2{{{l{c}}}B`Db}{{{Jh{JnJj}}}B`}{{{Jh{KhJj}}}B`}{{{f{Af}}{f{{An{Ih}}}}d}{{Bd{B`Bb}}}}{{{f{Af}}{f{{An{Ih}}}}{f{Ed}}d}{{Bd{B`Bb}}}}{{{f{Af}}{Cf{Cd}}}{{Bd{B`Bb}}}}{{{f{Af}}{Fn{{Cf{Cd}}}}}{{Bd{B`Bb}}}}{{{f{Af}}{Fn{{Cf{Cd}}}}{f{Ed}}}B`}{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}{cB`{{Hb{}{{Cb{{C`{Ij}}}}}}}}{cB`{{Hb{}{{Cb{{f{Mj}}}}}}}}{cB`{{Hb{}{{Cb{{f{Al}}}}}}}}{cB`{{Hb{}{{Cb{{f{M`}}}}}}}}{cB`{{Hb{}{{Cb{{f{Af}}}}}}}}{cB`{{Hb{}{{Cb{Ef}}}}}}{cB`{{Hb{}{{Cb{{f{Ij}}}}}}}}{cB`{{Hb{}{{Cb{Mf}}}}}}{cB`{{Hb{}{{Cb{{C`{Mb}}}}}}}}{cB`{{Hb{}{{Cb{{f{Mb}}}}}}}}{cB`{{Hb{}{{Cb{J`}}}}}}{cB`{{Hb{}{{Cb{{C`{Al}}}}}}}}{cB`{{Hb{}{{Cb{M`}}}}}}{cB`{{Hb{}{{Cb{Mj}}}}}}{cB`{{Hb{}{{Cb{Al}}}}}}{cB`{{Hb{}{{Cb{{C`{Lf}}}}}}}}{cB`{{Hb{}{{Cb{{C`{Mj}}}}}}}}{cB`{{Hb{}{{Cb{Gf}}}}}}{cB`{{Hb{}{{Cb{{C`{J`}}}}}}}}{cB`{{Hb{}{{Cb{{C`{d}}}}}}}}{cB`{{Hb{}{{Cb{Jb}}}}}}{cB`{{Hb{}{{Cb{Lf}}}}}}{cB`{{Hb{}{{Cb{Ij}}}}}}{cB`{{Hb{}{{Cb{{C`{Gf}}}}}}}}{cB`{{Hb{}{{Cb{{f{Mf}}}}}}}}{cB`{{Hb{}{{Cb{{C`{M`}}}}}}}}{cB`{{Hb{}{{Cb{{f{Gf}}}}}}}}{cB`{{Hb{}{{Cb{Mb}}}}}}{cB`{{Hb{}{{Cb{{f{d}}}}}}}}{cB`{{Hb{}{{Cb{d}}}}}}{cB`{{Hb{}{{Cb{{f{J`}}}}}}}}{cB`{{Hb{}{{Cb{{f{Jb}}}}}}}}{cB`{{Hb{}{{Cb{{C`{Jb}}}}}}}}{cB`{{Hb{}{{Cb{{f{Lf}}}}}}}}{cB`{{Hb{}{{Cb{{C`{Mf}}}}}}}}{{{f{Af}}{Fn{Mf}}}B`}{{{f{Af}}{Fn{Jb}}}B`}{{{f{Af}}{Fn{Mb}}}B`}{{{f{Af}}{Fn{Al}}}B`}{{{f{Af}}{Fn{Lf}}}B`}{{{f{Af}}{Fn{Mj}}}B`}{{{f{Af}}{Fn{J`}}}B`}{{{f{Af}}{Fn{M`}}}B`}{{{f{Af}}{Fn{Ij}}}B`}{{{f{Af}}{Fn{Gf}}}B`}{{{f{Af}}Fh{f{Ed}}}B`}{{{f{B`}}FhFh}B`}{{{f{BJj}}Fh}{{Bd{IhBb}}}}{{{f{B`}}}Fh}{{{f{B`}}}Il}{{{f{B`}}}B`}{{{f{BJj}}Fh}{{C`{{f{In}}}}}}{{{f{BJj}}FhFh}{{C`{{f{In}}}}}}{{{f{BJj}}Fh}Ih}{{{f{{AGf{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{B`}}}{{Bd{{l{Ab}}Bb}}}}{{{f{B`}}c}{{Bd{{l{Ab}}Bb}}}ANj}{{{f{B`}}{f{Af}}}{{Bd{{l{Ab}}Bb}}}}3{{{f{B`}}{f{Af}}}}32{{{f{BJj}}}d}{{{f{Kl}}{f{Clc}}}bAC`}{{{f{B`}}{C`{Fh}}}B`}{{{f{B`}}}{{Bd{{f{{l{Ln}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Jd}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Jj}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Mh}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{El}}}}Bb}}}}`{{{f{B`}}}{{Bd{{l{j}}Bb}}}}{{}Fh}00{ce{}{}}00{B`B@f}1{BAnB`}{B`B`}={{{f{B`}}}{{Bd{{l{Ab}}Bb}}}}000{{{f{BJj}}}{{l{Ab}}}}0{{}d}0{{{f{B`}}}Kl}{{{f{B`}}}DHd}{{{f{BJj}}}Fh}{{{f{BJj}}Fh}B`}{{{f{B`}}}{{Bd{{f{{l{j}}}}Bb}}}}{B`BHj}{{{f{{AGf{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}c}{{Bd{{l{Ab}}Bb}}}ANj}{{{f{B`}}{f{Af}}}}{{{f{B`}}{f{B`}}}{{Bd{{l{Ab}}Bb}}}}3201{{{f{B`}}}{{Bd{{C`{c}}Bb}}}Lb}{{{f{BJj}}}{{Bd{LdBb}}}}{{{f{BJj}}}{{C`{Lf}}}}{{{f{B`}}}Ld}1232{{B`c}{}{AhLb}}{{{f{B`}}c}{}{AhLb}}{{B`B`}}{{{f{B`}}{f{B`}}}}?{{{f{BJj}}}{{Bd{FhBb}}}}{{{f{BJj}}}{{f{Af}}}}{{{f{Af}}c}B`{{Hl{{An{{C`{d}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{d}}}}}}{{{f{Af}}c}B`{{Hl{{An{{C`{Mj}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{Ih}}}}}}{{{f{Af}}c}B`{{Hl{{An{{C`{AKh}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{{C`{M`}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{{C`{Ef}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{AOf}}}}}}{{{f{Af}}c}B`{{Hl{{An{B`}}}}}}{{{f{Af}}c}B`{{Hl{{An{M`}}}}}}{{{f{Af}}c}B`{{Hl{{An{{C`{B`}}}}}}}}{{{f{Af}}{Lj{Gf}}}B`}{{{f{Af}}c}B`{{Hl{{An{{C`{Al}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{{f{Af}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{{C`{Ij}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{{C`{Mb}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{{C`{Jb}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{AKh}}}}}}{{{f{Af}}c}B`{{Hl{{An{Gf}}}}}}{{{f{Af}}c}B`{{Hl{{An{AOd}}}}}}{{{f{Af}}c}B`{{Hl{{An{AKl}}}}}}{{{f{Af}}c}B`{{Hl{{An{{Dj{{An{Al}}}}}}}}}}{{{f{Af}}{Lj{Mb}}}B`}{{{f{Af}}c}B`{{Hl{{An{Mj}}}}}}{{{f{Af}}c}B`{{Hl{{An{J`}}}}}}{{{f{Af}}c}B`{{Hl{{An{{C`{J`}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{{C`{{f{Af}}}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{Al}}}}}}{{{f{Af}}c}B`{{Hl{{An{{C`{AOf}}}}}}}}{{{f{Af}}c}B`BAn}{{{f{Af}}c}B`{{Hl{{An{Mb}}}}}}{{{f{Af}}c}B`{{Hl{{An{Mf}}}}}}{{{f{Af}}c}B`{{Hl{{An{Ij}}}}}}{{{f{Af}}c}B`{{Hl{{An{{C`{AOd}}}}}}}}{{{f{Af}}{Lj{Ij}}}B`}{{{f{Af}}{Lj{Jb}}}B`}{{{f{Af}}{f{B`}}}B`}{{{f{Af}}c}B`{{Hl{{An{{C`{Gf}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{{C`{{Dj{{An{Al}}}}}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{{f{{An{Al}}}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{{C`{{Dj{Af}}}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{{C`{AKl}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{Ef}}}}}}{{{f{Af}}c}B`{{Hl{{An{{Fn{Al}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{{Dj{Af}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{{C`{Lf}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{{C`{{Fn{Al}}}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{{C`{Mf}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{{C`{{f{{An{Al}}}}}}}}}}}}{{{f{Af}}c}B`{{Hl{{An{Jb}}}}}}{{{f{Af}}c}B`{{Hl{{An{Lf}}}}}}{{{f{Af}}{f{Ed}}}B`}{{{f{BJj}}FhFh}B`}{{{f{Af}}Fh}B`}{{{f{ClDHd}}}C`}{{{f{{AGf{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{B`}}}{{Bd{{l{Ab}}Bb}}}}{{{f{B`}}{f{Af}}}{{Bd{{l{Ab}}Bb}}}}{{{f{B`}}c}{{Bd{{l{Ab}}Bb}}}ANj}32{{{f{B`}}{f{Af}}}}{{{f{B`}}c}{}ANj}{{{f{B`}}}{{Bd{{f{ABl}}Bb}}}}{{{f{BJj}}}Fh}`{{{f{B`}}}{{Cf{Kf}}}}{{{f{B`}}}{{Bd{LdBb}}}}{{{f{BJj}}LfNd}{{Bd{LdBb}}}}{{{f{BJj}}}B`}{{{f{B`}}c}{}{AhLb}}{{{f{B`}}{f{B`}}}}{{B`c}{}{AhLb}}{{{f{ClBJj}}{f{Af}}}b}{{{f{ClB`}}{f{Af}}}{{f{ClB`}}}}{{{f{B`}}{f{{An{Gf}}}}}{{Bd{B`Bb}}}}06{KlKl}{{{f{BJj}}{f{Df}}Nf}{{Bd{B`Bb}}}}{{{f{B`}}Lfdd{C`{Jb}}}{{Bd{B`Bb}}}}{{{f{B`}}Fhdd{C`{Jb}}}{{Bd{B`Bb}}}}{{{f{B`}}Fh}B`}{{{f{ClB`}}Kl}b}{{{f{BJj}}Gf}B`}{{{f{ClBJj}}}b}{{{f{ClB`}}}b}{{{f{B`}}{C`{Jb}}}B`}{{{f{DHd}}}{{Gj{Fh{C`{Fh}}}}}}{{{f{BJj}}GfFh}B`}{{{f{B`}}Ej}{{Bd{B`Bb}}}}{{{f{BJj}}Ej}{{Bd{B`Bb}}}}{{{f{BJj}}Al}{{C`{Lf}}}}{{{f{BJj}}Al}{{Bd{LdBb}}}}{{{f{B`}}}{{Bd{{f{{l{A`}}}}Bb}}}}{{{f{B`}}Fh}{{Bd{{Dj{Af}}Bb}}}}{{{f{B`}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{AKn}}Bb}}}}{{B`c}{}{AhLb}}{{{f{B`}}c}{}{AhLb}}{{B`B`}}{{{f{B`}}{f{B`}}}}{{{f{B`}}}{{Bd{cBb}}}Lb}{{{f{BJj}}}{{Bd{LdBb}}}}{{{f{B`}}}{{Bd{LdBb}}}}{{{f{B`}}{C`{Fh}}}B`}{{{f{BJj}}{f{{l{El}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{{An{Nl}}}}Kl}B`}{{{f{B`}}{f{{An{Nl}}}}}B`}{{{f{BJj}}{f{{An{Ij}}}}}{{Bd{B`Bb}}}}{{{f{BJj}}{f{{An{Ij}}}}}B`}{{{f{B`}}{f{{An{Ij}}}}d}B`}{{{f{B`}}{f{{l{El}}}}d}{{Bd{B`Bb}}}}{{{f{BJj}}{f{{l{El}}}}}B`}{{{f{B`}}{f{{An{Ij}}}}}B`}{{{f{B`}}{f{{l{El}}}}d}B`}{{{f{B`}}}{{Bd{{f{{Jh{KhJj}}}}Bb}}}}{{{f{B`}}Fhd}{{Cf{Cd}}}}{{{f{B`}}{C`{{f{Af}}}}d}{{Bd{B@fBb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{c}}}e{}{}}0{{{f{B`}}}{{Dj{B`}}}}{{{f{c}}}Ef{}}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{B`B`}{{Bd{B`Bb}}}}1{c{{Bd{e}}}{}{}}0{{{Gj{{f{ANn}}{Fn{{Cf{Cd}}}}}}}{{Bd{B`Bb}}}}{{{Gj{{f{ANn}}{Cf{Cd}}}}}{{Bd{B`Bb}}}}{{{Gj{{f{Af}}{Fn{{Cf{Cd}}}}}}}{{Bd{B`Bb}}}}3{{{Gj{{f{Af}}{Cf{Cd}}}}}{{Bd{B`Bb}}}}444656{{{f{ClB`}}{Gd{c}}}dDb}76{{{f{c}}}A@`{}}00{{{f{B`}}}{{Bd{{f{{l{Md}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{El}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ll}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ml}}}}Bb}}}}{{{f{BJj}}}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{BJj}}}{{Bd{{f{{l{c}}}}Bb}}}Db}`{{{f{BJj}}Al}{{C`{Lf}}}}{{{f{BJj}}Al}{{Bd{LdBb}}}}{ce{}{}}00{{B`{f{Af}}}B`}{{{f{B`}}c}B`{AhLb}}{{{f{B`}}{f{{l{Ab}}}}{f{B`}}}{{Bd{B`Bb}}}}````{{{f{B`}}{f{B`}}c}{{Bd{B`Bb}}}{{Dn{{f{B`}}{f{B`}}}{{Dd{{Bd{B`Bb}}}}}}}}{{{BHl{}{{Dd{c}}}}{f{B`}}}c{}}{{{f{BHn}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Bf}}}}{f{B`}}}{{Bd{B`Bb}}}}`210210210210``{{{f{BOd}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Fd}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BOd}}c}{{Bd{B`Bb}}}Aj}{{{f{{l{Fd}}}}c}{{Bd{B`Bb}}}Aj}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{CIn}}}CIn}{{{f{c}}{f{Cle}}}b{}{}}{{}CIn}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{{{f{CIn}}{f{CIn}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CIn}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{CIn}}{f{Clc}}}bAC`}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}3``{{{f{c}}h}b{}}{{{f{ClDl}}}{{f{ClB`}}}}{{{f{Dl}}}{{f{B`}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{Dl}}}Dl}{{{f{c}}{f{Cle}}}b{}{}}{{{f{Dl}}}B`}{Fh{{f{c}}}{}}{Fh{{f{Clc}}}{}}{Fhb}{cc{}}{{}Fh}{ce{}{}}{{{f{ClB`}}}Dl}{{{f{ClDl}}{f{Cl{Cf{Cd}}}}}b}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}5{{{f{ClDl}}{f{Cl{Cf{Cd}}}}e}c{}{{Df{{f{Dl}}}{{Dd{c}}}}}}","D":"AEJbAGb","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",10841],[5,"ListType",1905,10842],[5,"ChunkedArray",17,10843],[10,"PolarsNumericType",1905,10842],[5,"StringType",1905,10842],[5,"BooleanType",1905,10842],[5,"BinaryType",1905,10842],[1,"str"],[10,"Num",10844],[10,"ToPrimitive",10845],[1,"u8"],[1,"slice"],[5,"Series",10350,10846],[6,"PolarsError",3329,10847],[6,"Result",10848],[10,"NumOpsDispatchInner",10764,10849],[6,"GroupsProxy",3706,10850],[5,"FixedSizeListType",1905,10842],[5,"ObjectType",1905,10842],[10,"PolarsObject",1470,10851],[6,"Option",10852],[17,"Item"],[10,"Array",10853],[5,"Box",10854],[10,"Iterator",10855],[5,"AmortizedListIter",10856],[0,"mut"],[17,"IsNested"],[5,"FalseT",1905,10842],[10,"PolarsDataType",1905,10842],[17,"Output"],[10,"Fn",10857],[10,"Copy",10858],[6,"Cow",10859],[5,"UnstableSeries",10817,10860],[10,"FnMut",10857],[5,"Float64Type",1905,10842],[5,"Float32Type",1905,10842],[6,"DataType",1905,10861],[5,"String",10862],[5,"BinaryOffsetType",1905,10842],[5,"SortOptions",1596,10863],[5,"UInt32Type",1905,10842],[5,"SortMultipleOptions",1596,10863],[10,"PolarsIntegerType",1905,10842],[6,"CastOptions",1119,10864],[10,"NumOpsDispatchCheckedInner",10785,10865],[5,"Iter",10866],[1,"usize"],[1,"fn"],[5,"Map",10867],[5,"Vec",10868],[5,"MetadataProperties",1239,10869],[10,"DoubleEndedIterator",10870],[5,"Metadata",1239,10869],[1,"i64"],[5,"OffsetsBuffer",10871],[1,"tuple"],[5,"Formatter",10872],[5,"Error",10872],[17,"Array"],[10,"IntoIterator",10873],[10,"FallibleIterator",10874],[5,"Bitmap",10875],[10,"Borrow",10876],[10,"PolarsAsRef",10877],[10,"AsRef",10878],[10,"Send",10858],[10,"Sync",10858],[10,"NoOption",10879],[10,"IntoParallelIterator",10880],[10,"TrustedLen",10881],[6,"AnyValue",1905,10882],[1,"u32"],[5,"MetadataFlags",1239,10869],[10,"PolarsObjectSafe",1470,10851],[1,"f32"],[1,"u64"],[5,"Int32Type",1905,10842],[5,"DateType",1905,10842],[5,"Logical",1905,10883],[5,"Int64Type",1905,10842],[6,"TimeUnit",1905,10884],[5,"DatetimeType",1905,10842],[5,"Int128Type",1905,10842],[5,"DecimalType",1905,10842],[5,"DurationType",1905,10842],[10,"ExactSizeIterator",10885],[5,"TimeType",1905,10842],[10,"PolarsFloatType",1905,10842],[6,"IsSorted",10350,10886],[10,"PolarsIterator",1167,10887],[6,"ChunkedArrayLayout",17,10843],[10,"NumCast",10845],[5,"Scalar",1905,10882],[1,"f64"],[5,"Arc",4069,10888],[5,"Range",10889],[5,"UInt64Type",1905,10842],[5,"Int16Type",1905,10842],[1,"i16"],[1,"i32"],[5,"UInt16Type",1905,10842],[1,"u16"],[5,"Int8Type",1905,10842],[1,"i8"],[5,"UInt8Type",1905,10842],[5,"Field",1905,10890],[10,"ParallelIterator",10880],[10,"IndexedParallelIterator",10880],[6,"QuantileInterpolOptions",4069,10891],[5,"RollingOptionsFixedWindow",4069,10892],[10,"PolarsOpsNumericType",10893],[10,"Sized",10858],[5,"ChunkId",4069,10894],[17,"HasViews"],[5,"RandomState",10895],[5,"BytesHash",10896],[5,"OwnedRepr",10897],[1,"array"],[5,"Dim",10898],[5,"ArrayBase",10899],[5,"ViewRepr",10899],[6,"Either",10900],[5,"TypeId",10901],[5,"NullableIdxSize",4069,10894],[10,"FnOnce",10857],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",817,10902],[5,"AnonymousListBuilder",845,10903],[5,"AnonymousOwnedListBuilder",845,10903],[5,"ListBooleanChunkedBuilder",845,10904],[5,"ListPrimitiveChunkedBuilder",845,10905],[10,"ListBuilderTrait",845,10906],[10,"ChunkedBuilder",845,10907],[5,"ListStringChunkedBuilder",845,10908],[5,"ListBinaryChunkedBuilder",845,10908],[5,"ListNullChunkedBuilder",845,10909],[5,"BinViewChunkedBuilder",845,10910],[10,"ViewType",10911],[5,"BooleanChunkedBuilder",845,10912],[5,"NullChunkedBuilder",845,10913],[5,"PrimitiveChunkedBuilder",845,10914],[10,"Clone",10915],[5,"NullChunked",10916],[10,"NewChunkedArray",845,10907],[10,"Hasher",10917],[10,"ChunkedCollectInferIterExt",1147,10918],[10,"ChunkedCollectIterExt",1147,10918],[10,"Canonical",1161,10919],[10,"ChunkedCollectParIterExt",1163,10920],[10,"FromParIterWithDtype",1163,10920],[5,"BooleanArray",10921],[5,"BoolIterNoNull",1167,10887],[5,"FixedSizeListArray",10922],[5,"FixedSizeListIterNoNull",1167,10887],[5,"StructIter",1167,10887],[5,"SomeIterator",1167,10887],[5,"MetadataEnv",1239,10923],[10,"MetadataCollectable",1239,10869],[5,"Iter",10924],[5,"IterNames",10924],[5,"File",10925],[5,"Mutex",10926],[6,"MetadataMerge",1239,10869],[5,"ObjectArray",1470,10851],[6,"ArrowDataType",1905,10927],[10,"Any",10901],[10,"Debug",10872],[5,"BitmapIter",10928],[6,"ZipValidity",10929],[5,"ObjectChunkedBuilder",1545,10930],[10,"AnonymousObjectBuilder",1568,10931],[5,"ObjectRegistry",1568,10931],[17,"FuncRet"],[10,"ChunkApply",1596,10932],[10,"ChunkApplyKernel",1596,10932],[10,"ChunkSort",1596,10932],[10,"ChunkUnique",1596,10932],[10,"ChunkCast",1596,10932],[6,"FillNullStrategy",1596,10932],[10,"ChunkCompare",10350,10932],[10,"ChunkExplode",1596,10932],[10,"ChunkFillNullValue",1596,10932],[10,"ChunkFilter",1596,10932],[10,"ChunkFull",1596,10932],[10,"ChunkFullNull",1596,10932],[10,"ChunkAnyValue",1596,10932],[10,"IsFirstDistinct",1596,10932],[10,"IsLastDistinct",1596,10932],[10,"ChunkAgg",1596,10932],[10,"ChunkQuantile",1596,10932],[10,"ChunkExpandAtIndex",1596,10932],[10,"Reinterpret",1596,10932],[10,"ChunkReverse",1596,10932],[10,"ChunkRollApply",1596,10932],[10,"ChunkSet",1596,10932],[10,"ChunkShift",1596,10932],[10,"ChunkShiftFill",1596,10932],[10,"SlicedArray",1596,10933],[10,"ChunkVar",1596,10932],[10,"ChunkTake",1596,10932],[10,"ChunkTakeUnchecked",1596,10932],[10,"ChunkBytes",1596,10932],[10,"ChunkZip",1596,10932],[10,"BinaryFnMut",1798,10934],[10,"StaticArray",1905,10935],[10,"TernaryFnMut",1798,10934],[10,"Error",10936],[10,"UnaryFnMut",1798,10934],[5,"PrimitiveArray",10937],[6,"SearchSortedSide",1838,10938],[5,"NoNull",4069,10939],[5,"RowsEncoded",10940],[5,"NaiveDateTime",10941],[6,"Tz",10942],[5,"NaiveTime",10943],[5,"StructChunked",1905,10944],[5,"CategoricalChunked",1905,10945],[5,"CategoricalChunkedBuilder",1905,10946],[10,"ArrayFromIter",1905,10947],[10,"ArrayFromIterDtype",1905,10947],[10,"AsRefDataType",1905,10861],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",10948],[10,"From",10878],[5,"BinaryViewArrayGeneric",10911],[6,"RevMapping",1905,10949],[10,"CategoricalMergeOperation",1905,10950],[10,"LogicalType",1905,10883],[6,"CategoricalOrdering",1905,10949],[5,"OwnedObject",1905,10882],[6,"UnknownKind",1905,10861],[5,"CategoricalType",1905,10842],[6,"ArrowTimeUnit",1905],[10,"ArrayCollectIterExt",1905,10947],[5,"GlobalRevMapMerger",1905,10950],[10,"NumericNative",1905,10842],[10,"Into",10878],[5,"ArrowField",4069],[6,"PrimitiveType",10951],[6,"IntegerType",10952],[5,"TimeDelta",10953],[5,"NaiveDate",10954],[5,"LazyCompact",10955],[5,"SmartString",10956],[10,"GetAnyValue",1905,10882],[5,"CatIter",1905,10945],[6,"Ordering",10957],[1,"u128"],[6,"PhysicalType",10952],[5,"DataFrame",3424,10958],[5,"StringCacheHolder",3308,10959],[5,"ErrString",3329,10847],[6,"PolarsWarning",3329,10960],[5,"Error",10961],[6,"Error",10962],[5,"Error",10963],[6,"Error",10964],[5,"TryReserveError",10965],[5,"Utf8Error",10966],[10,"Display",10872],[5,"Schema",4069,10967],[10,"IntoSeries",10350,10968],[6,"NullStrategy",3424,10958],[6,"UniqueKeepStrategy",3424,10958],[5,"HashSet",10969],[5,"ArrowSchema",4069,10970],[5,"Row",3960,10971],[5,"GroupBy",3706,10972],[5,"DynamicGroupOptions",4069,10973],[5,"RangeToInclusive",10889],[5,"RangeTo",10889],[5,"RangeFull",10889],[5,"RangeFrom",10889],[5,"RangeInclusive",10889],[5,"RecordBatchIter",3424,10958],[5,"PhysRecordBatchIter",3424,10958],[5,"LazyFrame",4069,10974],[10,"IntoVec",4069,10939],[5,"MeltArgs",3677,10975],[5,"RollingGroupOptions",4069,10973],[10,"RangeBounds",10889],[6,"IndexOrder",4069,10976],[5,"StructArray",4069,10977],[5,"RecordBatchT",10978],[5,"Duration",4069,10979],[5,"GroupsIdx",3706,10850],[5,"UnitVec",10980],[6,"GroupByMethod",3706,10972],[5,"SlicedGroups",3706,10850],[5,"GroupsProxyParIter",3706,10850],[10,"UnindexedConsumer",10981],[6,"GroupsIndicator",3706,10850],[6,"IRAggExpr",10982],[10,"IntoGroupsProxy",3706,10983],[5,"Copied",10984],[5,"Zip",10985],[5,"GroupsProxyIter",3706,10850],[10,"IsFloat",10986],[10,"NativeType",10987],[10,"AggList",3944,10988],[10,"TakeExtremum",3944,10989],[10,"PhysicalAggExpr",3957,10990],[6,"AnyValueBuffer",3960,10991],[6,"AnyValueBufferTrusted",3960,10991],[5,"Node",10992],[6,"IR",10993],[5,"Arena",10992],[6,"AExpr",10982],[10,"JoinDispatch",4069,10994],[5,"JoinArgs",4069,10995],[10,"DfTake",4069,10996],[10,"DataFrameOps",4069,10997],[5,"CsvReader",4069,10998],[10,"PhysicalIoExpr",10999],[10,"MmapBytesReader",11000],[6,"Expr",4069,11001],[10,"LhsNumOps",10764,10849],[10,"NumOpsDispatch",10764,10849],[5,"LazyGroupBy",4069,10974],[10,"Allocator",11002],[5,"JoinBuilder",4069,10974],[10,"AnonymousScan",4069,11003],[5,"LazyJsonLineReader",4069,11004],[5,"ScanArgsAnonymous",4069,11005],[10,"FunctionOutputField",4069,11006],[5,"SpecialEq",4069,11006],[6,"VisitRecursion",11007],[6,"FunctionExpr",4069,11008],[10,"ArgAgg",4069,11009],[5,"ArrayNameSpace",4069,11010],[5,"ListNameSpace",4069,11011],[10,"SeriesTrait",10350,10886],[5,"FieldsMapper",4069,11012],[5,"IpcStreamReader",4069,11013],[10,"Read",11014],[10,"SeriesUdf",4069,11006],[10,"AsBinary",4069,11015],[10,"StringMethods",9323,11016],[5,"BorrowedFd",11017],[10,"AsFd",11017],[10,"AsList",4069,11018],[10,"AsRawFd",11019],[6,"AggExpr",4069,11001],[10,"SeriesSealed",4069,11020],[10,"AsString",4069,11021],[20,"MaybeUninit",11022],[10,"StringNameSpaceImpl",4069,11023],[5,"OwnedBatchedCsvReader",4069,11024],[5,"CsvWriter",4069,11025],[5,"BatchedWriter",11025],[10,"Write",11014],[5,"IpcWriter",4069,11026],[5,"BatchedWriter",11026],[5,"ParquetReader",4069,11027],[5,"BatchedParquetReader",4069,11028],[5,"ParquetWriter",4069,11029],[5,"BatchedWriter",11030],[5,"BatchedCsvReader",4069,11024],[5,"BinaryNameSpace",9306,11031],[6,"Operator",4069,11001],[10,"RenameAliasFn",4069,11006],[5,"UserDefinedFunction",4069,11032],[10,"SeriesBinaryUdf",4069,11006],[5,"InProcessQuery",4069,11033],[5,"HashMap",11034],[5,"CategoricalNameSpace",4069,11035],[10,"RoundSeries",4069,11036],[10,"TemporalMethods",10233,11037],[10,"NumOpsDispatchChecked",10785,10865],[5,"RollingOptionsDynamicWindow",4069,11038],[5,"Bounds",4069,11039],[5,"LazyCsvReader",4069,11040],[6,"ClosedWindow",4069,11041],[5,"ScanArgsIpc",4069,11042],[6,"Label",4069,11041],[5,"ScanArgsParquet",4069,11043],[6,"StartBy",4069,11041],[5,"Window",4069,11044],[5,"CsvReadOptions",4069,11045],[5,"CsvParseOptions",4069,11045],[6,"CsvEncoding",4069,11045],[6,"CommentPrefix",4069,11045],[6,"NullValues",4069,11045],[5,"CsvWriterOptions",4069,11046],[5,"SerializeOptions",4069,11046],[6,"QuoteStyle",4069,11046],[5,"IpcScanOptions",4069,11047],[5,"IpcWriterOptions",4069,11026],[6,"IpcCompression",4069,11026],[5,"JsonWriterOptions",4069,11048],[6,"JoinCoalesce",4069,10995],[6,"JoinType",4069,10995],[5,"ParquetOptions",4069,11049],[6,"JoinValidation",4069,10995],[6,"ParallelStrategy",4069,11049],[5,"AsOfOptions",4069,11050],[6,"AsofStrategy",4069,11050],[5,"ParquetWriteOptions",4069,11051],[6,"ParquetCompression",4069,11051],[6,"InterpolationMethod",4069,11052],[6,"ClosedInterval",4069,11053],[5,"GzipLevel",4069,11051],[5,"BrotliLevel",4069,11051],[6,"RankMethod",4069,11054],[5,"ZstdLevel",4069,11051],[5,"RankOptions",4069,11054],[6,"DslPlan",4069,11055],[5,"When",4069,11056],[5,"Then",4069,11056],[5,"ChainedWhen",4069,11056],[5,"ChainedThen",4069,11056],[6,"Excluded",4069,11001],[6,"BooleanFunction",4069,11057],[6,"CategoricalFunction",4069,11058],[6,"TemporalFunction",4069,11059],[6,"PowFunction",4069,11060],[6,"StringFunction",4069,11061],[5,"DatetimeArgs",4069,11062],[5,"DurationArgs",4069,11062],[5,"RollingCovOptions",4069,11063],[5,"StrptimeOptions",4069,11063],[5,"JoinOptions",4069,11063],[6,"WindowType",4069,11063],[6,"WindowMapping",4069,11063],[6,"NestedType",4069,11063],[5,"OptState",4069,11064],[6,"LiteralValue",4069,11065],[5,"AnonymousScanOptions",4069,11066],[5,"UnionArgs",4069,11066],[5,"StatisticsOptions",4069,11067],[5,"FileMetaData",4069,11068],[5,"RollingVarParams",4069,11069],[5,"RollingQuantileParams",4069,11069],[6,"NonExistent",4069,11070],[10,"LazyFileListReader",4069,11071],[5,"CloudOptions",9458,11072],[10,"Ord",10957],[6,"ColumnOrder",11073],[10,"BinaryNameSpaceImpl",4069,11074],[5,"PathBuf",11075],[5,"IpcStreamWriterOption",4069,11013],[10,"SerWriter",4069,11076],[5,"IpcWriterOption",4069,11026],[10,"CrossJoin",4069,11077],[10,"ExprEvalExtension",4069,11078],[10,"DateMethods",9323,11079],[10,"DatetimeMethods",9323,11080],[10,"DurationMethods",9323,11081],[10,"BinaryUdfOutputField",4069,11006],[5,"CStr",11082],[10,"Default",11083],[5,"RowGroupMetaData",11084],[5,"ParquetStatistics",4069],[6,"NullBehavior",10791,11085],[5,"Weak",10888],[5,"DateLikeNameSpace",9816,11086],[1,"char"],[10,"FromIterator",10873],[10,"SeriesMethods",4069,11087],[10,"Scalar",11088],[10,"PartialEq",10957],[10,"ListNameSpaceExtension",4069,11089],[10,"Command",11090],[5,"StructNameSpace",4069,11091],[10,"SerReader",4069,11076],[5,"IpcReader",4069,11047],[5,"IpcStreamWriter",4069,11013],[5,"JsonWriter",4069,11048],[5,"JsonReader",4069,11048],[5,"JsonLineReader",4069,11092],[10,"UdfSchema",4069,11093],[6,"ArrayFunction",11094],[6,"StructFunction",11095],[6,"ListFunction",11096],[6,"BinaryFunction",11097],[6,"RangeFunction",11098],[5,"CString",11099],[5,"Path",11075],[5,"OsString",11100],[5,"OsStr",11100],[10,"ToOwned",10859],[1,"never"],[5,"MutableStatistics",11101],[5,"MutableStructArray",11102],[5,"GrowableStruct",11103],[10,"FromData",9810,11104],[5,"Buffer",11105],[10,"FromDataUtf8",9810,11104],[10,"FromDataBinary",9810,11104],[5,"ListArray",11106],[6,"Ambiguous",4069,11070],[10,"NamedFromOwned",4069,11107],[10,"DataFrameJoinOps",4069,11108],[5,"FunctionOptions",11066],[10,"PartialOrd",10957],[6,"Context",11055],[10,"IndexOfSchema",4069,10967],[5,"BoundsIter",4069,11044],[6,"ReaderBytes",11000],[10,"PolarsTemporalGroupby",4069,10973],[10,"PolarsArray",4069,11109],[10,"Hash",10917],[10,"SeriesJoin",4069,11110],[10,"TimeMethods",9323,11111],[5,"NonZero",11112],[10,"IntoListNameSpace",4069,11089],[5,"FileMetaData",11113],[5,"StructValueIter",11114],[10,"AsofJoin",4069,11050],[10,"AsofJoinBy",4069,11115],[10,"ListNameSpaceImpl",4069,11116],[5,"ExprNameNameSpace",4069,11117],[5,"KeyValue",11113],[10,"IntoLazy",4069,10974],[10,"Literal",4069,11065],[5,"Null",4069,11065],[5,"RowIndex",11118],[10,"ChunkAggSeries",4069,11119],[10,"QuantileAggSeries",4069,11120],[10,"PolarsMonthEnd",4069,11121],[10,"PolarsMonthStart",4069,11122],[10,"IndexToUsize",4069,11123],[10,"NamedFrom",4069,11107],[6,"RowGroupFetcher",11028],[5,"SplitNChars",4069,11124],[5,"Pin",11125],[5,"Request",10936],[10,"SeriesRank",4069,11054],[5,"BorrowedCursor",11126],[10,"VarInt",11127],[5,"IoSliceMut",11014],[10,"SeriesOpsTime",9323,11128],[10,"PolarsRound",4069,11129],[5,"AnonymousScanArgs",4069,11003],[10,"ChunkedSet",4069,10893],[5,"SchemaDescriptor",11130],[6,"SeekFrom",11014],[10,"VarAggSeries",4069,11131],[5,"StringNameSpace",11132],[10,"TakeChunked",4069,10996],[5,"IRPlan",10993],[10,"ToDummies",4069,11133],[10,"PolarsTruncate",4069,11134],[5,"AllocError",11002],[5,"RwLock",11135],[5,"SchemaInferenceResult",10203,11136],[10,"PolarsUpsample",4069,11137],[10,"VecHash",4069,11138],[6,"JsonFormat",4069,11048],[5,"BTreeMap",11139],[5,"IoSlice",11014],[10,"ArrayNameSpace",9287,11140],[10,"AsArray",9287,11141],[10,"AsString",9390,11016],[6,"Pattern",9390,11142],[5,"DatetimeInfer",9428,11143],[10,"StrpTimeParser",9428,11143],[17,"Error"],[10,"TryFromWithUnit",9428,11143],[6,"CloudType",9458,11072],[5,"AnonymousBuilder",9871,11144],[6,"RollingFunction",10102,11145],[6,"RollingFunctionBy",10131,11146],[5,"MutableNullArray",10173,11147],[5,"MutableBitmap",11148],[10,"AsSeries",10233,11037],[5,"Utf8Array",11149],[5,"BinaryArray",11150],[5,"SeriesIter",10350,11151],[8,"FillNullLimit",1596],[10,"InitHashMaps",1905],[10,"InitHashMaps2",1905],[5,"TrueT",1905],[8,"PolarsResult",3329],[15,"IO",9219],[15,"Context",9219],[15,"Count",9213],[15,"Slice",9214],[8,"ChunkJoinOptIds",4069],[8,"DynArgs",4069],[8,"AllowedOptimizations",4069],[10,"ListFromIter",4069],[15,"Quantile",9093],[15,"Min",9093],[15,"Max",9093],[15,"IsBetween",10056],[15,"Any",10056],[15,"All",10056],[15,"GroupBy",9103],[15,"Union",9103],[15,"Sort",9103],[15,"Cache",9103],[15,"ExtContext",9103],[15,"DataFrameScan",9103],[15,"IR",9103],[15,"Select",9103],[15,"HStack",9103],[15,"Scan",9103],[15,"MapFunction",9103],[15,"Filter",9103],[15,"Distinct",9103],[15,"Slice",9103],[15,"Sink",9103],[15,"Join",9103],[15,"HConcat",9103],[15,"SortBy",9157],[15,"Filter",9157],[15,"Cast",9157],[15,"Sort",9157],[15,"Gather",9157],[15,"RenameAlias",9157],[15,"Ternary",9157],[15,"Function",9157],[15,"Window",9157],[15,"AnonymousFunction",9157],[15,"Slice",9157],[15,"BinaryExpr",9157],[15,"Round",10059],[15,"RoundSF",10059],[15,"Clip",10059],[15,"BackwardFill",10059],[15,"ForwardFill",10059],[15,"Random",10059],[15,"GatherEvery",10059],[15,"ValueCounts",10059],[15,"Rank",10059],[15,"Replace",10059],[15,"CumCount",10059],[15,"CumSum",10059],[15,"CumProd",10059],[15,"CumMin",10059],[15,"CumMax",10059],[15,"Range",9216],[15,"ConcatHorizontal",10080],[15,"ConcatVertical",10080],[15,"ExtractGroups",10080],[15,"SplitExact",10080],[15,"Contains",10080],[15,"Find",10080],[15,"Replace",10080],[15,"DatetimeFunction",10094],[10,"Utf8FromIter",10346],[10,"BinaryFromIter",10346]],"r":[[1,11152],[2,11152],[3,11152],[4,11152],[6,10959],[7,11152],[8,11152],[9,11152],[13,11152],[14,11152],[16,10959],[17,10843],[18,10843],[19,10843],[112,10843],[135,10843],[136,10843],[160,10843],[162,10843],[216,10843],[269,10843],[410,10843],[458,10843],[557,10843],[560,10843],[692,10843],[817,10902],[845,10903],[846,10903],[847,10910],[848,10910],[849,10912],[850,10907],[851,10908],[852,10904],[853,10906],[854,10909],[855,10905],[856,10908],[857,10907],[858,10913],[859,10914],[860,10910],[993,10907],[1009,10906],[1037,10907],[1102,10903],[1103,10903],[1104,10908],[1105,10904],[1106,10906],[1107,10909],[1108,10905],[1109,10908],[1117,10906],[1119,10864],[1147,10918],[1148,10918],[1161,10919],[1163,10920],[1164,10920],[1167,10887],[1168,10887],[1169,10887],[1170,10887],[1171,10887],[1217,10887],[1237,11153],[1238,11153],[1250,10869],[1251,10869],[1252,10923],[1253,10869],[1254,10869],[1255,10869],[1470,10851],[1471,10851],[1472,10851],[1473,10851],[1485,10851],[1514,10851],[1545,10930],[1568,10931],[1569,10931],[1570,10931],[1571,10931],[1583,10931],[1584,10931],[1585,10931],[1588,10931],[1590,10931],[1597,10932],[1598,10932],[1599,10932],[1600,10932],[1601,10932],[1602,10932],[1603,10932],[1604,10932],[1605,10932],[1606,10932],[1607,10932],[1608,10932],[1609,10932],[1610,10932],[1611,10932],[1612,10932],[1613,10932],[1614,10932],[1615,10932],[1616,10932],[1617,10932],[1618,10932],[1619,10932],[1620,10932],[1621,10932],[1622,10932],[1623,10932],[1626,10932],[1627,10932],[1636,10932],[1637,10933],[1639,10863],[1640,10863],[1653,10932],[1695,10932],[1698,10932],[1707,10932],[1710,10932],[1753,10932],[1759,10932],[1796,10932],[1798,10934],[1802,10934],[1803,10934],[1804,10934],[1805,10934],[1806,10934],[1807,10934],[1808,10934],[1809,10934],[1810,10934],[1811,10934],[1812,10934],[1813,10934],[1814,10934],[1815,10934],[1816,10934],[1817,10934],[1818,10934],[1819,10934],[1820,10934],[1821,10934],[1822,10934],[1823,10934],[1824,10934],[1825,10934],[1826,10934],[1827,10934],[1828,10934],[1829,10934],[1830,10934],[1831,10934],[1832,10934],[1833,11154],[1834,11154],[1835,11155],[1836,11155],[1837,11155],[1841,10938],[1843,10938],[1861,10938],[1867,10933],[1868,11156],[1869,11156],[1870,11156],[1871,11156],[1874,11157],[1875,11158],[1876,11158],[1877,11158],[1878,11158],[1879,11158],[1880,11158],[1881,11158],[1882,10933],[1883,10863],[1884,10863],[1895,11159],[1896,11160],[1897,11160],[1898,11160],[1899,11159],[1900,11159],[1901,11161],[1902,11160],[1903,11160],[1904,11160],[1906,10882],[1910,10842],[1911,10947],[1912,10947],[1913,10947],[1914,10927],[1916,10861],[1920,10842],[1922,10842],[1923,10842],[1925,10842],[1930,10842],[1931,10842],[1932,10945],[1935,10945],[1936,10946],[1937,10950],[1938,10949],[1939,10842],[1940,10861],[1941,10861],[1942,10861],[1947,11162],[1948,10842],[1951,11163],[1952,10842],[1957,11164],[1958,10842],[1963,11165],[1964,10842],[1968,10842],[1969,10890],[1970,10890],[1973,10842],[1979,10842],[1980,10842],[1984,10842],[1985,10842],[1986,10882],[1988,10950],[1992,11166],[1993,11123],[1994,11166],[1995,11166],[1996,11167],[1997,11166],[1999,10842],[2000,10842],[2004,10842],[2005,10842],[2009,10842],[2010,10842],[2014,10842],[2015,10842],[2019,10842],[2020,10842],[2030,10842],[2031,10842],[2033,10883],[2034,10883],[2046,10842],[2049,10842],[2051,10842],[2052,10882],[2056,11167],[2057,11167],[2058,11166],[2059,11167],[2060,11167],[2061,10842],[2062,10842],[2063,10842],[2064,10842],[2066,10949],[2067,10882],[2069,10935],[2073,10842],[2075,10842],[2079,10944],[2085,11168],[2086,10842],[2087,10884],[2088,10861],[2091,10842],[2095,10842],[2096,10842],[2100,10842],[2101,10842],[2105,10842],[2106,10842],[2110,10842],[2111,10842],[2115,10861],[2285,10950],[2299,10883],[2388,10861],[2912,10950],[2913,10950],[2917,10861],[3285,10945],[3286,10945],[3287,10946],[3288,10950],[3289,10949],[3291,10950],[3295,10949],[3296,10950],[3298,10950],[3299,10950],[3300,10945],[3301,10945],[3302,10949],[3307,10949],[3308,10959],[3314,10959],[3317,10959],[3325,10959],[3335,10847],[3342,10847],[3343,10847],[3344,10960],[3360,10847],[3373,10847],[3389,10960],[3396,10847],[3397,10847],[3398,10847],[3399,10847],[3400,10847],[3401,10960],[3402,10847],[3421,11169],[3422,11169],[3423,11169],[3425,10958],[3430,10958],[3431,10958],[3433,10958],[3434,10958],[3501,10958],[3535,10958],[3598,10958],[3677,10975],[3706,10850],[3709,10972],[3710,10972],[3712,10850],[3713,10850],[3714,10850],[3715,10850],[3716,10850],[3717,10850],[3720,10850],[3722,10983],[3734,10850],[3743,10972],[3810,10972],[3820,10972],[3944,10988],[3945,10989],[3946,10989],[3947,10989],[3948,10989],[3949,10989],[3950,10989],[3951,10989],[3952,10989],[3953,10989],[3957,10990],[3962,10991],[3963,10991],[3983,10971],[4014,10971],[4035,10971],[4049,10971],[4050,10971],[4051,10971],[4067,11170],[4068,11170],[4071,11001],[4078,11064],[4080,11070],[4083,11003],[4084,11003],[4085,11066],[4091,10882],[4092,10888],[4093,11009],[4096,10902],[4101,10842],[4102,10947],[4104,10947],[4105,10947],[4106,11010],[4107,10853],[4108,10927],[4110,10970],[4112,11015],[4113,11018],[4115,11050],[4116,10861],[4117,11021],[4119,11050],[4120,11115],[4121,11050],[4124,11171],[4130,11024],[4131,11028],[4136,10842],[4137,10910],[4140,11074],[4142,10842],[4143,10842],[4145,10842],[4146,11006],[4153,10842],[4154,10912],[4155,11057],[4156,10842],[4157,10850],[4160,11039],[4161,11044],[4163,11051],[4168,10945],[4172,10945],[4173,10946],[4174,11058],[4175,10950],[4176,11035],[4177,10949],[4178,10842],[4182,11056],[4183,11056],[4184,10932],[4185,11119],[4186,10932],[4187,10932],[4188,10932],[4189,10932],[4190,10932],[4191,10932],[4192,10932],[4193,10932],[4194,10932],[4195,10932],[4196,10932],[4197,10932],[4198,10894],[4199,10995],[4200,10932],[4201,10932],[4202,10932],[4203,10932],[4204,10932],[4205,10932],[4206,10932],[4207,10932],[4208,10932],[4209,10932],[4210,10932],[4211,10932],[4212,10843],[4213,10907],[4214,10918],[4215,10918],[4216,10893],[4218,11053],[4219,11041],[4227,11045],[4239,11077],[4240,11045],[4241,11045],[4242,11045],[4243,10998],[4244,11025],[4245,11046],[4252,10861],[4253,10861],[4254,10958],[4255,11108],[4256,10997],[4260,10861],[4267,11162],[4268,11079],[4270,10842],[4274,11062],[4275,11163],[4277,11080],[4278,10842],[4284,11164],[4285,10842],[4287,10996],[4294,11055],[4298,10979],[4304,11062],[4305,11165],[4306,11081],[4307,10842],[4308,11069],[4309,10973],[4318,11001],[4321,11001],[4322,11078],[4323,11117],[4330,11171],[4331,11171],[4332,10842],[4333,10890],[4335,10890],[4336,11012],[4337,11117],[4338,11068],[4339,11172],[4341,10932],[4342,10932],[4352,10842],[4360,10842],[4361,10842],[4366,10842],[4367,10842],[4375,11104],[4376,11104],[4377,11104],[4381,11008],[4382,11006],[4386,10882],[4388,11006],[4390,10950],[4391,10972],[4393,10972],[4395,10850],[4396,10850],[4397,10850],[4398,10850],[4399,10850],[4400,10850],[4405,11051],[4415,11166],[4416,11171],[4421,11123],[4422,11166],[4423,10850],[4424,10894],[4425,11166],[4428,11033],[4430,10967],[4431,10976],[4432,11123],[4433,11167],[4434,11166],[4436,10995],[4439,10842],[4440,10842],[4445,10842],[4446,10842],[4451,10842],[4452,10842],[4457,10842],[4458,10842],[4463,10842],[4464,10842],[4467,11052],[4469,10983],[4470,10974],[4471,11089],[4472,10968],[4473,10939],[4475,11026],[4476,11047],[4477,11047],[4478,11013],[4479,11013],[4480,11013],[4481,11026],[4482,11026],[4483,11026],[4486,10932],[4490,10932],[4502,10995],[4503,10974],[4504,10995],[4505,10994],[4506,11063],[4508,10995],[4509,10995],[4511,11048],[4512,11092],[4514,11048],[4515,11048],[4516,11048],[4520,11041],[4522,11173],[4524,11173],[4525,11173],[4531,11040],[4532,11071],[4533,10974],[4534,10974],[4535,11004],[4542,10995],[4547,10849],[4554,10908],[4555,10904],[4556,10906],[4557,10842],[4559,11109],[4560,11011],[4561,11089],[4562,11116],[4563,10905],[4564,10908],[4565,10842],[4566,11065],[4568,11065],[4570,10883],[4573,10883],[4598,10975],[4621,11065],[4626,11107],[4627,11107],[4639,11063],[4641,10907],[4643,10939],[4644,11070],[4656,11065],[4664,11045],[4665,10894],[4666,10894],[4667,10849],[4668,10865],[4669,10842],[4672,10842],[4674,10842],[4679,11001],[4680,11064],[4688,11024],[4689,10882],[4691,11171],[4692,11049],[4693,11051],[4694,11049],[4695,11027],[4697,11051],[4698,11029],[4699,11071],[4702,11167],[4703,11167],[4704,11166],[4705,11167],[4706,11167],[4708,11109],[4709,10842],[4710,10847],[4711,10842],[4712,10842],[4713,10887],[4714,11121],[4715,11122],[4716,10842],[4717,10851],[4718,10847],[4719,11129],[4720,10973],[4721,11134],[4723,11137],[4725,11060],[4726,10914],[4729,11120],[4730,10891],[4732,11046],[4740,11054],[4741,11054],[4742,10932],[4744,11006],[4750,10949],[4759,11063],[4762,10973],[4763,11038],[4764,10892],[4765,11069],[4766,11174],[4767,11069],[4771,11036],[4772,11175],[4777,10882],[4780,11005],[4781,11042],[4782,11043],[4783,10967],[4786,10967],[4787,10938],[4792,11076],[4793,11076],[4794,11046],[4795,10846],[4797,11006],[4798,11110],[4799,11087],[4800,11128],[4801,11054],[4802,11020],[4803,10886],[4804,11006],[4817,10933],[4818,10850],[4825,10863],[4826,10863],[4827,11006],[4831,11124],[4833,11041],[4835,10935],[4836,11067],[4844,10959],[4846,10842],[4847,10910],[4849,11061],[4850,11016],[4851,11023],[4853,10842],[4860,11063],[4864,10977],[4865,10944],[4868,11091],[4876,10996],[4878,11059],[4879,11037],[4881,11056],[4889,11168],[4890,11111],[4892,10842],[4893,10884],[4894,10861],[4898,11133],[4912,10842],[4919,10842],[4920,10842],[4925,10842],[4926,10842],[4931,10842],[4932,10842],[4937,10842],[4938,10842],[4939,11093],[4943,11066],[4945,10958],[4948,10861],[4951,11032],[4960,11131],[4961,11138],[4965,11056],[4967,11044],[4970,11063],[4971,11063],[4980,11051],[5071,11176],[5076,11176],[5086,11177],[5096,10972],[5098,11178],[5100,11179],[5112,11179],[5123,11180],[5129,11181],[5132,11182],[5145,11183],[5150,11183],[5153,10932],[5159,11184],[5184,11185],[5188,11186],[5192,11187],[5200,11181],[5202,11056],[5458,10950],[5463,11186],[5474,11181],[5483,11171],[5484,11171],[5485,11171],[5491,11188],[5494,11189],[5496,11189],[5498,11189],[5684,11190],[5692,11179],[5696,11191],[5697,11178],[5699,11192],[5711,11178],[5722,11192],[5724,11193],[5727,11192],[5728,11192],[5729,11193],[5730,11193],[5739,11109],[5740,11194],[5745,11195],[5746,10861],[5754,11196],[5756,11179],[5757,11196],[5759,11196],[5761,11196],[5763,11179],[5764,11196],[5771,11152],[5773,11182],[5774,11184],[5775,11062],[5777,11182],[5778,11182],[5779,11160],[5780,11160],[5781,11160],[5848,11109],[5849,10994],[6106,11101],[6108,11152],[6110,11197],[6251,11198],[6252,11181],[6257,11178],[6258,11178],[6260,11062],[6269,10979],[6270,10979],[6531,10972],[6557,10932],[6594,11181],[6598,11109],[6601,10932],[6606,11199],[6702,10972],[6706,11179],[6710,11193],[6926,10932],[6935,11181],[6937,10932],[6977,11171],[6979,11171],[6990,11041],[6991,11041],[7070,11200],[7082,11201],[7083,11201],[7085,11202],[7093,11178],[7099,11123],[7100,11136],[7233,11182],[7234,11182],[7236,11203],[7237,11052],[7239,11203],[7240,11204],[7383,11053],[7385,11171],[7386,11205],[7394,11206],[7399,11207],[7402,11208],[7410,11186],[7413,11186],[7419,11194],[7455,11181],[7470,11181],[7482,11065],[7529,10950],[7530,10950],[7535,11180],[7546,11181],[7549,11181],[7557,11209],[7558,11171],[7559,11186],[7569,11186],[7575,11186],[7589,10861],[7600,11186],[7621,11184],[7661,11184],[7672,11210],[7673,11211],[7721,11212],[7742,11186],[7746,11181],[7747,11109],[7801,10847],[7802,10847],[7803,10847],[7804,10847],[7811,11108],[7821,11186],[7852,11179],[7863,11213],[7864,11214],[7866,11215],[7873,11201],[7876,11171],[7970,11216],[7973,10932],[7986,11188],[8026,11109],[8044,10932],[8060,11124],[8062,11124],[8080,11200],[8093,11184],[8094,11217],[8096,11217],[8098,11217],[8100,11217],[8102,11217],[8114,11186],[8137,11056],[8141,11182],[8698,11181],[8719,11109],[8879,11056],[9091,10932],[9239,10988],[9240,10989],[9241,10989],[9242,10989],[9243,10989],[9244,10989],[9245,10989],[9246,10989],[9247,10989],[9248,10989],[9252,10934],[9256,10934],[9257,10934],[9258,10934],[9259,10934],[9260,10934],[9261,10934],[9262,10934],[9263,10934],[9264,10934],[9265,10934],[9266,10934],[9267,10934],[9268,10934],[9269,10934],[9270,10934],[9271,10934],[9272,10934],[9273,10934],[9274,10934],[9275,10934],[9276,10934],[9277,10934],[9278,10934],[9279,10934],[9280,10934],[9281,10934],[9282,10934],[9283,10934],[9284,10934],[9285,10934],[9286,10934],[9287,11140],[9288,11141],[9306,11031],[9322,11035],[9323,11079],[9324,11080],[9325,11081],[9326,11038],[9327,11128],[9328,11016],[9329,11111],[9382,11218],[9390,11016],[9396,11142],[9397,11016],[9419,11016],[9428,11143],[9430,11143],[9431,11143],[9441,11143],[9460,11072],[9461,11072],[9495,11219],[9507,11072],[9508,11072],[9514,10882],[9518,10842],[9519,10947],[9520,10947],[9521,10947],[9522,10927],[9524,10861],[9528,10842],[9530,10842],[9531,10842],[9533,10842],[9538,10842],[9539,10842],[9540,10945],[9543,10945],[9544,10946],[9545,10950],[9546,10949],[9547,10842],[9548,10861],[9549,10861],[9550,10861],[9555,11162],[9556,10842],[9559,11163],[9560,10842],[9565,11164],[9566,10842],[9571,11165],[9572,10842],[9576,10842],[9577,10890],[9578,10890],[9581,10842],[9587,10842],[9588,10842],[9592,10842],[9593,10842],[9594,10882],[9596,10950],[9600,11166],[9601,11123],[9602,11166],[9603,11166],[9604,11167],[9605,11166],[9607,10842],[9608,10842],[9612,10842],[9613,10842],[9617,10842],[9618,10842],[9622,10842],[9623,10842],[9627,10842],[9628,10842],[9638,10842],[9639,10842],[9641,10883],[9642,10883],[9654,10842],[9657,10842],[9659,10842],[9660,10882],[9664,11167],[9665,11167],[9666,11166],[9667,11167],[9668,11167],[9669,10842],[9670,10842],[9671,10842],[9672,10842],[9674,10949],[9675,10882],[9677,10935],[9681,10842],[9683,10842],[9687,10944],[9693,11168],[9694,10842],[9695,10884],[9696,10861],[9699,10842],[9703,10842],[9704,10842],[9708,10842],[9709,10842],[9713,10842],[9714,10842],[9718,10842],[9719,10842],[9723,10861],[9736,10950],[9739,10883],[9744,10861],[9760,10950],[9761,10950],[9762,10861],[9780,10945],[9781,10945],[9782,10946],[9783,10950],[9784,10949],[9786,10950],[9790,10949],[9791,10950],[9793,10950],[9794,10950],[9795,10945],[9796,10945],[9797,10949],[9802,10949],[9803,10959],[9804,10959],[9805,10959],[9806,10959],[9807,11201],[9808,11201],[9809,11201],[9810,11104],[9811,11104],[9812,11104],[9816,11086],[9868,10990],[9871,11144],[9891,11154],[9892,11154],[9907,11057],[9910,11058],[9947,11008],[9988,11060],[10017,11061],[10028,11059],[10052,11008],[10053,11008],[10054,11008],[10055,11008],[10096,11058],[10100,11060],[10106,11145],[10135,11146],[10160,11155],[10161,11155],[10162,11155],[10163,11052],[10166,11052],[10167,11204],[10168,11220],[10169,11221],[10170,11221],[10171,11221],[10172,11221],[10173,11147],[10203,11136],[10217,11136],[10230,10938],[10231,10938],[10232,10938],[10233,11037],[10234,11037],[10255,10933],[10258,10933],[10259,11156],[10260,11156],[10261,11156],[10262,11156],[10265,11157],[10266,11158],[10267,11158],[10268,11158],[10269,11158],[10270,11158],[10271,11158],[10272,11158],[10273,10933],[10274,10863],[10275,10863],[10286,11021],[10287,11124],[10288,11023],[10307,11200],[10315,11124],[10317,11124],[10320,11200],[10326,11217],[10328,11217],[10330,11217],[10332,11217],[10334,11217],[10340,11032],[10346,11222],[10347,11222],[10351,10932],[10353,10968],[10354,10886],[10357,10846],[10358,11151],[10359,11151],[10360,10886],[10374,10846],[10552,10846],[10667,10846],[10755,10846],[10764,10849],[10765,10849],[10766,10849],[10768,10849],[10772,10849],[10785,10865],[10786,10865],[10793,11085],[10817,10860],[10818,10860]],"b":[[26,"impl-Add-for-ChunkedArray%3CT%3E"],[27,"impl-Add-for-ChunkedArray%3CStringType%3E"],[28,"impl-Add-for-%26ChunkedArray%3CT%3E"],[29,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[30,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[31,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[32,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[33,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[34,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[35,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[36,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[37,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[39,"impl-AggList-for-ChunkedArray%3CListType%3E"],[40,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[41,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[42,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[43,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[44,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[45,"impl-AggList-for-ChunkedArray%3CT%3E"],[48,"impl-ChunkedArray%3CFixedSizeListType%3E"],[49,"impl-ChunkedArray%3CListType%3E"],[50,"impl-ChunkedArray%3CListType%3E"],[51,"impl-ChunkedArray%3CFixedSizeListType%3E"],[55,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[56,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[57,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[58,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[59,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[60,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[62,"impl-ChunkedArray%3CFixedSizeListType%3E"],[63,"impl-ChunkedArray%3CListType%3E"],[65,"impl-ChunkedArray%3CFloat64Type%3E"],[66,"impl-ChunkedArray%3CFloat32Type%3E"],[69,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[70,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[71,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[72,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[73,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[74,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[75,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[76,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[77,"impl-ChunkedArray%3CBinaryType%3E"],[78,"impl-ChunkedArray%3CStringType%3E"],[79,"impl-ChunkedArray%3CT%3E"],[82,"impl-ChunkedArray%3CListType%3E"],[83,"impl-ChunkedArray%3CFixedSizeListType%3E"],[84,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[85,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[86,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[87,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[88,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[89,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[90,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[91,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[92,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[93,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[94,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[95,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[97,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[98,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[99,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[100,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[101,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[102,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[103,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[104,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[105,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[106,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[107,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[108,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[109,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[110,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[114,"impl-ChunkedArray%3CStringType%3E"],[115,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[119,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[120,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[122,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[123,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[124,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[125,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[126,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[127,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[128,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[129,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[130,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[138,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[139,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[140,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[141,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[142,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[143,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[144,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[172,"impl-Div-for-ChunkedArray%3CT%3E"],[173,"impl-Div-for-%26ChunkedArray%3CT%3E"],[174,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[175,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[183,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[184,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[185,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[186,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[187,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[188,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[189,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[190,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[191,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[192,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[193,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[194,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[195,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[196,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[197,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[198,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[199,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[200,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[201,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[202,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[204,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[205,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[206,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[207,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[208,"impl-ChunkFilter%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[209,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[210,"impl-ChunkFilter%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[211,"impl-ChunkFilter%3CListType%3E-for-ChunkedArray%3CListType%3E"],[212,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[213,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[214,"impl-ChunkFilter%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[217,"impl-Debug-for-ChunkedArray%3CListType%3E"],[218,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[219,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[220,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[221,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[222,"impl-Debug-for-ChunkedArray%3CT%3E"],[223,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[225,"impl-ChunkedArray%3CFixedSizeListType%3E"],[226,"impl-ChunkedArray%3CListType%3E"],[235,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[236,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[237,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[238,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[239,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[240,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[241,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[242,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[243,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[244,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[245,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[246,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[247,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[248,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[249,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[250,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[251,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[252,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[253,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[254,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[255,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[256,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[257,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[258,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[259,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[260,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[261,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[262,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[263,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[264,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[265,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[266,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[267,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[268,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[270,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[271,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[272,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[273,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[274,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[275,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[276,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[277,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[279,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[280,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[281,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[282,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[283,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[284,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[285,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[286,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[287,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[288,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[289,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[290,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[293,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[294,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[295,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[296,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[297,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[298,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[299,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[300,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[301,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[302,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[303,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[304,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[305,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[306,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[307,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[308,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[310,"impl-ChunkedArray%3CFixedSizeListType%3E"],[311,"impl-ChunkedArray%3CListType%3E"],[313,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[314,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[315,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[316,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[317,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[318,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[319,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[320,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[321,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[322,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[323,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[324,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[326,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[329,"impl-ChunkedArray%3CFixedSizeListType%3E"],[330,"impl-ChunkedArray%3CListType%3E"],[334,"impl-ChunkedArray%3CFixedSizeListType%3E"],[335,"impl-ChunkedArray%3CListType%3E"],[341,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[342,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[343,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[344,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[345,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[346,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[347,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[348,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[349,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[350,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[351,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[352,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[354,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[355,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[356,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[357,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[358,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[359,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[360,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[361,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[362,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[363,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[364,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[365,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[366,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[367,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[368,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[369,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[370,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[371,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[377,"impl-ChunkedArray%3CFixedSizeListType%3E"],[378,"impl-ChunkedArray%3CListType%3E"],[386,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[387,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[388,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[389,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[390,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[391,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[392,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[393,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[395,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[396,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[425,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[426,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[427,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[428,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[429,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[430,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[431,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[432,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[433,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[434,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[435,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[436,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[437,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[438,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[439,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[440,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[441,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[442,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[443,"impl-ChunkedArray%3CBooleanType%3E"],[444,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[445,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[446,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[447,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[448,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[449,"impl-ChunkedArray%3CBooleanType%3E"],[450,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[451,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[452,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[453,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[454,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[455,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[456,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[463,"impl-ChunkedArray%3CBooleanType%3E"],[464,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[466,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[467,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[468,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[469,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[470,"impl-ChunkedArray%3CBooleanType%3E"],[471,"impl-ChunkedArray%3CT%3E"],[472,"impl-Mul-for-ChunkedArray%3CT%3E"],[473,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[474,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[475,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[477,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[478,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[479,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[481,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[482,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[483,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[484,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[485,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[486,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[487,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[488,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[489,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[490,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[491,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[492,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[493,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[494,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[495,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[496,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[497,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[498,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[499,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[500,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[501,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[502,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[503,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[504,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[505,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[506,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[507,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[508,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[509,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[510,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[511,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[512,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[513,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[514,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[515,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[516,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[517,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[518,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[519,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[520,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[522,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[523,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[524,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[525,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[526,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[527,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[528,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[529,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[536,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[537,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[538,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[539,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[540,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[541,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[542,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[543,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[544,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[545,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[546,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[547,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[548,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[549,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[550,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[551,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[552,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[553,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[554,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[555,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[558,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[559,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[561,"impl-ChunkedArray%3CStringType%3E"],[562,"impl-ChunkedArray%3CListType%3E"],[563,"impl-ChunkedArray%3CStringType%3E"],[564,"impl-ChunkedArray%3CListType%3E"],[567,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[568,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[569,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[570,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[571,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[572,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[579,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[580,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[581,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[582,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[583,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[584,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[585,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[586,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[587,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[588,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[589,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[590,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[591,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[592,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[593,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[594,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[595,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[596,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[597,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[598,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[599,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[600,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[601,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[602,"impl-Rem-for-ChunkedArray%3CT%3E"],[603,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[604,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[607,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[608,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[609,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[610,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[611,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[612,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[613,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[614,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[619,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[620,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[621,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[622,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[623,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[624,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[625,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[626,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[627,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[628,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[629,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[630,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[631,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[632,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[633,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[639,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[640,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[641,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[642,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[643,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[644,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[645,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[646,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[647,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[648,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[649,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[650,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[651,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[652,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[653,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[654,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[657,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[658,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[659,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[660,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[661,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[662,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[663,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[664,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[665,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[666,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[668,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[669,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[670,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[671,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[672,"impl-Sub-for-ChunkedArray%3CT%3E"],[673,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[674,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[676,"impl-ChunkedArray%3CBooleanType%3E"],[677,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[678,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[679,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[680,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[682,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[683,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[686,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[687,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[688,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[689,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[690,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[691,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[696,"impl-ChunkedArray%3CFixedSizeListType%3E"],[697,"impl-ChunkedArray%3CListType%3E"],[698,"impl-ChunkedArray%3CListType%3E"],[699,"impl-ChunkedArray%3CT%3E"],[704,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[705,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[706,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[707,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[708,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[709,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[711,"impl-ChunkedArray%3CListType%3E"],[712,"impl-ChunkedArray%3CFixedSizeListType%3E"],[725,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[726,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[727,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[728,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[729,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[734,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[735,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[736,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[737,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[738,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[739,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[740,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[741,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[742,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[743,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[744,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[745,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[746,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[747,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[748,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[749,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[750,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[751,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[752,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[753,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[754,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[755,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[756,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[757,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[758,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[759,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[760,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[761,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[762,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[763,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[764,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[765,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[766,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[767,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[768,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[778,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[779,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[780,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[781,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[782,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[783,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[784,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[785,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[786,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[787,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[788,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[789,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[790,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[791,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[792,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[793,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[794,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[795,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[796,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[797,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[798,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[799,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[800,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[801,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[802,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[803,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[804,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[805,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[806,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[807,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[808,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[809,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[810,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[811,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[812,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[813,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[988,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[989,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1274,"impl-MetadataProperties"],[1275,"impl-Flags-for-MetadataProperties"],[1276,"impl-Flags-for-MetadataFlags"],[1277,"impl-MetadataFlags"],[1344,"impl-Octal-for-MetadataProperties"],[1345,"impl-LowerHex-for-MetadataProperties"],[1346,"impl-Binary-for-MetadataProperties"],[1347,"impl-Debug-for-MetadataProperties"],[1348,"impl-UpperHex-for-MetadataProperties"],[1349,"impl-Debug-for-MetadataFlags"],[1350,"impl-UpperHex-for-MetadataFlags"],[1351,"impl-Octal-for-MetadataFlags"],[1352,"impl-Binary-for-MetadataFlags"],[1353,"impl-LowerHex-for-MetadataFlags"],[1361,"impl-MetadataProperties"],[1362,"impl-Flags-for-MetadataProperties"],[1363,"impl-MetadataFlags"],[1364,"impl-Flags-for-MetadataFlags"],[1476,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1477,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1510,"impl-ObjectArray%3CT%3E"],[1511,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1525,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1526,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1536,"impl-ObjectArray%3CT%3E"],[1537,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1539,"impl-ObjectArray%3CT%3E"],[1540,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1542,"impl-ObjectArray%3CT%3E"],[1543,"impl-Array-for-ObjectArray%3CT%3E"],[1546,"impl-ObjectChunkedBuilder%3CT%3E"],[1547,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1549,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1550,"impl-ObjectChunkedBuilder%3CT%3E"],[2289,"impl-Logical%3CDurationType,+Int64Type%3E"],[2290,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2292,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2293,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2294,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2295,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2296,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2545,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2546,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2547,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2548,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2549,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2558,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2559,"impl-PartialEq-for-DataType"],[2565,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2566,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2567,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2569,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2570,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2571,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2605,"impl-Debug-for-AnyValue%3C\'a%3E"],[2606,"impl-Display-for-AnyValue%3C\'_%3E"],[2608,"impl-Debug-for-DataType"],[2609,"impl-Display-for-DataType"],[2611,"impl-Debug-for-TimeUnit"],[2612,"impl-Display-for-TimeUnit"],[2617,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2618,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2633,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2634,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2636,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2637,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2638,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2640,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2642,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2643,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2644,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2646,"impl-From%3C%26ArrowField%3E-for-Field"],[2670,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2671,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2694,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2695,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2696,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2697,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2698,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2702,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2703,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2704,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2705,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2706,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2742,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2743,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2744,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2746,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2747,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2748,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2850,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[2851,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[2852,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[2853,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[2854,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[2904,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2905,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2906,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2908,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2909,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2910,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2924,"impl-PolarsMonthEnd-for-Logical%3CDateType,+Int32Type%3E"],[2925,"impl-PolarsMonthEnd-for-Logical%3CDatetimeType,+Int64Type%3E"],[2926,"impl-PolarsMonthStart-for-Logical%3CDateType,+Int32Type%3E"],[2927,"impl-PolarsMonthStart-for-Logical%3CDatetimeType,+Int64Type%3E"],[2951,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2952,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2953,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2954,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2955,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2956,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2957,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2958,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2965,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2966,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2967,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2969,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2970,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2971,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2975,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[2976,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[2997,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[2998,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3005,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3006,"impl-Logical%3CDurationType,+Int64Type%3E"],[3011,"impl-Logical%3CTimeType,+Int64Type%3E"],[3012,"impl-Logical%3CDateType,+Int32Type%3E"],[3013,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3028,"impl-Logical%3CDurationType,+Int64Type%3E"],[3029,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3077,"impl-Logical%3CTimeType,+Int64Type%3E"],[3078,"impl-Logical%3CDateType,+Int32Type%3E"],[3079,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3085,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3086,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3375,"impl-Debug-for-ErrString"],[3376,"impl-Display-for-ErrString"],[3377,"impl-Display-for-PolarsError"],[3378,"impl-Debug-for-PolarsError"],[3382,"impl-From%3CError%3E-for-PolarsError"],[3383,"impl-From%3CError%3E-for-PolarsError"],[3384,"impl-From%3CError%3E-for-PolarsError"],[3386,"impl-From%3CError%3E-for-PolarsError"],[3387,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3388,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3510,"impl-Debug-for-DataFrame"],[3511,"impl-Display-for-DataFrame"],[3517,"impl-From%3CStructChunked%3E-for-DataFrame"],[3518,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3519,"impl-From%3C%26Schema%3E-for-DataFrame"],[3546,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3547,"impl-Index%3Cusize%3E-for-DataFrame"],[3548,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3549,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3550,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3551,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3552,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3553,"impl-Index%3C%26str%3E-for-DataFrame"],[3644,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3645,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3818,"impl-Debug-for-GroupByMethod"],[3819,"impl-Display-for-GroupByMethod"],[3825,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3826,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3827,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3862,"impl-IntoIterator-for-GroupsIdx"],[3863,"impl-IntoIterator-for-%26GroupsIdx"],[3865,"impl-IntoParallelIterator-for-GroupsIdx"],[3866,"impl-IntoParallelIterator-for-%26GroupsIdx"],[5186,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5187,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5825,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[5826,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[5827,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[5837,"impl-Default-for-Arc%3C%5BT%5D%3E"],[5838,"impl-Default-for-Arc%3Cstr%3E"],[5839,"impl-Default-for-Arc%3CCStr%3E"],[5840,"impl-Default-for-Arc%3CT%3E"],[6311,"impl-PartialEq-for-Expr"],[6312,"impl-Expr"],[6315,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[6316,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[6332,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[6333,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[6334,"impl-PartialEq-for-Arc%3CT,+A%3E"],[6339,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6340,"impl-PartialEq-for-StructArray"],[6615,"impl-Debug-for-Duration"],[6616,"impl-Display-for-Duration"],[6638,"impl-Display-for-JoinType"],[6639,"impl-Debug-for-JoinType"],[6641,"impl-Display-for-JoinValidation"],[6642,"impl-Debug-for-JoinValidation"],[6655,"impl-Debug-for-Expr"],[6656,"impl-Display-for-Expr"],[6658,"impl-Display-for-Operator"],[6659,"impl-Debug-for-Operator"],[6661,"impl-Display-for-BooleanFunction"],[6662,"impl-Debug-for-BooleanFunction"],[6663,"impl-Display-for-CategoricalFunction"],[6664,"impl-Debug-for-CategoricalFunction"],[6665,"impl-Debug-for-TemporalFunction"],[6666,"impl-Display-for-TemporalFunction"],[6667,"impl-Display-for-PowFunction"],[6668,"impl-Debug-for-PowFunction"],[6669,"impl-Display-for-StringFunction"],[6670,"impl-Debug-for-StringFunction"],[6671,"impl-Display-for-FunctionExpr"],[6672,"impl-Debug-for-FunctionExpr"],[6686,"impl-Display-for-Arc%3CT,+A%3E"],[6687,"impl-Pointer-for-Arc%3CT,+A%3E"],[6688,"impl-Debug-for-Arc%3CT,+A%3E"],[6736,"impl-From%3CDslPlan%3E-for-LazyFrame"],[6738,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[6800,"impl-From%3Cf32%3E-for-Expr"],[6801,"impl-From%3Cbool%3E-for-Expr"],[6802,"impl-From%3Ci64%3E-for-Expr"],[6803,"impl-From%3Ci8%3E-for-Expr"],[6804,"impl-From%3Cu16%3E-for-Expr"],[6805,"impl-From%3Ci32%3E-for-Expr"],[6806,"impl-From%3Cu32%3E-for-Expr"],[6807,"impl-From%3Cu8%3E-for-Expr"],[6808,"impl-From%3C%26str%3E-for-Expr"],[6809,"impl-From%3Cf64%3E-for-Expr"],[6810,"impl-From%3CAggExpr%3E-for-Expr"],[6812,"impl-From%3Ci16%3E-for-Expr"],[6813,"impl-From%3Cu64%3E-for-Expr"],[6816,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6817,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6818,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6819,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6820,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6821,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6822,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6823,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6824,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6825,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6832,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[6833,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[6835,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[6836,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[6851,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[6852,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[6853,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[6854,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[6855,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[6856,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[6858,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[6859,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[6860,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[6861,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[6862,"impl-From%3CT%3E-for-Arc%3CT%3E"],[6863,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[6865,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[6866,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[6867,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[6875,"impl-From%3CMutableStructArray%3E-for-StructArray"],[6877,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[6878,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[6879,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[6880,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[6882,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[6883,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[6884,"impl-From%3CArrowSchema%3E-for-Schema"],[6898,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6899,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6907,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6908,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6920,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6921,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[8031,"impl-StructArray"],[8032,"impl-Array-for-StructArray"],[8040,"impl-Array-for-StructArray"],[8041,"impl-StructArray"],[8722,"impl-StructArray"],[8723,"impl-Array-for-StructArray"],[8969,"impl-LazyFileListReader-for-LazyCsvReader"],[8970,"impl-LazyCsvReader"],[8971,"impl-LazyJsonLineReader"],[8972,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9019,"impl-LazyCsvReader"],[9020,"impl-LazyFileListReader-for-LazyCsvReader"],[9021,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9022,"impl-LazyJsonLineReader"],[9059,"impl-StructArray"],[9060,"impl-Array-for-StructArray"],[9447,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[9448,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[9453,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[9454,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[10119,"impl-Debug-for-RollingFunction"],[10120,"impl-Display-for-RollingFunction"],[10148,"impl-Display-for-RollingFunctionBy"],[10149,"impl-Debug-for-RollingFunctionBy"],[10365,"impl-Add%3CT%3E-for-Series"],[10366,"impl-Add%3CT%3E-for-%26Series"],[10367,"impl-Add-for-Series"],[10368,"impl-Add-for-%26Series"],[10383,"impl-AsSeries-for-Series"],[10384,"impl-SeriesSealed-for-Series"],[10429,"impl-Div%3CT%3E-for-%26Series"],[10430,"impl-Div-for-Series"],[10431,"impl-Div-for-%26Series"],[10432,"impl-Div%3CT%3E-for-Series"],[10442,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10443,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10444,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10446,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10447,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10448,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10465,"impl-Display-for-Series"],[10466,"impl-Debug-for-Series"],[10470,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[10471,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[10473,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[10474,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[10475,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[10482,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[10483,"impl-FromIterator%3C%26i8%3E-for-Series"],[10484,"impl-FromIterator%3C%26u8%3E-for-Series"],[10485,"impl-FromIterator%3C%26i16%3E-for-Series"],[10486,"impl-FromIterator%3C%26str%3E-for-Series"],[10487,"impl-FromIterator%3CString%3E-for-Series"],[10488,"impl-FromIterator%3C%26u32%3E-for-Series"],[10489,"impl-FromIterator%3Cu16%3E-for-Series"],[10490,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[10491,"impl-FromIterator%3C%26i32%3E-for-Series"],[10492,"impl-FromIterator%3Cf32%3E-for-Series"],[10493,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[10494,"impl-FromIterator%3Ci16%3E-for-Series"],[10495,"impl-FromIterator%3Ci8%3E-for-Series"],[10496,"impl-FromIterator%3Cu8%3E-for-Series"],[10497,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[10498,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[10499,"impl-FromIterator%3Ci64%3E-for-Series"],[10500,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[10501,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[10502,"impl-FromIterator%3Cu64%3E-for-Series"],[10503,"impl-FromIterator%3Cf64%3E-for-Series"],[10504,"impl-FromIterator%3Cu32%3E-for-Series"],[10505,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[10506,"impl-FromIterator%3C%26u16%3E-for-Series"],[10507,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[10508,"impl-FromIterator%3C%26i64%3E-for-Series"],[10509,"impl-FromIterator%3Ci32%3E-for-Series"],[10510,"impl-FromIterator%3C%26bool%3E-for-Series"],[10511,"impl-FromIterator%3Cbool%3E-for-Series"],[10512,"impl-FromIterator%3C%26f32%3E-for-Series"],[10513,"impl-FromIterator%3C%26u64%3E-for-Series"],[10514,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[10515,"impl-FromIterator%3C%26f64%3E-for-Series"],[10516,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[10517,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[10518,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[10519,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[10520,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[10521,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[10522,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[10523,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[10524,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[10525,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[10526,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[10537,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10538,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10539,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10541,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10542,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10543,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10580,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10581,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10582,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10584,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10585,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10586,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10595,"impl-Mul%3CT%3E-for-Series"],[10596,"impl-Mul%3CT%3E-for-%26Series"],[10597,"impl-Mul-for-Series"],[10598,"impl-Mul-for-%26Series"],[10602,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[10603,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[10604,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[10605,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[10606,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[10607,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[10608,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[10609,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[10610,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[10611,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[10612,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[10613,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[10614,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[10615,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[10616,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[10617,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[10618,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[10619,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[10620,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[10621,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[10622,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[10623,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[10624,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[10625,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[10626,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[10627,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[10628,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[10629,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[10630,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[10631,"impl-NamedFrom%3CT,+T%3E-for-Series"],[10632,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[10633,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[10634,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[10635,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[10636,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[10637,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[10638,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[10639,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[10640,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[10641,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[10642,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[10643,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[10644,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[10645,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[10646,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[10647,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[10648,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[10649,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[10650,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[10651,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[10652,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[10658,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10659,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10660,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10662,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10663,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10664,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10672,"impl-Rem%3CT%3E-for-%26Series"],[10673,"impl-Rem-for-%26Series"],[10674,"impl-Rem%3CT%3E-for-Series"],[10700,"impl-Sub%3CT%3E-for-Series"],[10701,"impl-Sub%3CT%3E-for-%26Series"],[10702,"impl-Sub-for-Series"],[10703,"impl-Sub-for-%26Series"],[10731,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[10732,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[10733,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[10735,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAAJ8O5g4jDyYPJw8oDykPKg8vDzIPNw84D10P","e":"OzAAAAEAAM8eGgQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUABoAOAAFAEIAAgBGAAoAVQAKAGEABQBoAAAAagAAAGwABAByABYAiwAPAJ4AAgCiAAEAqAANALgAEwDNAAoA2QAKAOUAAADnAAEA6wAdAA8BFAAmARIAOgEUAFEBAQBWAR4AdwECAH4BEACQAQMAlwEBAJsBAQCeAQYAqgEhANABBgDZAQcA4gEyABkCEwAuAgIAMgIEADgCBQBCAgAARAIaAGACBwBsAhEAgAIPAJICFwCtAgEAtAIAALYCAQC9AgAAwQIHAMsCAQDOAgwA3AIAAN4CKAAJAwAACwMjADEDNABoAwgAdQMRAIoDWADwAxIADgQHABcESQBkBA0AcwQBAHYEGQCRBAAAlAQUAK0EAwC1BAMAuwQ1APwEAQADBRIAGgUMACkFBwAzBQIAOAUCAD0FDQBTBQAAVQUAAFgFAQBeBQsAdQUBAHkFAAB8BQIAgwUDAIgFAQCQBQsAogUDAKgFDgC5BQcAwwUVANoFBwDjBQAA5gUAAOgFAgDtBRAA/wUAAAIGAAAEBgIACAYCAAwGAgAQBgcAGQYAABsGBQAjBgEAJgYAACgGAQArBgMAMAYDADUGAgA5BgMAPwYAAEIGAABKBgAATwYAAFIGAQBXBgEAWgYAAF0GAABlBgAAawYCAHYGBgCABg0AkAYFAJgGCACjBgQAqQYAAKwGAACuBgEAtAYFAL0GAQDGBgEA0gYAANQGAQDXBgAA2gYAANwGAADgBgAA4gYAAOcGDAD2BgIABQcAAAcHBwAQBwIAFgcAABgHAwAdBwEAIAcFACwHFQBDBwEARwcEAE0HAwBUBwYAaAcDAG0HBwB2BwQAfQcCAIEHBQCJBwAAiwcMAJwHAQCgBwEApgcBAKkHAQCsBwMAsQcAALMHAAC2BwEAugcAALwHAQC/BwAAwQcCAMUHDADTBwAA1QcBANgHAADaBwEA3QcAAN8HAQDiBwAA5AcBAOcHAADrBwAA7wcBAPMHAAD2BwAA+AcAAPoHAwD/BwAAAggIAAwIAQAPCAUAFggBABoIAAAcCAIAIQgAACYIAwArCAEALggAADAIAQAzCAAANQgBADgIAAA6CAEAPQgAAD8IAQBCCAAARAgAAEcIJgBvCBgAiQhnAPQIWABOCQcAWAmYAPIJBwD7CSgAJQoBACgKDwA6CgEASgoBAE0KAgBRCgAAUwoCAFcKAABZCgAAbwoBAHIKAAB6CgAAfQoAAH8KBgCHCgQAjQoAAI8KBACVCgEAmAoZALcKDwDJCioA9QoAACELCQAtCwAALwsBADILBAA4CwEAPQsAAD8LBQBGCwAASQsCAE4LBABUCwAAVwsQAGoLAABtCxMAggsAAIULDQCUCw0AowsAAKULAQCpCw8AugsAAMELAADDCwAAyAsQANsLAADdCwIA4gshAAkMZQBwDC8AoQwCAKUMNQDcDAEA3wwIAOkMAADrDAEA7gwEAPQMAQD5DAAA+wwCAP8MAAACDQQACA0EAA4NEgAiDREANQ0AADcNAgA7DQYARQ0EAEsNFQBkDQAAZw0KAHMNAgB7DRAAjg0QAKYNAQCqDQIArg0AALANAAC1DQMAvg0DANANAADSDQAA1A0BANsNDADuDQIAAQ4BAA4OAQASDgAAGA4AACEOAQAkDgAAJw4BAC4OAAAwDgQAOA4GAEEOCQBMDgAATw4BAFMOBABfDg0Abg4CAHMOCgB/DgEAgg4DAIcOAwCMDgkAlw4HAKAOAQCjDhgAvQ4oAOcOBgDyDgIA9g4AAPoOBAABDwAABQ8HABUPDQAkDwEAKw8DADAPAQA0DwIAOQ8AADsPHwBeDwwAbQ8FAHQPBwB9DyMAow8LALAPDgDADwEAxA8DAMsPBgDVDw4A5g8FAO4PAADxDwgA+w8BAP8PBAAFEAUADBAAABEQCQAcEAEAIBAEACYQAQApEAoANRAAADgQAAA6EAkARRAAAEcQCQBSEAQAWxAAAF4QAABmEAIAbRAAAHAQAQB2EAoAghARAJcQBwCgEAEAoxAEAKwQBAC0EAQAvRADAMIQAADEEAsA0hAKAN8QAQDjEAAA5hAAAOgQBQDvEAMA9BAEAPoQAwABEQIABxEAAAkRAQANEQAADxEEABYRDwAnEQAAKhEBAC0RAwAzEQIAOREVAFARCQBcEQAAXhEBAGIRAABkEQEAaBEAAGoRAQBuEQAAcBEEAHcRAQB6EQEAfhEAAIERAACDEQMAiBECAIwRCACXEQcAoREAAKURAQCpEQAAqxEAAK0RAQCwEQEAsxEBALgRAAC6EQ0AyxEFANIRBwDcEQIA4BEGAOsRAQDuEQAA8BEBAPMRAwD4EQAA+hEDAP8RAgADEgAABRIEAAsSAAANEgQAExIEABkSAQAcEgEAHxIBACISAQAlEgAAJxIAACoSAAAtEgIAMhIDADcSBwBBEgIASBIAAEoSBQBREgQAVxIAAFoSAABcEgQAYhIDAGcSAgBrEgIAbxINAH4SEwCTEhIApxIIALESBAC5EgEAvRIAAL8SBQDGEgQAzBIAAM4SAgDTEgEA2BIBAN0SBwDmEgMA7hIGAPYSCQADEwEABhMGAA4TAgATEwIAGhMFACETEgA2EwAAOBMBADwTAAA+EwEAQhMAAEQTAQBIEwAAShMDAFATAwBVEwIAXBMJAGcTAABqEwUAchMCAHYTWwDTEwQA3BMAAN4TAADhEwUA6RMAAPATAADyEwAA9RMAAPcTAAD7EwUABRQAAAkUAAAQFAAAFBQAACAUAgAkFAQAKhQAACwUAgAwFAEANhQBADkUBAA/FAEARxQKAFQU9gBMFQAAThUBAFEVAABTFQIAWRUAAF0VAABhFQAAYxUAAGUVAABrFQAAbhUAAHAVAQBzFQAAfRVMAMsVCwDYFVkAMxYBADcWAQA7FgAAPxYCAEUWCgBTFgQAXRYAAF8WAABpFgEAbRYAAHMWAAB1FgEAehYBAIkWAACPFgAAlBYCAJoWAACcFgUApBYpANIW/wDUFwAA2RcBANwXAwDiFwAA5BcDAOwXGAAGGFEAWRgOAGwYAQBxGAAAdBgAAHgYAwB9GCsAqhgUAMAYCgDOGKoAfRkAAIEZAACDGQQAiRkAAI0ZAACTGQAAlRkAAJ4ZAAChGQAAqRkAAKwZAgCxGQMAthkBALoZAQC9GQAAvxkDAMcZAADKGQEAzxlhADIaAAA1GgAAURoAAFMaAABlGgAAbRoAAHgaAACRGgoAnRoBAKEaCQCxGgEAtBoBALwaAADRGgAA1hoAANwaAADeGgMA4xoCAOcaAADtGgAA8BoEAPYaAAD8GgEAABsCAAYbBQANGwIAERsBABUbAQAYGwAAGhsAABwbAAAhGwAAKhsAAC0bAQAwGwIANRsAADcbAAA7GwEAPxsEAEgbAQBMGwAAVxsAAFkbPwCcGwIAoxsAAKUbAACnGwQArhsAALAbAACzGwAAuhsCAL8bfQA/HAAARBwCAEgcAQDFHAAAxxwGANEcAQDUHAUA3BwBAN8cAgDjHAEA5hwAAOgcAADrHAEA+BwAAPocAAD9HAEAAB0DAAYdAgAXHQEAGh0BACMdAAAlHQEAKB0AACwdAgAyHQEANR0AADgdAAA9HQIAQh0BAEYdAgBKHQMAUB0OAGQdAABqHQEAcR0AAHQdBQB9HQAAhR0CAJEdAACbHQAAoh0BAKYdAACqHQEArR0AALAdAAC1HQAAtx0AALkdAAC+HQAAwh0AAMQdAgDLHQgA2h0IAOgdAADqHQAA7h0AAPQdAAD2HQQA/x0BAAIeAQAFHgAACB4HABEeAAATHgIAFx4AABoeAQAqHgAALR4BADgeBgBEHgIATB4BAFMeAgBXHgAAYB4AAGIeAwBnHgUAbx4FAHoeAwB/HgAAgx4CAIkeAACMHgAAmB4AAJseAQCeHgEAoR4DAKceBQCuHgQAuR4AALseAAC/HgAAwh4AAMQeAQDJHgAAzR4AAM8eAADRHgEA9B4AAPkeAAADHwMACB8FAA8fAAARHwAAFB8AABofAQAfHwIAIx8DACofAAAsHwEALx8BADIfAQA1HwAAOh8DAEEfAABMHwAATh8AAFAfAABXHwQAYR8BAGYfAABoHwEAbR8AAG8fAAB1HwsAgh8AAIQfAACIHwAAjh8AAJEfAACXHwAAnh8KAKsfAgCwHwIAux8AAMofAADMHwAAzx8CANMfAwDZHwEA3B8AAN8fAADjH1sAQSALAE4gAABUIAYAXCAAAF4gAQBhIIgA7CAAAPAgeQBtIQAAbyEDAHohAAB9IQAAgSF4APshAAAHIgAADiIEABQiAQAYIgAAGiIAABwiAAAgIgAAJiIAACgiAAAqInkAqyIDALQiAAC3IgAAuiIAALwiAQDBIgAAwyIAAMsiAADUIgAA2iIAAOUiAADrIgAA+CIBAAojAAANIwEAESMAABojAwAfIwQANCMAAD0jAQBHIwAATCMAAFsjAABdIwEAZSMBAGojFACDIwEAhiNIANEjAADTIwAA1SMBANgjAQDbIwYA4yM2ABwkBQAjJAkALiQCADQkAAA2JAMAOyQBAD4kBQBIJBIAXCQBAF8kAgBkJAAAZyQDAGwkBgCDJAAAkSQCAKckAACvJAgAvCQAAL4kCwDLJAIAzyQRAOIkAQDlJA8A9iQXABAlAAASJQIAFyUMACUlBwAuJQQANSUCADklBQBBJQAAQyUMAFQlAQBYJQEAXiUBAGElAQBkJQMAaSUAAGslAABuJQEAciUAAHQlAQB3JQAAeSUCAH0lDACLJQAAjSUBAJAlAACSJQEAlSUAAJclAQCaJQAAnCUBAJ8lAACjJQAApyUBAKslAACuJQAAsCUAALIlAwC3JQAAuiUIAMQlAQDHJQUAziUBANIlAADUJQIA2SUAAN4lAwDjJQEA5iUAAOglAQDrJQAA7SUBAPAlAADyJQEA9SUAAPclAQD6JQAA/CUAAP8lEgATJgYAHCYAAB8mEAAxJggAOyYBAD4mCABIJgAASiYBAFAmAABSJgQAWyYBAGQmAgBqJgAAbCYAAHYmAACFJgMAjSYKAJkmAACbJggApibjAIsnAQCOJxgAqCcBAKsnDgC8JxEAzycAANEnFQDoJwEA6ycAAO0nCwD6JwIAASgAABQoAwAbKAYALygFADcoAABAKAAAQigBAEkoBgBRKAAAVygKAGsoBABxKAAAcygCAHcoBAB+KAMAgygBAIcoAACNKAQAligCAJooBwClKAIArCgCALAoAQC2KA4AyCgBAMwoAQDPKAAA0SgAANQoAgDhKAMA5ygBAOooAgDvKAEA8iguACQpAAArKQEALikAADApAAAyKQAAOCkBADspAgBBKQMATCkCAFMpAABVKQEAWSkAAFspAABfKQAAZCkDAGspAgBvKS4AoCkBAKQpAQCoKQEArCkBALEpAgC2KQEAuSkAALwpAgDCKQEAxikAAMopAADNKQMA1ikAAOEpAADjKQEA5ikQAPgpBAADKgEAByoCAAsqAAANKhYAJioBACoqDgA6KgEAPSoFAEQqCgBQKgAAUioAAFQqBAA="}],\
["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNCCNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTTTPTTTFKFFGFPTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNMNNNNNNNNNNNNNNNNNNNCNNNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPPPNMMMMMMNMCNNNMMNNNNNNMMNMCMMCNNCMMCMMMMNNNNNMMNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHKFFNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPFPFPPPPIFPPPFPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIKKKKRGFPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHHNNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHQQQQHHNNNNNNNNNOOOOJJJEEEEEEEEGPPNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPPEPIPPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPEPKKPEPGPPPIFEKPPPKGEEIEKGPPGFFFPPPPEEPKPFPEPEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOOONNONMMNNNNNNNNNNNNCNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHKFINNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPEPPKGGPPFFIKNNNNNNNNNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNMNNNNNNNMMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNNMNNNNNMNNNNNNNNNNNNNNNNNNNMMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNKKKKKFFFNHHHHHHHNHHEHNNNNNNNNHHNNHHNNNNNNNNNNNNNHHNNNNCNNNNNNNMNNNNNHHHNNNNNNNNNMNNHNNNNENHHHNNNNNHNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","add","add","add","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_slice","apply_values","apply_values_generic","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","drop_nulls","dtype","effective_metadata","equal","equal","equal_missing","equal_missing","extend","fill_null_with_values","filter","first_non_null","float","fmt","fmt","for_each","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","gt","gt_eq","gt_eq","has_validity","head","init","init","init_rand","inner_dtype","into","into","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt_eq","lt_eq","max","max","max_reduce","mean","mean","median","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_compute_len","new_with_dims","none_to_nan","not_equal","not_equal","not_equal_missing","not_equal_missing","null_count","object","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","rem","rem","rem","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","sort","sort_with","std","std_reduce","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","tail","take","take","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","vzip","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_null","append_null","append_null","append_null","append_null","append_option","append_option","append_value","append_value","append_value","append_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","finish","finish","finish","finish","finish","finish","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","init","init","init","init","into","into","into","into","list","new","new","new","new","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","from","from","from","from","from","from","from","get_list_builder","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_values_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","new","next","next","next_back","next_back","par","size_hint","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","ENABLED","EXTENSIVE_USE","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","Keep","LOG","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","New","SORTED","SORTED_ASC","SORTED_DSC","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","extend","extend","extensive_use","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_max_value","get_min_value","get_sorted_flag","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value_opt","merge","min_value","min_value_opt","not","not","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","descending","descending","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","into","into","maintain_order","maintain_order","multithreaded","multithreaded","new","new","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_to_buffer","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_binary","as_borrowed","as_ref","as_ref","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","bitand","bitor","bitor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","call_categorical_merge_operation","cast","cast","cast","cast_leaf","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode_and_offsets","field","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_amortized","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_owned","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_enum","is_float","is_float","is_integer","is_integer","is_known","is_list","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter_offsets","last","leaf_dtype","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max","max_reduce","max_reduce","max_reduce","mean","median","median","median_reduce","median_reduce","merge_dtypes","min","min_reduce","min_reduce","min_reduce","mmap_slice","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","n_unique","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_logical","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","offsets","par_iter","par_iter","par_iter_indexed","par_iter_indexed","partial_cmp","partial_cmp","precision","precision","quantile","quantile","quantile_reduce","quantile_reduce","rand_bernoulli","remainder","remainder","remainder","remainder","remainder","remainder","remainder","reverse","reverse","reverse","reverse","reverse","reverse","revmap","scale","scale","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","set","set","set","set_fast_explode","set_inner_dtype","set_name","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","std_reduce","std_reduce","strict_cast","string_cache","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","sum","sum_reduce","sum_reduce","take_unchecked","take_unchecked","take_unchecked","take_unchecked","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","try_zip_and_apply_amortized","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unique","unique","unique","update","value","value","value_unchecked","value_within_range","values_iter","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_nullable_idx","with_validity_typed","zero","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","append","append_null","append_value","arg_sort","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cast_with_options","clone","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain_iter_and_finish","drop","drop","drop","drop","dtype","equal","equal","equal","equal_missing","equal_missing","equal_missing","finish","finish","finish","from","from","from","from","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","gt","gt","gt_eq","gt_eq","gt_eq","init","init","init","init","into","into","into","into","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","new","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","uses_lexical_ordering","value_counts","vzip","vzip","vzip","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","build_local","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","find","fmt","fmt","from","from","get","get_categories","get_optional","init","init","into","into","is_global","is_local","len","same_src","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow_mut","borrow_mut","constants","deref","deref","deref","deref_mut","deref_mut","drop","drop","feature_gated","fmt","fmt","fmt","from","from","from","get_warning_function","init","init","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","ahash","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","add","add","add","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","mul","mul","mul","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","rem","rem","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sub","sub","sub","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Float32","Float32","Float64","Float64","Int32","Int32","Int64","Int64","Null","Null","Row","String","String","UInt32","UInt32","UInt64","UInt64","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","finish","fmt","from","from","hash","hash","idx","init","init","into","into","populate_multiple_key_hashmap","try_from","try_from","try_into","try_into","type_id","type_id","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vzip","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","MeltArgs","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","None","Null","Null","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PolarsArray","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","Raise","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","Some","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","VarAggSeries","VecHash","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocator","as_fd","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","context","context_trace","convert_inner_type","data_type","data_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default_arrays","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","df","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fields","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_str","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_unchecked","gt","has_validity","hash","hash","hash","hash","hash","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","interpol","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_raw","into_raw_with_allocator","into_series","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","max_reduce","median_reduce","metadata","metadata","min_periods","min_reduce","min_reduce","name","ne","negative_to_usize","new","new","new","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","null","null","partial_cmp","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","prod_reduce","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","sum_reduce","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","utf8","var_reduce","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","weights","window_size","with_metadata","with_metadata","write","write_vectored","error","error","msg","msg","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","set_global_random_seed","IndexOfSchema","Schema","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","contains","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","get_names","hash","index_of","index_of","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","merge_from_ref","new","new_inserting_at_index","remove","rename","reserve","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","Ascending","ChunkCompare","Descending","Descending","IntoSeries","IsSorted","IsSorted","Not","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_sort","arg_sort","arg_unique","arg_unique","arithmetic","array_ref","as_any","as_any_mut","as_any_mut","as_list","as_mut","as_ref","as_ref","as_single_ptr","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitand","bitor","bitor","bitxor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","dot","drop","drop","drop","drop_nulls","drop_nulls","dtype","dtype","eq","eq","equal","equal","equal","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_object","get_object","get_object_chunked_unchecked","get_object_chunked_unchecked","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_series","is_sorted_flag","iter","len","limit","limit","list","lt","lt","lt","lt_eq","lt_eq","lt_eq","max","max_reduce","max_reduce","mean","mean","mean_reduce","median","median","median_reduce","median_reduce","min","min_reduce","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_list","reverse","reverse","rolling_map","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","sort_with","std","std","std_reduce","std_reduce","str","str_value","strict_cast","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","to_arrow","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_add_owned","try_div","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_mul","try_mul_owned","try_rem","try_set_metadata","try_sub","try_sub_owned","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique","unique_stable","unpack","unstable","var","var","var_reduce","var_reduce","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","add_to","add_to","checked","div","divide","divide","divide","mul","multiply","multiply","multiply","rem","remainder","remainder","remainder","sub","subtract","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div","checked_div_num","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","Arg","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","TrustMyLength","Wrap","__clone_box","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all_equal","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","concat_df","concat_df_unchecked","contains","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","dtypes_to_schema","dtypes_to_supertype","eq","equivalent","equivalent","equivalent","flatten","fold_options","from","from","from","from_fallible_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_par_iter","from_trusted_len_iter_rev","from_trusted_len_iter_rev","get_supertype","get_time_units","handle_casting_failures","hash","init","init","init","into","into","into","into_inner","into_iter","into_vec","into_vec","into_vec","materialize_dyn_int","new","new","next","next_back","rayon","size_hint","slice_slice","split_ca","split_df_as_ref","to_owned","trust_my_length","try_from","try_from","try_from","try_get_supertype","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[39,"polars_core::chunked_array"],[430,"polars_core::chunked_array::arithmetic"],[458,"polars_core::chunked_array::builder"],[562,"polars_core::chunked_array::builder::list"],[716,"polars_core::chunked_array::cast"],[744,"polars_core::chunked_array::collect"],[758,"polars_core::chunked_array::float"],[760,"polars_core::chunked_array::from_iterator_par"],[764,"polars_core::chunked_array::iterator"],[801,"polars_core::chunked_array::iterator::par"],[803,"polars_core::chunked_array::metadata"],[1034,"polars_core::chunked_array::object"],[1109,"polars_core::chunked_array::object::builder"],[1132,"polars_core::chunked_array::object::registry"],[1160,"polars_core::chunked_array::ops"],[1284,"polars_core::chunked_array::ops::arity"],[1319,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1321,"polars_core::chunked_array::ops::gather"],[1324,"polars_core::chunked_array::ops::search_sorted"],[1353,"polars_core::chunked_array::ops::sort"],[1360,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1361,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1368,"polars_core::chunked_array::ops::sort::options"],[1443,"polars_core::chunked_array::temporal"],[1444,"polars_core::chunked_array::temporal::conversion"],[1447,"polars_core::config"],[1451,"polars_core::datatypes"],[2858,"polars_core::datatypes::categorical"],[2998,"polars_core::datatypes::categorical::revmap"],[3050,"polars_core::datatypes::categorical::string_cache"],[3069,"polars_core::datatypes::revmap"],[3075,"polars_core::datatypes::string_cache"],[3079,"polars_core::error"],[3144,"polars_core::error::PolarsError"],[3148,"polars_core::error::constants"],[3151,"polars_core::export"],[3159,"polars_core::fmt"],[3189,"polars_core::frame"],[3451,"polars_core::frame::explode"],[3480,"polars_core::frame::group_by"],[3715,"polars_core::frame::group_by::GroupByMethod"],[3716,"polars_core::frame::group_by::GroupsProxy"],[3718,"polars_core::frame::group_by::aggregations"],[3731,"polars_core::frame::group_by::expr"],[3734,"polars_core::frame::row"],[3828,"polars_core::functions"],[3830,"polars_core::hashing"],[3878,"polars_core::prelude"],[4442,"polars_core::prelude::PolarsError"],[4446,"polars_core::prelude::default_arrays"],[4452,"polars_core::prelude::list"],[4475,"polars_core::prelude::null"],[4505,"polars_core::prelude::revmap"],[4511,"polars_core::prelude::slice"],[4514,"polars_core::prelude::string_cache"],[4518,"polars_core::prelude::utf8"],[4522,"polars_core::random"],[4523,"polars_core::schema"],[4597,"polars_core::series"],[4990,"polars_core::series::arithmetic"],[5015,"polars_core::series::arithmetic::checked"],[5023,"polars_core::series::ops"],[5049,"polars_core::series::unstable"],[5073,"polars_core::utils"],[5182,"polars_core::utils::flatten"],[5187,"dyn_clone::sealed"],[5188,"num_traits"],[5189,"num_traits::cast"],[5190,"polars_error"],[5191,"polars_core::series::arithmetic::borrowed"],[5192,"polars_core::frame::group_by::proxy"],[5193,"core::option"],[5194,"core::iter::traits::iterator"],[5195,"core::ops::function"],[5196,"core::marker"],[5197,"polars_core::datatypes::dtype"],[5198,"alloc::string"],[5199,"polars_core::datatypes::aliases"],[5200,"polars_core::series::arithmetic::borrowed::checked"],[5201,"polars_arrow::array"],[5202,"alloc::vec"],[5203,"core::iter::traits::double_ended"],[5204,"core::fmt"],[5205,"core::iter::traits::collect"],[5206,"core::result"],[5207,"polars_utils::iter::fallible"],[5208,"polars_arrow::bitmap::immutable"],[5209,"rayon::iter"],[5210,"polars_arrow::trusted_len"],[5211,"polars_core::datatypes::any_value"],[5212,"polars_utils::index"],[5213,"polars_core::chunked_array::logical::decimal"],[5214,"core::iter::traits::exact_size"],[5215,"polars_core::series::series_trait"],[5216,"core::slice::iter"],[5217,"core::iter::adapters::map"],[5218,"alloc::sync"],[5219,"core::convert"],[5220,"core::ops::range"],[5221,"polars_core::datatypes::field"],[5222,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5223,"polars_core::chunked_array::ops::rolling_window"],[5224,"ahash::random_state"],[5225,"polars_utils::hashing"],[5226,"ndarray::aliases"],[5227,"either"],[5228,"core::any"],[5229,"polars_core::chunked_array::arithmetic::numeric"],[5230,"polars_core::chunked_array::builder::string"],[5231,"polars_arrow::array::binview"],[5232,"polars_core::chunked_array::builder::boolean"],[5233,"polars_core::chunked_array::builder::null"],[5234,"polars_core::chunked_array::builder::primitive"],[5235,"core::clone"],[5236,"polars_core::chunked_array::builder::list::anonymous"],[5237,"polars_core::chunked_array::builder::list::boolean"],[5238,"polars_core::chunked_array::builder::list::primitive"],[5239,"polars_core::chunked_array::builder::list::binary"],[5240,"polars_core::chunked_array::builder::list::null"],[5241,"alloc::boxed"],[5242,"core::hash"],[5243,"polars_arrow::array::boolean"],[5244,"polars_core::chunked_array::metadata::env"],[5245,"bitflags::iter"],[5246,"std::fs"],[5247,"std::sync::mutex"],[5248,"polars_arrow::datatypes"],[5249,"polars_arrow::bitmap::utils::iterator"],[5250,"polars_arrow::bitmap::utils::zip_validity"],[5251,"polars_arrow::offset"],[5252,"polars_arrow::array::static_array"],[5253,"core::error"],[5254,"polars_arrow::array::primitive"],[5255,"polars_arrow::legacy::array::slice"],[5256,"polars_row::row"],[5257,"chrono::naive::datetime"],[5258,"alloc::borrow"],[5259,"polars_arrow::array::static_array_collect"],[5260,"bytemuck::zeroable"],[5261,"polars_core::chunked_array::logical::categorical"],[5262,"polars_core::chunked_array::logical::categorical::merge"],[5263,"polars_core::chunked_array::logical"],[5264,"polars_core::datatypes::time_unit"],[5265,"polars_arrow::datatypes::physical_type"],[5266,"polars_arrow::types"],[5267,"core::borrow"],[5268,"smartstring::alias"],[5269,"polars_arrow::pushable"],[5270,"core::cmp"],[5271,"polars_core::chunked_array::logical::categorical::builder"],[5272,"polars_core::chunked_array::logical::categorical::revmap"],[5273,"polars_core::chunked_array::logical::categorical::string_cache"],[5274,"polars_error::warning"],[5275,"polars_core::series::from"],[5276,"polars_utils::aliases"],[5277,"polars_arrow::datatypes::schema"],[5278,"polars_core::chunked_array::ndarray"],[5279,"polars_arrow::array::struct_"],[5280,"polars_arrow::record_batch"],[5281,"polars_utils::idx_vec"],[5282,"rayon::iter::plumbing"],[5283,"polars_core::frame::group_by::into_groups"],[5284,"core::iter::adapters::copied"],[5285,"core::iter::adapters::zip"],[5286,"polars_arrow::legacy::kernels::rolling"],[5287,"polars_utils::float"],[5288,"polars_arrow::types::native"],[5289,"polars_core::frame::group_by::aggregations::agg_list"],[5290,"polars_core::frame::row::av_buffer"],[5291,"polars_arrow::array::binary"],[5292,"polars_core::hashing::identity"],[5293,"hashbrown::map"],[5294,"polars_core::hashing::vector_hasher"],[5295,"core::alloc"],[5296,"std::os::fd::owned"],[5297,"std::os::fd::raw"],[5298,"core::mem::maybe_uninit"],[5299,"polars_arrow::legacy::kernels::time"],[5300,"core::default"],[5301,"core::ffi::c_str"],[5302,"polars_arrow::scalar"],[5303,"std::io::error"],[5304,"simdutf8::basic"],[5305,"alloc::collections"],[5306,"regex::error"],[5307,"alloc::ffi::c_str"],[5308,"std::ffi::os_str"],[5309,"std::path"],[5310,"polars_arrow::legacy::array::default_arrays"],[5311,"polars_arrow::buffer::immutable"],[5312,"polars_arrow::array::list"],[5313,"polars_core::named_from"],[5314,"polars_arrow::legacy::array"],[5315,"polars_core::chunked_array::ops::aggregate"],[5316,"polars_core::chunked_array::ops::aggregate::quantile"],[5317,"polars_arrow::legacy::index"],[5318,"core::pin"],[5319,"core::io::borrowed_buf"],[5320,"std::io"],[5321,"polars_core::chunked_array::ops::aggregate::var"],[5322,"alloc::collections::btree::map"],[5323,"polars_arrow::legacy::array::list"],[5324,"polars_arrow::legacy::array::null"],[5325,"polars_arrow::bitmap::mutable"],[5326,"polars_arrow::array::utf8"],[5327,"polars_core::series::iterator"],[5328,"polars_arrow::legacy::utils"],[5329,"polars_arrow::legacy::trusted_len::rev"],[5330,"smartstring::config"],[5331,"smartstring"],[5332,"polars_error::constants"],[5333,"polars_arrow::legacy::prelude"],[5334,"polars_arrow::legacy::array::utf8"],[5335,"polars_core::utils::any_value"],[5336,"polars_core::utils::schema"],[5337,"polars_core::utils::supertype"],[5338,"polars_core::utils::series"]],"if":"`````````````{{}b}``0``````````````{{}d}``````````````{{{f{c}}h}b{}}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}{f{Aj}}}Adn}{{{f{{l{Al}}}}}d}{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{{l{j}}}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Bh{l{c}}}}{f{{l{c}}}}}b{{Bn{}{{Bj{Bl}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{An}{{C`{An}}}}Cd}}{{{f{{l{j}}}}c}{{l{j}}}{{Ch{Cf}{{C`{Ad}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{{l{Cj}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{Cl}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{An}{{C`{{An{e}}}}}}}Bn}{{{l{c}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}{f{Cb}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}}{{l{e}}}nBn}{{{f{{l{Cn}}}}c}{{l{Cn}}}{{Ch{{f{{Db{D`}}}}}{{C`{{f{{Db{D`}}}}}}}}}}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{Bh{l{c}}}}e}bn{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}Dfg}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Ch{{f{Bf}}{f{BhDh}}}}}}{{{f{{l{j}}}}{f{Cb}}}{{Af{Dj}}}}{{{f{{l{c}}}}g{f{Bh{Db{e}}}}}bn{}{{Cb{An{f{e}}}{{C`{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{c}}}}Dl}Dnn}{{{f{{l{c}}}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}n}{{{f{{l{c}}}}}{{Af{Dn}}}n}`{{{f{{l{Dd}}}}}Eb}{{{f{{l{c}}}}}{{f{{l{c}}}}}Bn}{{{f{{l{c}}}}}{{f{Df}}}Bn}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}BnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEd{}}00{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0``{{{f{{l{c}}}}e}{{l{g}}}n{{Cb{}{{C`{}}}}Cd}n}{{{f{{l{c}}}}{f{Df}}}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Df}}Ef}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Eh}{{{f{{l{c}}}}e}{{Af{Ad}}}EhAb}{{{f{{l{c}}}}}EjBn}{{{f{{l{c}}}}}{{f{{En{El}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{En{El}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Bn}0{{{f{c}}{f{Bhe}}}b{}{}}`{{{f{Bh{l{c}}}}}b{Bnn}}`{{{f{{l{c}}}}}{{Af{{f{Db}}}}}n}{{{f{Bh{l{c}}}}{f{{l{c}}}}F`}bBn}{{{f{Bh{l{c}}}}{f{{l{e}}}}F`}bBnBn}{{{f{{l{c}}}}}{{`{{Fb{}{{B`{{f{Db}}}}}}}}}n}{{}{{l{c}}}Bn}{Fd{{f{c}}}{}}0{Fd{{f{Bhc}}}{}}0{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{Fdb}{{{f{Bh{l{c}}}}}bBn}1{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Df}}}Bn}{{{f{{l{c}}}}}{{f{{Ff{c}}}}}Bn}{{{f{{l{c}}}}e}FhnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fhn}10{{{f{Bh{l{c}}}}{f{{l{c}}}}}bn}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Fh}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}}{{An{Fd}}}Bn}`{{{f{{l{Al}}}}{f{BhFj}}}Fl}{{{f{{l{c}}}}{f{BhFj}}}Fln}{{{f{{l{c}}}}e}bBn{{Ch{An}}}}{{{f{{l{j}}}}c}b{{Ch{{An{Cf}}}}}}{c{{l{e}}}Fn{{Bn{}{{G`{c}}}}}}{cc{}}0{{{f{Bf}}c}{{l{e}}}Gb{{Bn{}{{G`{}}}}Bn}}{{{f{{l{c}}}}e}{{l{c}}}{{Bn{}{{G`{}}}}Bn}Gb}{{{f{Bf}}{En{El}}}{{l{c}}}Bn}{{{f{Bf}}{En{El}}Df}{{l{c}}}Bn}{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{c{{l{e}}}{{Gb{}{{B`{An}}}}}n}{c{{l{e}}}{{Gb{}{{B`{{Gj{En{An{Gh}}}}}}}}}n}{c{{l{Al}}}{{Gb{}{{B`{{An{d}}}}}}}}{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{An}}}}}n}13{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{}}}}}n}`{c{{l{e}}}{{Gl{}{{B`{An}}}}}n}{{{f{Bf}}{f{Db}}}{{l{c}}}n}{{{f{Bf}}{f{{Db{An}}}}}{{l{c}}}n}{c{{l{e}}}{{Gn{}{{B`{An}}}}}n}{{{f{Bf}}En}{{l{c}}}n}{{{f{Bf}}En{An{Gh}}}{{l{c}}}n}{{{f{Bf}}Fd}{{l{c}}}n}0{{{f{{l{c}}}}Fd}{{l{c}}}Bn}{{{f{Bf}}Fd{f{Df}}}Dj}{{{f{{l{c}}}}Fd}AnBn}{{{f{{l{c}}}}Fd}{{Af{H`}}}n}{{{f{{l{c}}}}Fd}H`n}{{{f{{l{j}}}}Fd}{{An{Ad}}}}{{{f{{l{c}}}}}{{An{Hb}}}Bn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}HdBn}{{{f{{l{j}}}}}Ad}{{{f{{l{c}}}}}{{An{f}}}Bn}0{{{f{{l{{Hf{c}}}}}}Fd}{{An{{f{Hh}}}}}Hj}09{{{f{{l{c}}}}dd}{{Af{Aj}}}n}{{{f{{l{c}}}}FddFd}AjEd}{{{f{{l{c}}}}{f{{l{c}}}}}Fhn}{{{f{{l{c}}}}e}FhnAb}018{{{f{{l{c}}}}{An{Fd}}}{{l{c}}}Bn}{{}Fd}0{{FdHl{An{Hn}}}{{l{c}}}n}{{{f{{l{j}}}}}{{f{Df}}}}{ce{}{}}0{{{l{I`}}{An{Fd}}Fd}{{Af{Ib}}}}{{{l{I`}}{An{Fd}}Fd}Ib}{{{f{{l{c}}}}}en{}}{{{f{{l{c}}}}}{{`{IdIf{Ih{}{{B`{}}}}FbGn}}}n}{{{l{c}}}AdBn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}FhIj}000{{{f{{l{c}}}}}FhBn}02{{{f{{l{c}}}}}IlBn}{{{f{{l{c}}}}}{{`{{In{}{{B`{An}}}}}}}Bn}{{{f{{l{j}}}}}{{`{{Bd{}{{B`{J`}}}}}}}}{{{f{{l{c}}}}}{{Jf{{Jb{El}}{Jd{{f{El}}}{{C`{{An{{f{Gh}}}}}}}}}}}Bn}`{{{f{{l{c}}}}}AnBn}{{{f{{l{c}}}}}{{An{Fd}}}Bn}{{{f{{l{c}}}}}{{Jh{c}}}Bn}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}{{{f{{l{c}}}}}FdBn}{{{f{{l{c}}}}e}{{l{c}}}n{A`Jj}}00{{{f{{l{c}}}}Fd}{{l{c}}}Bn}{{{f{{l{c}}}}e}FhnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fhn}01{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{c}}}}}Ann}{{{f{{l{c}}}}}Jln}{{{f{{l{c}}}}}{{An{Jn}}}n}{{{f{{l{Al}}}}}{{An{Jn}}}}{{{f{{l{c}}}}}{{An{Jn}}}Ed}{{{f{{l{c}}}}}JlEd}{{{f{Bh{l{c}}}}{Ff{c}}}bBn}`{{{f{{l{c}}}}}{{An{{f{{Ff{c}}}}}}}Bn}{{{f{{l{c}}}}}{{An{{f{{K`{{Ff{c}}}}}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{K`{{Ff{c}}}}}}}Bn}{{{f{{l{c}}}}}{{K`{{Ff{c}}}}}Bn};:{{{f{{l{c}}}}}{{An{Gj}}}n}:{{{f{Bf}}{f{{Db{D`}}}}FdFd}{{l{Al}}}}{{{f{Bf}}{f{Db}}}{{l{c}}}n}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}{{Af{Fd}}}n}{{{f{{l{c}}}}}{{f{Bf}}}Bn}{{{f{Bf}}c}{{l{Cl}}}{{Kb{{Db{Hl}}}}}}{{{f{Bf}}c}{{l{Cn}}}{{Kb{{Db{{En{D`}}}}}}}}{{{f{Bf}}c}{{l{Dd}}}{{Kb{{Db{{An{Dh}}}}}}}}{{{f{Bf}}c}{{l{Kd}}}{{Kb{{Db{Kf}}}}}}{{{f{Bf}}{Kh{Hn}}}{{l{Kj}}}}{{{f{Bf}}c}{{l{Cn}}}{{Kb{{Db{{An{{En{D`}}}}}}}}}}{{{f{Bf}}{Kh{Kf}}}{{l{Kd}}}}{{{f{Bf}}c}{{l{Cl}}}{{Kb{{Db{{An{Hl}}}}}}}}{{{f{Bf}}c}{{l{Kj}}}{{Kb{{Db{Hn}}}}}}{{{f{Bf}}c}{{l{Kl}}}{{Kb{{Db{Kn}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Kb{{Db{{An{d}}}}}}}}{{{f{Bf}}c}{{l{L`}}}{{Kb{{Db{{An{J`}}}}}}}}{{{f{Bf}}c}{{l{L`}}}{{Kb{{Db{J`}}}}}}{{{f{Bf}}c}{{l{Kj}}}{{Kb{{Db{{An{Hn}}}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{Kb{{Db{{An{Jn}}}}}}}}{{{f{Bf}}c}{{l{Kl}}}{{Kb{{Db{{An{Kn}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Kb{{Db{d}}}}}}{{{f{Bf}}{Kh{J`}}}{{l{L`}}}}{{{f{Bf}}c}{{l{Cj}}}{{Kb{{Db{Jn}}}}}}{{{f{Bf}}c}{{l{Kd}}}{{Kb{{Db{{An{Kf}}}}}}}}{{{f{Bf}}c}{{l{Dd}}}{{Kb{{Db{Dh}}}}}}{{{f{Bf}}{Kh{Kn}}}{{l{Kl}}}}{{{f{Bf}}}{{l{{Hf{c}}}}}Hj}{{{f{{l{c}}}}FdFd}{{l{c}}}n}{{{f{Bf}}{En{c}}}{{l{{Hf{c}}}}}Hj}{{{f{Bf}}{En{c}}Gh}{{l{{Hf{c}}}}}Hj}{{{f{Bf}}En}{{l{c}}}n}{{{K`{Lb}}{En{El}}}{{l{c}}}Bn}{{{K`{Lb}}{En{El}}HbHb}{{l{c}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Ij}{{{f{{l{c}}}}{f{{l{c}}}}}Fhn}{{{f{{l{c}}}}e}FhnAb}10{{{f{{l{c}}}}}FdBn}``{{{f{{l{Dd}}}}}{{`{{Ld{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{{l{j}}}}}{{`{{Ld{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{Dd}}}}}{{`{{Lf{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{Bh{l{j}}}}}{{`{{Lf{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{c}}}}}Jln}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}JnLh}{{Af{{An{Jn}}}}}Ed}{{{f{{l{c}}}}JnLh}{{Af{Jl}}}Ed}{{{f{Bf}}FdJn}{{Af{{l{Al}}}}}}{{{f{Bf}}FdJnJn}{{Af{{l{c}}}}}n}{{{f{Bf}}Fd}{{l{c}}}n}{{{f{Bf}}FdJnJn}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Lb}}}Bn}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bh{l{c}}}}{f{Bf}}}bBn}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}Lj}{{Af{Ad}}}n}{{{f{{l{c}}}}Fde}{{Af{{l{c}}}}}Ij{{Ch{{f{Bh{l{c}}}}}{{C`{An}}}}}}{{{f{{l{c}}}}Jndd{An{Hn}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}Fddd{An{Hn}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}eAn}{{Af{{l{c}}}}}n{{Gb{}{{B`{Hb}}}}}}{{{f{{l{c}}}}eg}{{Af{{l{c}}}}}n{{Gb{}{{B`{Hb}}}}}{{Cb{An}{{C`{An}}}}}}{{{f{{l{c}}}}{f{Fh}}An}{{Af{{l{c}}}}}n}{{{f{Bh{l{j}}}}}b}{{{f{Bh{l{c}}}}d}bBn}{{{f{Bh{l{j}}}}Df}b}{{{f{Bh{l{c}}}}Hb}bBn}{{{f{Bh{l{c}}}}Il}bBn}{{{f{{l{c}}}}J`}{{l{c}}}n}{{{f{{l{c}}}}J`An}{{l{c}}}n}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}J`Fd}{{l{c}}}Bn}{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{c}}}}Dl}{{l{c}}}n}{{{f{{l{c}}}}D`}{{An{Jn}}}n}{{{f{{l{c}}}}D`}JlEd}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{Al}}}}}{{An{Hb}}}}{{{f{{l{c}}}}}Ann}{{{f{{l{c}}}}}Jln}{{{f{{l{c}}}}{An{Fd}}}{{l{c}}}Bn}{{{f{{l{c}}}}{f{e}}}{{Af{{l{c}}}}}Bn{{Kb{{Db{Hb}}}}Ll}}{{{f{{l{c}}}}{f{Dn}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}{f{Dn}}}{{l{c}}}{{Bn{}{{Ln{Bl}}}}Bn}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Bn{}{{Ln{Bl}}}}Bn}{{Kb{{Db{Hb}}}}Ll}}`{{{f{{l{c}}}}dM`}{{En{{En{Mb}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Ij}{{{f{{l{Dd}}}}Fd}{{Af{Ad}}}}{{{f{Bh{l{j}}}}Df}b}{{{f{{l{c}}}}}{{Af{Md}}}n}{{{f{{l{j}}}}}{{Af{Mf}}}}{{{f{c}}}e{}{}}{{{f{{l{Cn}}}}}Mh}{{{f{{l{c}}}}}{{En{An}}}n}{{{f{{l{c}}}}}{{Mj{En{En{An}}}}}n}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}{{{f{{l{j}}}}c}{{Af{{l{j}}}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{{l{j}}}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{{{f{{l{c}}}}i}{{Gd{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Gd{{An{e}}g}}}}}}Cd}Bn}{{{f{{l{c}}}}i}{{Gd{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gd{eg}}}}}}}Bn}{c{{Gd{e}}}{}{}}0{{{f{Bf}}g}{{Gd{{l{i}}e}}}Fn{}{{Gb{}{{B`{{Gd{ce}}}}}}}{{Bn{}{{G`{c}}}}Bn}}11{{{f{{l{j}}}}{f{{l{c}}}}e}{{Af{{l{j}}}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Ml{}}0{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}Fd}{}Bn}{{{f{{l{c}}}}D`}{{An{Jn}}}n}{{{f{{l{c}}}}D`}JlEd}{ce{}{}}0{{{f{Bf}}c}{{l{e}}}Fn{{Bn{}{{G`{c}}}}Bn}}{{{f{{l{e}}}}c}{{l{e}}}Fn{{Bn{}{{G`{c}}}}Bn}}{{{f{{l{c}}}}{En{El}}}{{l{c}}}Bn}{{{l{c}}{f{Bf}}}{{l{c}}}Bn}{{{f{{Db{Mn}}}}e}c{}{{N`{{f{Dn}}}{{C`{c}}}}}}{{{f{{l{c}}}}Il}{{l{c}}}Bn}{{{f{{l{c}}}}}en{}}{{{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}2310{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}543201452367543210543201{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Bn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{Fh}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}````{{{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}}e{}{}{}}{{{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}c}e{}{}{}}{{c{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}}e{}{}{}}{{{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}}g{}{}{}}{{{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}c}g{}{}{}}{{c{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}}g{}{}{}}{{{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}}e{}{}{}}65654654650654654````````{{{f{c}}h}b{}}000{{{f{BhNj}}}b}{{{f{Bh{Nl{c}}}}}b{NnLl}}{{{f{BhO`}}}b}{{{f{BhOb}}}b}{{{f{Bh{Od{c}}}}}bn}{{{f{Bh{Nl{c}}}}{An{e}}}b{NnLl}{{Kb{c}}}}{{{f{BhNj}}{An{c}}}b{}}{{{f{BhNj}}c}b{}}{{{f{Bh{Nl{c}}}}e}b{NnLl}{{Kb{c}}}}{{{f{BhO`}}d}b}5{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{{Nl{c}}}}}{{Nl{c}}}{NnLl}}{{{f{O`}}}O`}{{{f{Ob}}}Ob}{{{f{{Od{c}}}}}{{Od{c}}}{nOf}}{{{f{c}}{f{Bhe}}}b{}{}}000{Fd{{f{c}}}{}}000{Fd{{f{Bhc}}}{}}000{Fdb}000{Nj{{l{c}}}Bn}{{{Nl{{Db{D`}}}}}Eb}{{{Nl{Bf}}}Mh}{OhMh}{OjEb}{O`Fh}`{{{Od{c}}}{{l{c}}}n}{cc{}}000{{{f{Bf}}e}Ol{}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}Ol{}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}{f{{Db{c}}}}}Ol{}}{{{f{Bf}}{f{{Db{{An{c}}}}}}}Ol{}}{{}Fd}000{ce{}{}}000`{{{f{Bf}}Fd}{{Nl{c}}}{NnLl}}{{{f{Bf}}Fd}O`}{{{f{Bf}}Fd}Ob}{{{f{Bf}}Fd}{{Od{c}}}n}{{{f{BhNj}}}b}{{{f{BhO`}}}b}{{{f{BhOb}}}b}{{{f{Bh{Od{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{Gd{e}}}{}{}}0000000{{{f{c}}}Ml{}}000;;;;````````{{{f{BhOn}}{f{Fn}}}b}{{{f{BhOn}}}b}{{{f{BhA@`}}}b}{{{f{BhA@b}}c}b{{Bd{}{{B`{{An{d}}}}}}Gn}}{{{f{Bh{A@d{c}}}}e}bn{{Bd{}{{B`{An}}}}Gn}}{{{f{Bh{A@d{c}}}}e}bn{{Bd{}{{B`{}}}}Gn}}{{{f{BhA@f}}}b}54{{{f{BhA@h}}}b}{{{f{BhA@j}}}b}{{{f{BhA@b}}}b}{{{f{BhA@l}}}b}{{{f{Bh{A@d{c}}}}}bn}{{{f{BhOn}}{An{{f{Fn}}}}}b}{{{f{BhOn}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{BhA@f}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{Bh{A@d{c}}}}{An{{f{Db}}}}}bn}{{{f{BhA@f}}{f{Ad}}}{{Af{b}}}}{{{f{BhOn}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@`}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@h}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@j}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@b}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@l}}{f{Ad}}}{{Af{b}}}}{{{f{Bh{A@d{c}}}}{f{Ad}}}{{Af{b}}}n}{{{f{Bh{A@d{c}}}}{f{Db}}}bn}{{{f{BhA@h}}c}b{{Bd{}{{B`{{An{{f{Bf}}}}}}}}Gn}}{{{f{BhA@j}}c}b{{Bd{}{{B`{{An{{f{{Db{D`}}}}}}}}}}Gn}}{{{f{BhA@h}}c}b{{Bd{}{{B`{{f{Bf}}}}}}}}{{{f{BhA@j}}c}b{{Bd{}{{B`{{f{{Db{D`}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000`{{}On}{{}A@`}{Fd{{f{c}}}{}}000000{Fd{{f{Bhc}}}{}}000000{Fdb}000000{{{f{A@h}}}d}{{{f{A@j}}}d}{{{f{A@b}}}d}{{{f{{A@d{c}}}}}dn}{{{f{A@f}}}d}{{{f{A@h}}}{{f{Lb}}}}{{{f{A@j}}}{{f{Lb}}}}{{{f{A@b}}}{{f{Lb}}}}{{{f{{A@d{c}}}}}{{f{Lb}}}n}{{{f{A@f}}}{{f{Lb}}}}{{{f{BhOn}}}Dj}{{{f{BhA@`}}}Dj}{{{f{BhA@l}}}Dj}{{{f{BhA@f}}}Dj}{cc{}}000000{{{f{Df}}FdFd{f{Bf}}}{{Af{{A@n{A@f}}}}}}{{}Fd}000000{{{f{BhA@h}}}El}{{{f{BhA@j}}}El}{{{f{BhA@b}}}El}{{{f{Bh{A@d{c}}}}}Eln}{{{f{BhA@f}}}El}{ce{}{}}000000{{{f{Bf}}Fd{An{Df}}}On}{{{f{Bf}}Fd{An{Df}}}A@`}{{{f{Bf}}FdFd}A@h}{{{f{Bf}}FdFd}A@j}{{{f{Bf}}FdFd}A@b}{{{f{Bf}}Fd}A@l}{{{f{Bf}}FdFdDf}{{A@d{c}}}n}{{{f{Bf}}FdFdDfDf}{{A@d{c}}}n}{c{{Gd{e}}}{}{}}0000000000000{{{f{c}}}Ml{}}000000:::::::````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Ef}}}Ef}{{{f{c}}{f{Bhe}}}b{}{}}{{}Ef}{Fd{{f{c}}}{}}{Fd{{f{Bhc}}}{}}{Fdb}{{{f{Ef}}{f{Ef}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{Ef}}{f{BhFj}}}Fl}{cc{}}{{{f{Ef}}{f{Bhc}}}bAA`}{{}Fd}{ce{}{}}{{{f{Ef}}}d}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}4``{{AAb{f{Bf}}}{{l{c}}}Bn}{{AAd{f{{l{c}}}}}{{l{c}}}Bn}10{{AAd{f{Bf}}Df}{{l{c}}}Bn}0{{AAb{f{Bf}}}{{Gd{{l{c}}e}}}Bn{}}{{AAd{f{{l{c}}}}}{{Gd{{l{c}}e}}}Bn{}}10{{AAd{f{Bf}}Df}{{Gd{{l{c}}e}}}Bn{}}0`{AAfAAf}``{{AAh{f{Bf}}Df}e{}{{AAj{c}}}}{{e{f{Bf}}Df}AAj{}{{Gl{}{{B`{c}}}}}}```{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{Fd{{f{c}}}{}}0{Fd{{f{Bhc}}}{}}0{Fdb}0{cc{}}0{{}Fd}0{ce{}{}}000{{{f{AAl}}}AAn}{{{f{BhAAn}}}{{An{c}}}{}}{{{f{Bh{AB`{c}}}}}{{An{e}}}Bd{}}1{{{f{Bh{AB`{c}}}}}{{An{e}}}Fb{}}`{{{f{AAn}}}{{Gj{Fd{An{Fd}}}}}}{{{f{{AB`{c}}}}}{{Gj{Fd{An{Fd}}}}}Bd}{c{{Gd{e}}}{}{}}000{{{f{c}}}Ml{}}088```````````````````````{{{f{c}}h}b{}}000{{}F`}{{}Hd}{{F`F`}F`}{{HdHd}Hd}{{{f{BhF`}}F`}b}{{{f{BhHd}}Hd}b}3210{{{f{F`}}}Kn}0{{{f{Hd}}}D`}05432{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000{{{f{{Ff{c}}}}}{{Ff{c}}}Bn}{{{f{ABb}}}ABb}{{{f{F`}}}F`}{{{f{Hd}}}Hd}{{{f{c}}{f{Bhe}}}b{}{}}000{{{f{BhABd}}}b}{F`F`}{HdHd}{{{f{F`}}F`}d}{{{f{Hd}}Hd}d}{{}{{Ff{c}}}Bn}{{}F`}{{}Hd}{Fd{{f{c}}}{}}0000{Fd{{f{Bhc}}}{}}0000{{F`F`}F`}{{HdHd}Hd}{{}d}{{{Ff{c}}Hb}{{Ff{c}}}Bn}{{{Ff{c}}{An{Hb}}}{{Ff{c}}}Bn}{Fdb}0000983{{{f{F`}}{f{F`}}}d}{{{f{Hd}}{f{Hd}}}d}{{{f{BhF`}}c}b{{Gb{}{{B`{F`}}}}}}{{{f{BhHd}}c}b{{Gb{}{{B`{Hd}}}}}}7{{{Ff{c}}d}{{Ff{c}}}Bn}{{{Ff{c}}{An{d}}}{{Ff{c}}}Bn}{{{f{{Ff{c}}}}F`}{{Ff{c}}}Bn}{{{f{{Ff{c}}}}F`}{{Ff{e}}}BnBn}{{{Ff{c}}Hd}{{Ff{c}}}Bn}{{{Ff{c}}{An{Hd}}}{{Ff{c}}}Bn}{{{f{{Ff{c}}}}{f{BhFj}}}FlBn}{{{f{ABb}}{f{BhFj}}}Fl}{{{f{F`}}{f{BhFj}}}Fl}0000{{{f{Hd}}{f{BhFj}}}Fl}0000{cc{}}0000{Kn{{An{F`}}}}{D`{{An{Hd}}}}{KnF`}0{D`Hd}010{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}0{cF`{{Gb{}{{B`{F`}}}}}}{cHd{{Gb{}{{B`{Hd}}}}}}{{{f{Bf}}}{{An{F`}}}}{{{f{Bf}}}{{An{Hd}}}}{{{f{{Ff{c}}}}}{{An{Hb}}}Bn}{{{f{{Ff{c}}}}}dBn}{{{f{Hd}}}d}{{{f{{Ff{c}}}}}HdBn}{{{f{{Ff{c}}}}}{{An{f}}}Bn}0{{{f{Hd}}}Il}{{}Fd}0000{{{f{BhF`}}F`}b}{{{f{BhHd}}Hd}b}{{F`F`}F`}{{HdHd}Hd}{{{f{F`}}F`}d}{{{f{Hd}}Hd}d}{ce{}{}}0000{F`c{}}{Hdc{}}{{{f{F`}}}d}>?0>{{{f{{Ff{c}}}}}IlBn}{{{f{{Ff{c}}}}}dBn}0{{{f{F`}}}{{ABf{F`}}}}{{{f{Hd}}}{{ABf{Hd}}}}{{{f{F`}}}{{ABh{F`}}}}{{{f{Hd}}}{{ABh{Hd}}}}{{}d}{{}{{f{{ABl{ABj}}}}}}{{{Ff{c}}}{{Ff{c}}}Bn}{{{Ff{c}}An}{{Ff{c}}}Bn}{{{f{{Ff{c}}}}{Ff{c}}}{{ABn{c}}}Bn}21{F`F`}{HdHd}{{{f{BhF`}}F`}b}{{{f{BhHd}}Hd}b}{{{f{BhF`}}F`d}b}{{{f{BhHd}}Hdd}b}{{{f{Bh{Ff{c}}}}{An{Hb}}}bBn}{{{f{Bh{Ff{c}}}}d}bBn}{{{f{BhHd}}d}b}{{{f{Bh{Ff{c}}}}Hd}bBn}{{{f{Bh{Ff{c}}}}An}bBn}033{{{f{Bh{Ff{c}}}}Il}bBn}{{{f{BhHd}}Il}b}{{{Ff{c}}Il}{{Ff{c}}}Bn}{{{Ff{c}}{An{Il}}}{{Ff{c}}}Bn}{{F`F`}F`}{{HdHd}Hd}>=10{{{f{c}}}e{}{}}000?>{c{{Gd{e}}}{}{}}000000000{{{f{c}}}Ml{}}000043{ce{}{}}0000{ABdABd}````{{{f{c}}h}b{}}{{{f{{AC`{c}}}}Fd}{{Gj{{AC`{c}}{AC`{c}}}}}Hj}{e{{AC`{c}}}Hj{{Gb{}{{B`{{An{{f{c}}}}}}}}}}{e{{AC`{c}}}Hj{{Gb{}{{B`{{f{c}}}}}}}}{{ACbe}g{}{{Gb{}{{B`{c}}}}}{}}0{{{f{Hh}}}{{f{ACd}}}}{{{f{{AC`{c}}}}}{{f{ACd}}}Hj}{{{f{Bh{AC`{c}}}}}{{f{BhACd}}}Hj}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`{{{f{{AC`{c}}}}Fd}dHj}{{{f{{AC`{c}}}}}{{AC`{c}}}{HjOf}}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{{AC`{c}}}}}{{f{ACb}}}Hj}{Fd{{f{c}}}{}}{Fd{{f{Bhc}}}{}}{Fdb}{{{f{{f{Hh}}}}{f{{f{Hh}}}}}d}{{{f{Hh}}{f{Hh}}}d}{{{f{{AC`{c}}}}{f{BhFj}}}Fl{HjACf}}{cc{}}{{FdACb}{{AC`{c}}}Hj}{{{f{{AC`{c}}}}Fd}{{An{{f{c}}}}}Hj}{{}ACb}{{{f{Gh}}{f{{AC`{c}}}}{f{{AC`{c}}}}}{{AC`{c}}}Hj}{{ACb{f{Gh}}cc}{{AC`{e}}}{}Hj}{{{f{Gh}}{f{{AC`{c}}}}e}{{AC`{c}}}Hj{}}{{{f{Gh}}c{f{{AC`{e}}}}}{{AC`{e}}}{}Hj}{{}Fd}{ce{}{}}{{{f{{AC`{c}}}}}eHj{}}{{{f{{AC`{c}}}}Fd}dHj}{{{f{c}}Fd}d{}}1{{{f{{AC`{c}}}}}{{ACl{{f{c}}{ACh{c}}ACj}}}Hj}{{{f{{AC`{c}}}}}{{ACl{egACj}}}Hj{}{}}{{{f{{AC`{c}}}}}FdHj}0`{{{f{Bh{AC`{c}}}}{An{Gh}}}bHj}{{{f{Bh{AC`{c}}}}FdFd}bHj}{{{f{c}}FdFd}e{}{}}01{{{f{{AC`{c}}}}Fd}{{Gj{{A@n{Fn}}{A@n{Fn}}}}}Hj}0{{{f{Hh}}}{{A@n{Hh}}}}{{{f{{AC`{c}}}}}{{A@n{Fn}}}Hj}{{{f{c}}}e{}{}}{g{{Gd{{AC`{c}}e}}}Hj{}{{Gb{}{{B`{{Gd{{f{c}}e}}}}}}}}{g{{Gd{{AC`{c}}e}}}Hj{}{{Gb{}{{B`{{Gd{{An{{f{c}}}}e}}}}}}}}{{ACbg}{{Gd{ie}}}{}{}{{Gb{}{{B`{{Gd{ce}}}}}}}{}}0{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}{{{f{Hh}}}{{f{Bf}}}}{{}{{f{Bf}}}}{{{f{{AC`{c}}}}}{{An{{f{Gh}}}}}Hj}{{{f{{AC`{c}}}}Fd}{{f{c}}}Hj}0{{{f{{AC`{c}}}}Fd}eHj{}}{{{f{{AC`{c}}}}}{{f{{K`{{En{c}}}}}}}Hj}{{{f{{AC`{c}}}}}{{ACh{c}}}Hj}{{{f{{AC`{c}}}}}eHj{}}{ce{}{}}{{{f{{AC`{c}}}}{An{Gh}}}{{A@n{Fn}}}Hj}{{{AC`{c}}{An{Gh}}}{{AC`{c}}}Hj}0`{{{f{Bh{ACn{c}}}}}bHj}0{{{f{Bh{ACn{c}}}}{An{c}}}bHj}{{{f{Bh{ACn{c}}}}{f{ACd}}}bHj}{{{f{Bh{ACn{c}}}}c}bHj}{{{f{Bh{ACn{c}}}}{f{ACd}}}{{Af{b}}}Hj}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}{{ACn{c}}}Hj}{Fd{{f{c}}}{}}{Fd{{f{Bhc}}}{}}{Fdb}{{{ACn{c}}}{{AD`{c}}}Hj}{cc{}}{{}Fd}{ce{}{}}{{{f{Bf}}Fd}{{ACn{c}}}Hj}{{{f{Bh{ACn{c}}}}}AdHj}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}4````{{{f{BhADb}}}b}{{{f{BhADb}}{An{{f{ACd}}}}}b}{{{f{BhADb}}{f{ACd}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`?>={{{f{ADd}}{f{BhFj}}}Fl}<{{{f{Bf}}Fd}{{A@n{ADb}}}}{{}ADf}{{}ACb}>={{}d}`{{ADhADfACb}b}{{{f{BhADb}}}Ad}==<{ce{}{}}``````````````````````````````````````````{{{f{c}}h}b{}}{{{f{{ADl{}{{ADj{c}}}}}}g}{{ADl{}{{ADj{c}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{c}}}}}}Cd}}{{{f{ADn}}{f{Cb}}}ADn}{{{f{ADn}}{f{Cb}}}{{l{c}}}Bn}{{{f{{ADl{}{{ADj{c}}}}}}i{f{Bh{Db{g}}}}}b{}{}{}{{Cb{{An{e}}{f{g}}}{{C`{g}}}}}}{{{f{{ADl{}{{ADj{c}}}}}}g}{{ADl{}{{ADj{c}}}}}{}{}{{Cb{e}{{C`{c}}}}Cd}}{{{f{AE`}}Dl}Dn}{{{f{AE`}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{AEb}}}{{Af{Dn}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AEd}}{f{Df}}}{{Af{Ad}}}}0{{{f{AEd}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{AEf}}}AEf}{{{f{c}}{f{Bhe}}}b{}{}}{Fd{{f{c}}}{}}{Fd{{f{Bhc}}}{}}{Fdb}{{{f{AEf}}{f{AEf}}}d}{{{f{{AEh{}{{B`{c}}}}}}e}c{}{}}0{{{f{AEj}}}{{Af{Ad}}}}{{{f{AEj}}}{{Af{{Gj{Ad{AEl{J`}}}}}}}}`{{{f{AEn}}c}{{Af{AEn}}}{}}{{{f{AF`}}{f{Fh}}}{{Af{{l{c}}}}}Bn}`{{{f{AEf}}{f{BhFj}}}Fl}{cc{}}`{{{f{Bf}}cFd}AFb{}}{{{f{Bf}}Fd}AFd}`{{{f{AFf}}Fd}{{Af{H`}}}}{{{f{AFf}}Fd}H`}::{{{f{AEf}}{f{Bhc}}}bAA`}{{}Fd}{ce{}{}}{{{f{AFh}}}{{Af{Fh}}}}{{{f{AFj}}}{{Af{Fh}}}}??{{{f{AFl}}}{{An{c}}}{}}{{{f{AFl}}}{{An{Jn}}}}{{{f{AFn}}}{{An{c}}}{}}2{{{f{AFl}}}{{An{{Gj{cc}}}}}{}}{{{f{AEb}}}{{Af{Fd}}}}{{{f{AG`}}FdFd}{{l{c}}}Bn}{{{f{{AEh{}{{B`{c}}}}}}e}c{}{}}0{{{f{AEj}}}{{Af{{AEl{J`}}}}}}{{{f{AFn}}JnLh}{{Af{{An{c}}}}}{}}{{{f{AGb}}}AGb}{{{f{AGd}}{f{Cb}}Lj}{{Af{Ad}}}}{{{f{AGf}}c{An{e}}}{{Af{AGf}}}{{Gb{}{{B`{Hb}}}}}{}}{{{f{AGf}}ci}{{Af{AGf}}}{{Gb{}{{B`{Hb}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{g}}}}}}}}`{{{f{AGf}}{f{Fh}}{An{c}}}{{Af{AGf}}}{}}{{{f{AGh}}J`}{{l{c}}}Bn}{{{f{AGj}}J`c}{{l{e}}}{}Bn}`{{{f{AE`}}d}{{l{c}}}Bn}{{{f{AE`}}Dl}{{l{c}}}Bn}{{{f{AGl}}D`}{{An{Jn}}}}{{{f{AFl}}}{{An{c}}}{}}{{{f{AGn}}{f{c}}}{{Af{AGn}}}Ll}{{{f{AH`}}{f{c}}}AH`Ll}{{{f{AHb}}}{{En{{f{{Db{D`}}}}}}}}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}{{{f{AEb}}}{{Af{AEb}}}}8{ce{}{}}`{{{f{AHd}}{f{Fh}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}BnBn{{Cb{ff}{{C`{}}}}}{{Cb{f}{{C`{}}}}}{{Cb{f}{{C`{}}}}}Bn}{{{l{c}}{l{e}}gik}{{l{m}}}BnBn{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBnFn{{Ch{ff}{{C`{g}}}}}{{Bn{}{{G`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}BnBn{{AHf{AnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}g}bBnBn{{Ch{AnAn}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBn{}{{Ch{}{{C`{g}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBn{FnAHh}{{Ch{ff}{{C`{g}}}}}{{Bn{}{{G`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBnFn{{Ch{ff}{{C`{g}}}}}{{Bn{}{{G`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}BnBnFn{{Ch{}{{C`{g}}}}}{{Bn{}{{G`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Af{Ad}}}BnBn{{Ch{ff}{{C`{{A@n{Fn}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}BnBn{{Ch{ff}{{C`{{A@n{Fn}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gd{{l{m}}i}}}BnBn{}{}{{Ch{AnAn}{{C`{{Gd{{An{g}}i}}}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}BnBnBn{{AHj{AnAnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gd{{l{m}}i}}}BnBnFnAHl{{Ch{ff}{{C`{{Gd{gi}}}}}}}{{Bn{}{{G`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bf}}}{{Gd{{l{m}}i}}}BnBnFnAHl{{Ch{ff}{{C`{{Gd{gi}}}}}}}{{Bn{}{{G`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Gd{{l{c}}g}}}BnBnAHl{{Ch{ff}{{C`{{Gd{{A@n{Fn}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Gd{{l{o}}k}}}BnBnBn{}{}{{Ch{AnAnAn}{{C`{{Gd{{An{i}}k}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gd{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Gd{{An{e}}g}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gd{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gd{eg}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gd{{l{k}}g}}}Bn{FnAHh}AHl{{Ch{f}{{C`{{Gd{eg}}}}}}}{{Bn{}{{G`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Bn{{AHn{An}}}Bn}{{{f{{l{c}}}}e}{{l{g}}}BnAHnBn}{{{f{{l{c}}}}g}{{l{i}}}BnFn{{Ch{f}{{C`{e}}}}}{{Bn{}{{G`{e}}}}}}{{{l{c}}g}{{l{i}}}BnFn{{Ch{}{{C`{e}}}}}{{Bn{}{{G`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{FnAHh}{{Ch{f}{{C`{e}}}}}{{Bn{}{{G`{e}}}}}}0{{{f{{l{c}}}}}Fdn}0{{IlIl}Il}{{{f{Dn}}Hb}{{Af{b}}}}{{{f{{AI`{Hb}}}}Hb}{{Af{b}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAIbd}{{En{Hb}}}Bn{{Bd{}{{B`{An}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AIb}}}AIb}{{{f{c}}{f{Bhe}}}b{}{}}{{}AIb}{Fd{{f{c}}}{}}{Fd{{f{Bhc}}}{}}{Fdb}{{{f{AIb}}{f{AIb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AIb}}{f{BhFj}}}Fl}{cc{}}{{{f{AIb}}{f{Bhc}}}bAA`}{{}Fd}{ce{}{}}{{{f{{Db{f}}}}cHbe}{{En{Hb}}}{{Bd{}{{B`{An}}}}}{{Cb{fFdf}{{C`{d}}}}}}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}4`{{Fd{f{Bh{En{d}}}}}b}```{{{f{AId}}FdFd}AId}0{{Fd{f{{Db{Ad}}}}{f{BhE`}}}{{Af{{AIf{Dn}}}}}}{{{f{{Db{Ad}}}}{f{{Db{d}}}}{f{{Db{d}}}}}{{Af{AIh}}}}{{{f{Bf}}{f{{Db{Ad}}}}{f{{Db{d}}}}{f{{Db{d}}}}}{{Af{AIj}}}}{{{f{Bf}}{f{{Db{Ad}}}}}{{Af{AIj}}}}{{{f{Ad}}}{{Af{El}}}}{{{f{{Db{Ad}}}}}{{Af{AIh}}}}{{{f{{Db{Ad}}}}}{{Af{AIj}}}}0```{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{{f{Dl}}}Dl}{{{f{E`}}}E`}{{{f{c}}{f{Bhe}}}b{}{}}0{{}Dl}{{}E`}{Fd{{f{c}}}{}}0{Fd{{f{Bhc}}}{}}0``{Fdb}0{{{f{Dl}}{f{Dl}}}d}{{{f{E`}}{f{E`}}}d}{{{f{c}}{f{e}}}d{}{}}00000{{{f{Dl}}{f{BhFj}}}Fl}{{{f{E`}}{f{BhFj}}}Fl}{cc{}}{{{f{E`}}}Dl}{{{f{Dl}}}E`}2{{{f{Dl}}{f{Bhc}}}bAA`}{{{f{E`}}{f{Bhc}}}bAA`}{{}Fd}0{ce{}{}}0````{{}Dl}{{}E`}``{{{f{AId}}FdFd}AId}0{{{f{c}}}e{}{}}0{c{{Gd{e}}}{}{}}000{{{f{c}}}Ml{}}066{{Dld}Dl}{{E`d}E`}1010{{E`c}E`{{Gb{}{{B`{d}}}}}}210{DlDl}{E`E`}`{AIlJ`}00{{}d}>>0`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000{{{f{Dj}}}d}{{{f{Ib}}{f{Ib}}}c{}}{{{f{Fh}}{f{Fh}}}c{}}{{FhFh}c{}}{{{f{Mh}}{f{Bf}}}c{}}{{MhMh}c{}}{{{f{Mh}}{f{Mh}}}c{}}{{EbEb}c{}}{{{f{Eb}}{f{{Db{D`}}}}}c{}}{{{f{Eb}}{f{Eb}}}c{}}{{{f{H`}}{f{H`}}}H`}{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAIn}}}{}}000000{{{f{Mh}}{f{Ad}}}{{Af{Ad}}}}{{{f{Eb}}{f{Ad}}}{{Af{Ad}}}}{{{f{Fh}}{f{Ad}}}{{Af{Ad}}}}{{{f{Dj}}{f{Aj}}}Ad}{{{f{Fh}}{f{Aj}}}Ad}{{{f{Mh}}{f{Aj}}}Ad}{{{f{Eb}}{f{Aj}}}Ad}{{{f{{AD`{c}}}}{f{Aj}}}AdHj}{{{f{Fh}}}d}{{{f{Fh}}}{{An{d}}}}{{{f{Dj}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{Dj}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Dj}}c}Dj{{Cb{{An{Ad}}}{{C`{{An{Ad}}}}}}Cd}}{{{f{Fh}}c}Fh{{Cb{{An{d}}}{{C`{{An{d}}}}}}Cd}}{{{f{Mh}}c}Mh{{Cb{{An{{f{Bf}}}}}{{C`{{An{{AJ`{Bf}}}}}}}}Cd}}{{{f{Eb}}c}Eb{{Cb{{An{{f{{Db{D`}}}}}}}{{C`{{An{{AJ`{{Db{D`}}}}}}}}}}Cd}}{{{f{{AD`{c}}}}e}{{AD`{c}}}Hj{{Cb{{An{{f{c}}}}}{{C`{{An{c}}}}}}Cd}}{{{f{Dj}}c}Dj{{Ch{Cf}{{C`{Ad}}}}}}{{{f{Dj}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{AJb}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{AJd}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{Fh}}{f{Cb}}}Fh}{{{f{Mh}}{f{Cb}}}Mh}{{{f{Eb}}{f{Cb}}}Eb}{{{f{Fh}}{f{Cb}}}{{l{c}}}Bn}{{{f{Mh}}{f{Cb}}}{{l{c}}}Bn}{{{f{Eb}}{f{Cb}}}{{l{c}}}Bn}{{{f{Mh}}c}Mh{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{Eb}}c}Eb{{Ch{{f{{Db{D`}}}}}{{C`{{f{{Db{D`}}}}}}}}}}{{{f{Mh}}c}Mh{{Ch{{f{Bf}}{f{BhDh}}}}}}{{{f{Dj}}{f{Cb}}}{{Af{Dj}}}}{{{f{Dj}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{Ad}}{f{c}}}{{C`{c}}}}}}{{{f{Fh}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{d}}{f{c}}}{{C`{c}}}}}}{{{f{Mh}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{{f{Bf}}}}{f{c}}}{{C`{c}}}}}}{{{f{Eb}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{{f{{Db{D`}}}}}}{f{c}}}{{C`{c}}}}}}{{{f{{AD`{c}}}}g{f{Bh{Db{e}}}}}bHj{}{{Cb{{An{{f{c}}}}{f{e}}}{{C`{e}}}}}}{{{f{Dj}}c}Dj{{Cb{Ad}{{C`{Ad}}}}Cd}}{{{f{Fh}}c}Fh{{Cb{d}{{C`{d}}}}Cd}}{{{f{Mh}}c}Mh{{Cb{{f{Bf}}}{{C`{{AJ`{Bf}}}}}}Cd}}{{{f{Eb}}c}Eb{{Cb{{f{{Db{D`}}}}}{{C`{{AJ`{{Db{D`}}}}}}}}Cd}}{{{f{{AD`{c}}}}e}{{AD`{c}}}Hj{{Cb{{f{c}}}{{C`{c}}}}Cd}}{{{f{Fh}}Dl}Dn}{{{f{Mh}}Dl}Dn}{{{f{Eb}}Dl}Dn}{{{f{AIj}}Dl}Dn}{{{f{Fh}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Mh}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Eb}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{AIj}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Fh}}}{{Af{Dn}}}}{{{f{Mh}}}{{Af{Dn}}}}{{{f{Eb}}}{{Af{Dn}}}}{{{f{{AD`{c}}}}}{{Af{Dn}}}Hj}{eAJf{}{{Gb{}{{B`{c}}}}}}0{{ACbe}AJh{}{{Gb{}{{B`{c}}}}}}0{{{f{Jl}}}H`}{{{f{Mh}}}Eb}{{{f{H`}}}H`}{{{f{Df}}}{{f{Df}}}}{{{f{Lb}}}{{f{Df}}}}{{{f{AJj}}}{{f{Df}}}}{{{f{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}}}{{An{{f{{Db{c}}}}}}}Of{AKb{AKd{c}}}{{Fb{}{{B`{c}}}}GnIdIf}}{{{f{Dj}}{f{{l{c}}}}{f{{l{e}}}}g}DjBnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{{f{Fh}}{f{Fh}}}c{}}{{FhFh}c{}}1001{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000000000000000000000000000000{Df{{A@n{Df}}}}{{{f{AKf}}{f{AKf}}c}{{Af{AKf}}}AKh}{{{f{AKj}}{f{Df}}}{{Af{Ad}}}}0{{{f{H`}}{f{Df}}}H`}{{{f{Df}}Df}Df}{{{f{Dj}}{f{Df}}}{{Af{Ad}}}}{{{f{Fh}}{f{Df}}}{{Af{Ad}}}}{{{f{Mh}}{f{Df}}}{{Af{Ad}}}}{{{f{Eb}}{f{Df}}}{{Af{Ad}}}}{{{f{AIj}}{f{Df}}}{{Af{Ad}}}}{{{f{AKj}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ib}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Dj}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Fh}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Mh}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Eb}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{AIj}}{f{Df}}Ef}{{Af{Ad}}}}`{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAIn}}}{}}0000{{{f{AJb}}{f{Ad}}}{{Af{Ad}}}}{{{f{AJd}}{f{Ad}}}{{Af{Ad}}}}{{{f{{AKl{ce}}}}}{{AKl{ce}}}BnBn}{{{f{Jl}}}Jl}{{{f{AKn}}}AKn}{{{f{H`}}}H`}{{{f{AL`}}}AL`}{{{f{Df}}}Df}{{{f{Lb}}}Lb}{{{f{ALb}}}ALb}{{{f{ALd}}}ALd}{{{f{ALf}}}ALf}{{{f{Kl}}}Kl}{{{f{Kj}}}Kj}{{{f{ALh}}}ALh}{{{f{ALj}}}ALj}{{{f{Kd}}}Kd}{{{f{L`}}}L`}{{{f{Cl}}}Cl}{{{f{Cj}}}Cj}{{{f{ALl}}}ALl}{{{f{ALn}}}ALn}{{{f{Dd}}}Dd}{{{f{Cn}}}Cn}{{{f{AM`}}}AM`}{{{f{Al}}}Al}{{{f{AMb}}}AMb}{{{f{AMd}}}AMd}{{{f{AMf}}}AMf}{{{f{AMh}}}AMh}{{{f{ACb}}}ACb}{{{f{AMj}}}AMj}{{{f{c}}{f{Bhe}}}b{}{}}00000000000000000000000000000{{{f{BhLb}}Df}b}{AMle{}{{AJf{c}}AHh}}0{{AMlACb}e{}{{AJh{c}}AHh}}0{{{f{Df}}}d}00{AMnDf}{{{f{Lb}}}{{f{Df}}}}{{}H`}{{}AL`}{{}Df}{{}ACb}{{{f{{AKl{ce}}}}}{{f{g}}}BnBn{}}{Fd{{f{c}}}{}}0000000000000000000000000000000000{Fd{{f{Bhc}}}{}}{{{f{Bh{AKl{ce}}}}}{{f{Bhg}}}BnBn{}}1111111111111111111111111111111111{{{f{Ib}}{f{Ib}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAIn}}}{}}000000{Fdb}0000000000000000000000000000000000{{{f{AKj}}}{{f{Df}}}}{{{f{Ib}}}{{f{Df}}}}{{{f{Jl}}}{{f{Df}}}}{{{f{H`}}}Df}`{{{f{H`}}{f{H`}}}d}{{{f{AL`}}{f{AL`}}}d}{{{f{Df}}{f{ACb}}}d}{{{f{Df}}{f{Df}}}d}{{{f{Lb}}{f{Lb}}}d}{{{f{ALb}}{f{ALb}}}d}{{{f{ACb}}{f{ACb}}}d}{{{f{AMj}}{f{AMj}}}d}{{{f{H`}}{f{H`}}d}d}{{{f{Dj}}{f{Dj}}}Fh}{{{f{Fh}}{f{Fh}}}Fh}{{{f{Mh}}{f{Bf}}}Fh}{{{f{Mh}}{f{Mh}}}Fh}{{{f{Eb}}{f{Eb}}}Fh}{{{f{Eb}}{f{{Db{D`}}}}}Fh}542310{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{Dj}}}{{Af{{Gj{Ad{AEl{J`}}}}}}}}{{{f{{AKl{ce}}}}}LbBnBn}{{{f{Fh}}d}{{Af{Fh}}}}{{{f{Eb}}{f{{Db{D`}}}}}{{Af{Eb}}}}{{{f{Dj}}{f{Fh}}}{{Af{Dj}}}}{{{f{Fh}}{f{Fh}}}{{Af{{l{Al}}}}}}{{{f{Mh}}{f{Fh}}}{{Af{{l{Dd}}}}}}{{{f{Eb}}{f{Fh}}}{{Af{{l{Cn}}}}}}{{{f{AIj}}{f{Fh}}}{{Af{AIj}}}}{{{f{{AD`{c}}}}{f{Fh}}}{{Af{{l{{Hf{c}}}}}}}Hj}{{AKh{f{AN`}}{f{AN`}}}{{Af{AN`}}}}{{{f{Dj}}{f{BhFj}}}Fl}{{{f{Mh}}{f{BhFj}}}Fl}{{{f{Eb}}{f{BhFj}}}Fl}{{{f{{AD`{c}}}}{f{BhFj}}}FlHj}{{{f{AKn}}{f{BhFj}}}Fl}{{{f{H`}}{f{BhFj}}}Fl}0{{{f{AL`}}{f{BhFj}}}Fl}{{{f{Df}}{f{BhFj}}}Fl}0{{{f{Lb}}{f{BhFj}}}Fl}{{{f{ALb}}{f{BhFj}}}Fl}0{{{f{ACb}}{f{BhFj}}}{{Gd{bANb}}}}{{{f{AMj}}{f{BhFj}}}{{Gd{bANb}}}}{{{f{Dj}}c}b{{Ch{{An{Cf}}}}}}{cc{}}0000000{{{f{{Db{D`}}}}}H`}{{{An{c}}}H`{{ANd{H`}}}}{cH`ANf}{{{f{Bf}}}H`}4{dH`}5{{{f{ACb}}}Df}{{{f{H`}}}Df}{H`Df}88{{{f{ANh}}}Lb}{{{f{H`}}}Lb}:{{{f{AMj}}}ALb};;;;;;;;;;;;;;;;;;;;;{ANjACb}{ANlACb}={{{f{ACb}}d}Df}{cDj{{Gb{}{{B`{{An{{A@n{Fn}}}}}}}}}}{eDj{{ANn{Ad}}}{{Gb{}{{B`{c}}}}}}{cDj{{Gb{}{{B`{{An{Ad}}}}}}}}{cFh{{Gb{}{{B`{d}}}}}}{eMh{{`{Bf}}}{{Gb{}{{B`{c}}}}}}{eMh{{Kb{Bf}}}{{Gb{}{{B`{{An{c}}}}}}}}{eEb{{Kb{{Db{D`}}}}}{{Gb{}{{B`{{An{c}}}}}}}}{eEb{{`{{Db{D`}}}}}{{Gb{}{{B`{c}}}}}}{e{{AD`{c}}}Hj{{Gb{}{{B`{{An{c}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{{An{d}}}}}}}}{{{f{Bf}}e}Mh{{Kb{Bf}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}Eb{{Kb{{Db{D`}}}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}{{AD`{c}}}Hj{{Bd{}{{B`{{An{c}}}}}}}};:97856{eAIj{{`{{Db{D`}}}}}{{Gb{}{{B`{c}}}}}}{eAIj{{Kb{{Db{D`}}}}}{{Gb{}{{B`{{An{c}}}}}}}}6{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{d}}}}}}{{{f{Bf}}e}Mh{{Kb{Bf}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}Eb{{Kb{{Db{D`}}}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}{{AD`{c}}}Hj{{Bd{}{{B`{c}}}}}}{{AO`Df}Lb}{cDj{{Gl{}{{B`{{An{Ad}}}}}}}}{cFh{{Gl{}{{B`{d}}}}}}{cFh{{Gl{}{{B`{{An{d}}}}}}}}{eMh{{Kb{Bf}}IdIf}{{Gl{}{{B`{{An{c}}}}}}}}{eMh{{`{Bf}}IdIfAOb}{{Gl{}{{B`{c}}}}}}{eEb{{`{{Db{D`}}}}IdIfAOb}{{Gl{}{{B`{c}}}}}}{eEb{{Kb{{Db{D`}}}}IdIf}{{Gl{}{{B`{{An{c}}}}}}}}{{c{f{Bf}}Df}Dj{{Gl{}{{B`{{An{Ad}}}}}}}}{{{f{Bf}}{f{{Db{d}}}}}Fh}{{{f{Bf}}{f{{Db{c}}}}}Mh{{Kb{Bf}}}}{{{f{Bf}}{f{{Db{c}}}}}Eb{{Kb{{Db{D`}}}}}}{{{f{Bf}}{f{{Db{c}}}}}{{AD`{c}}}Hj}{{{f{Bf}}{f{{Db{{An{d}}}}}}}Fh}{{{f{Bf}}{f{{Db{{An{c}}}}}}}Mh{{Kb{Bf}}}}{{{f{Bf}}{f{{Db{{An{c}}}}}}}Eb{{Kb{{Db{D`}}}}}}{{{f{Bf}}{f{{Db{{An{c}}}}}}}{{AD`{c}}}Hj}{cFh{{Gn{}{{B`{{An{d}}}}}}}}{{{En{c}}ACb}{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}Of{AKb{AKd{c}}}{{Fb{}{{B`{c}}}}GnIdIf}}{{{En{c}}ACb}{{AHh{}{{AJl{e}}{AJn{c}}{AK`{g}}}}}{AKb{AKd{e}}}Of{{Fb{}{{B`{e}}}}GnIdIf}}{{FdcACb}{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}Of{AKb{AKd{c}}}{{Fb{}{{B`{c}}}}GnIdIf}}{{{f{Bf}}{f{Ad}}Fd}Dj}{{{f{Bf}}dFd}Fh}{{{f{Bf}}{f{Bf}}Fd}Mh}{{{f{Bf}}{f{{Db{D`}}}}Fd}Eb}{{{f{Bf}}{f{{Db{D`}}}}Fd}AIj}{{{f{Bf}}cFd}{{AD`{c}}}Hj}{{FdACb}{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}Of{AKb{AKd{c}}}{{Fb{}{{B`{c}}}}GnIdIf}}{{{f{Bf}}Fd}Dj}{{{f{Bf}}Fd}Fh}{{{f{Bf}}Fd}Mh}{{{f{Bf}}Fd}Eb}{{{f{Bf}}Fd}AIj}{{{f{Bf}}Fd}{{AD`{c}}}Hj}{{{f{Bf}}Fd{f{Df}}}Dj}{{{f{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}}Fd}{{An{c}}}Of{AKb{AKd{c}}}{{Fb{}{{B`{c}}}}GnIdIf}}{{{f{Ib}}Fd}{{Af{H`}}}}{{{f{AKj}}Fd}{{Af{H`}}}}0{{{f{Dj}}Fd}{{Af{H`}}}}{{{f{Fh}}Fd}{{Af{H`}}}}{{{f{Mh}}Fd}{{Af{H`}}}}{{{f{Eb}}Fd}{{Af{H`}}}}{{{f{AIj}}Fd}{{Af{H`}}}}{{{f{{AD`{c}}}}Fd}{{Af{H`}}}Hj}{{{f{Ib}}Fd}H`}{{{f{AKj}}Fd}H`}0{{{f{Dj}}Fd}H`}{{{f{Fh}}Fd}H`}{{{f{Mh}}Fd}H`}{{{f{Eb}}Fd}H`}{{{f{AIj}}Fd}H`}{{{f{{AD`{c}}}}Fd}H`Hj}{{{f{Dj}}Fd}{{An{Ad}}}}{{}Df}00000000000000000000000{{{f{Dj}}}Ad}{{{f{{AD`{c}}}}Fd}{{An{{f{Hh}}}}}Hj}0{{{f{H`}}}{{An{{f{Bf}}}}}}{{{f{AOd}}Fd}H`}{{{f{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}}Fd}{{An{c}}}Of{AKb{AKd{c}}}{{Fb{}{{B`{c}}}}GnIdIf}}{{{f{Dj}}}Fd}{{{f{Mh}}}Fd}{{{f{AIj}}}Fd}{{{f{Dj}}dd}{{Af{Aj}}}}{{{f{Fh}}dd}{{Af{Aj}}}}{{{f{Mh}}dd}{{Af{Aj}}}}{{{f{Eb}}dd}{{Af{Aj}}}}{{{f{AIj}}dd}{{Af{Aj}}}}{{{f{{AD`{c}}}}dd}{{Af{Aj}}}Hj}{{{f{Dj}}{f{Dj}}}Fh}{{{f{Fh}}{f{Fh}}}Fh}{{{f{Mh}}{f{Mh}}}Fh}{{{f{Mh}}{f{Bf}}}Fh}{{{f{Eb}}{f{{Db{D`}}}}}Fh}{{{f{Eb}}{f{Eb}}}Fh}542310{{{f{H`}}{f{Bhc}}}bAA`}{{{f{AL`}}{f{Bhc}}}bAA`}{{{f{Df}}{f{Bhc}}}bAA`}{{{f{Lb}}{f{Bhc}}}bAA`}{{{f{ALb}}{f{Bhc}}}bAA`}{{{f{ACb}}{f{Bhc}}}bAA`}{{{f{AMj}}{f{Bhc}}}bAA`}{{{f{H`}}{f{Bhc}}d}bAA`}{{}Fd}0000000000000000000000000000000000{{{f{Dj}}}{{f{Df}}}}{{{f{Df}}}{{An{{f{Df}}}}}}{{{f{ACb}}}{{An{{f{ACb}}}}}}{ce{}{}}0000000000000000000000000000000000{{AOf{An{Fd}}Fd}{{Af{Ib}}}}{{AOf{An{Fd}}Fd}Ib}{{{f{Dj}}}c{}}{{{f{Fh}}}c{}}{{{f{Mh}}}c{}}{{{f{Eb}}}c{}}{{{f{AIj}}}c{}}{{{f{{AD`{c}}}}}eHj{}}{IbAd}{AOfAd}{{Jl{f{Bf}}}Ad}{H`{{Af{H`}}}}{{{f{Df}}}d}00{{{f{H`}}}d}111010111110101011110111101{{{f{ACb}}}d}{{{f{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}}}{{ACl{cgACj}}}Of{AKb{AKd{c}}}{{Fb{}{{B`{c}}}}GnIdIf}}{{{f{Dj}}}{{`{{Bd{}{{B`{J`}}}}}}}}{{{f{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}}}{{An{c}}}Of{AKb{AKd{c}}}{{Fb{}{{B`{c}}}}GnIdIf}}{{{f{Df}}}{{f{Df}}}}{{{f{Dj}}{f{Dj}}}Fh}{{{f{Fh}}{f{Fh}}}Fh}{{{f{Mh}}{f{Mh}}}Fh}{{{f{Mh}}{f{Bf}}}Fh}{{{f{Eb}}{f{{Db{D`}}}}}Fh}{{{f{Eb}}{f{Eb}}}Fh}543210{{{f{AKf}}{f{AKf}}}{{Af{{Gj{AKfAKf}}}}}}{{DjDj}{{Af{{Gj{DjDj}}}}}}{{{f{Df}}{f{Df}}}{{Af{d}}}}{{{f{AL`}}}{{An{Df}}}}{{{f{Fh}}}{{An{d}}}}{{{f{Fh}}}Jl}{{{f{Mh}}}Jl}{{{f{Eb}}}Jl}{{{f{Fh}}}{{An{Jn}}}}{{{f{AJb}}}{{An{Hl}}}}{{{f{AJd}}}{{An{Jn}}}}{{{f{AJb}}}Jl}{{{f{AJd}}}Jl}{{{f{Df}}{f{Df}}}{{Af{Df}}}}9876{{{f{Bf}}{f{{Db{D`}}}}FdFd}Fh}{{{f{Ib}}{f{Ib}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAIn}}}{}}000000{{{f{Mh}}}{{Af{Fd}}}}{{{f{Eb}}}{{Af{Fd}}}}{{{f{Lb}}}{{f{AO`}}}}`{{}c{}}00{{{f{Bf}}c}Mh{{Kb{{Db{{AJ`{Bf}}}}}}}}{{{f{Bf}}c}Mh{{Kb{{Db{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Mh{{Kb{{Db{{f{Bf}}}}}}}}{{{f{Bf}}c}Mh{{Kb{{Db{{An{{AJ`{Bf}}}}}}}}}}{{{f{Bf}}c}Eb{{Kb{{Db{{AJ`{{Db{D`}}}}}}}}}}{{{f{Bf}}c}Eb{{Kb{{Db{{An{{f{{Db{D`}}}}}}}}}}}}{{{f{Bf}}c}Eb{{Kb{{Db{{f{{Db{D`}}}}}}}}}}{{{f{Bf}}c}Eb{{Kb{{Db{{An{{AJ`{{Db{D`}}}}}}}}}}}}{{{f{Bf}}{f{{Db{c}}}}}{{AD`{c}}}Hj}{{{f{Bf}}e}{{AD`{c}}}Hj{{Kb{{Db{{An{c}}}}}}}}{{DfH`}Jl}{{{f{Bf}}Df}Lb}{{{f{Bf}}}{{AD`{c}}}Hj}{{{f{Dj}}FdFd}Dj}{{{f{Fh}}FdFd}Fh}{{{f{Mh}}FdFd}Mh}{{{f{Eb}}FdFd}Eb}{{{f{AIj}}FdFd}AIj}{{{f{{AD`{c}}}}FdFd}{{AD`{c}}}Hj}{{{f{Bf}}{En{c}}}{{AD`{c}}}Hj}{{{f{Bf}}{En{c}}Gh}{{AD`{c}}}Hj}{{{l{c}}}{{AKl{ec}}}BnBn}{Fhc{}}{{{f{Fh}}}c{}}{{{f{Dj}}{f{Dj}}}Fh}{{{f{Fh}}{f{Fh}}}Fh}{{{f{Mh}}{f{Mh}}}Fh}{{{f{Mh}}{f{Bf}}}Fh}{{{f{Eb}}{f{{Db{D`}}}}}Fh}{{{f{Eb}}{f{Eb}}}Fh}543201{{{f{Dj}}}{{Af{{AEl{J`}}}}}}{{{f{Dj}}}{{`{{Ld{}{{B`{{An{Ad}}}}}}}}}}{{{f{Mh}}}{{`{{Ld{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{BhDj}}}{{`{{Lf{}{{B`{{An{Ad}}}}}}}}}}{{{f{Mh}}}{{`{{Lf{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{H`}}{f{H`}}}{{An{AOh}}}}{{{f{ALb}}{f{ALb}}}{{An{AOh}}}}{{{f{Ib}}}{{An{Fd}}}}{{{f{{AKl{AMbI`}}}}}{{An{Fd}}}}{{{f{AJb}}JnLh}{{Af{{An{Hl}}}}}}{{{f{AJd}}JnLh}{{Af{{An{Jn}}}}}}{{{f{AJb}}JnLh}{{Af{Jl}}}}{{{f{AJd}}JnLh}{{Af{Jl}}}}{{{f{Bf}}FdJn}{{Af{Fh}}}}{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAIn}}}{}}000000{{{f{Dj}}}Dj}{{{f{Fh}}}Fh}{{{f{Mh}}}Mh}{{{f{Eb}}}Eb}{{{f{AIj}}}AIj}{{{f{{AD`{c}}}}}{{AD`{c}}}Hj}`{{{f{Ib}}}Fd}{{{f{{AKl{AMbI`}}}}}Fd}{{{f{Fh}}c{An{d}}}{{Af{Fh}}}{{Gb{}{{B`{Hb}}}}}}{{{f{Mh}}c{An{{f{Bf}}}}}{{Af{Mh}}}{{Gb{}{{B`{Hb}}}}}}{{{f{Eb}}c{An{{f{{Db{D`}}}}}}}{{Af{Eb}}}{{Gb{}{{B`{Hb}}}}}}{{{f{Fh}}ce}{{Af{Fh}}}{{Gb{}{{B`{Hb}}}}}{{Cb{{An{d}}}{{C`{{An{d}}}}}}}}{{{f{Mh}}ce}{{Af{Mh}}}{{Gb{}{{B`{Hb}}}}}{{Cb{{An{{f{Bf}}}}}{{C`{{An{Dh}}}}}}}}{{{f{Eb}}ce}{{Af{Eb}}}{{Gb{}{{B`{Hb}}}}}{{Cb{{An{{f{{Db{D`}}}}}}}{{C`{{An{{En{D`}}}}}}}}}}{{{f{Fh}}{f{Fh}}{An{d}}}{{Af{Fh}}}}{{{f{Mh}}{f{Fh}}{An{{f{Bf}}}}}{{Af{Mh}}}}{{{f{Eb}}{f{Fh}}{An{{f{{Db{D`}}}}}}}{{Af{Eb}}}}{{{f{BhDj}}}b}{{{f{BhDj}}Df}b}{{{f{BhLb}}AO`}b}{{{f{Dj}}J`}Dj}{{{f{Fh}}J`}Fh}{{{f{Mh}}J`}Mh}{{{f{Eb}}J`}Eb}{{{f{AIj}}J`}AIj}{{{f{{AD`{c}}}}J`}{{AD`{c}}}Hj}{{{f{Dj}}J`{An{{f{Ad}}}}}Dj}{{{f{Fh}}J`{An{d}}}Fh}{{{f{Mh}}J`{An{{f{Bf}}}}}Mh}{{{f{Eb}}J`{An{{f{{Db{D`}}}}}}}Eb}{{{f{AIj}}J`{An{{f{{Db{D`}}}}}}}AIj}{{{f{{AD`{c}}}}J`{An{{Hf{c}}}}}{{l{{Hf{c}}}}}Hj}{{{f{Fh}}d}Fh}{{{f{Mh}}d}Mh}{{{f{Eb}}d}{{l{Cn}}}}{{{f{AIj}}d}AIj}{{{f{Fh}}Dl}{{l{Al}}}}{{{f{Mh}}Dl}{{l{Dd}}}}{{{f{Eb}}Dl}{{l{Cn}}}}{{{f{AIj}}Dl}AIj}{{{f{AJb}}D`}Jl}{{{f{AJd}}D`}Jl}{{{f{H`}}{f{Df}}}{{An{H`}}}}`{{{f{Ib}}{f{Ib}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAIn}}}{}}000000{{{f{Fh}}}{{An{Hb}}}}{{{f{Fh}}}Jl}{{{f{Eb}}}Jl}{{{f{Mh}}{f{Dn}}}Mh}{{{f{Mh}}{f{c}}}Mh{{Kb{{Db{Hb}}}}Ll}}{{{f{Eb}}{f{c}}}Eb{{Kb{{Db{Hb}}}}Ll}}{{{f{Eb}}{f{Dn}}}Eb}{{{f{Df}}d}ACb}{{{f{Lb}}d}ANh}{ALbAMj}{{{f{Df}}{f{Bf}}d}ANh}{ALb{{f{Bf}}}}{{{f{Mh}}Fd}{{Af{Ad}}}}{{{f{BhDj}}Df}b}{{{f{ACb}}}{{f{ACb}}}}{{{f{Dj}}}{{Af{Mf}}}}{{{f{c}}}e{}{}}00000000000000000000000000000{{{f{Df}}}Df}{{{f{ACb}}}AOj}{{{f{c}}}Dh{}}00{{{f{Eb}}}Mh}{{{f{H`}}{f{H`}}}d}{{{f{Dj}}c}{{Af{Dj}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{Dj}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{g{{Gd{AJfe}}}{}{}{{Gb{}{{B`{{Gd{ce}}}}}}}}0{{ACbg}{{Gd{AJhe}}}{}{}{{Gb{}{{B`{{Gd{ce}}}}}}}}0{AMl{{Gd{eg}}}{}{{AJf{c}}AHh}{}}0{{AMlACb}{{Gd{eg}}}{}{{AJh{c}}AHh}{}}0{{{f{H`}}}{{Af{c}}}Jj}{c{{Gd{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000{{{f{H`}}{f{Df}}}{{Af{H`}}}}{{{f{Df}}d}{{Af{ACb}}}}{{{f{Dj}}{f{{l{c}}}}e}{{Af{Dj}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Ml{}}0000000000000000000000000000000000{{{f{ACb}}}ACb}{{{f{Fh}}}{{Af{Fh}}}}{{{f{Mh}}}{{Af{Mh}}}}{{{f{Eb}}}{{Af{Eb}}}}{{{f{{AD`{c}}}}}{{Af{{l{{Hf{c}}}}}}}Hj}{{{f{BhJl}}H`}b}{{{f{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}}Fd}cOf{AKb{AKd{c}}}{{Fb{}{{B`{c}}}}GnIdIf}}{{{f{Jl}}}{{f{H`}}}}1{{{f{Df}}H`}d}{{{f{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}}}gOf{AKb{AKd{c}}}{{Fb{}{{B`{c}}}}GnIdIf}}{{{f{AJb}}D`}Jl}{{{f{AJd}}D`}Jl}{{{f{Fh}}M`{f{Bh{En{Hn}}}}}{{Af{b}}}}{{{f{AOl}}M`{f{Bh{En{Hn}}}}}{{Af{b}}}}{{{f{AOn}}M`{f{Bh{En{Hn}}}}}{{Af{b}}}}{{{f{AN`}}M`{f{Bh{En{Hn}}}}}{{Af{b}}}}{{{f{B@`}}M`{f{Bh{En{Hn}}}}}{{Af{b}}}}{{{f{B@b}}M`{f{Bh{En{Hn}}}}}{{Af{b}}}}{{{f{B@d}}M`{f{Bh{En{Hn}}}}}{{Af{b}}}}{{{f{B@f}}M`{f{Bh{En{Hn}}}}}{{Af{b}}}}{{{f{B@h}}M`{f{Bh{En{Hn}}}}}{{Af{b}}}}{{{f{AOf}}M`{f{Bh{En{Hn}}}}}{{Af{b}}}}{{{f{AJb}}M`{f{Bh{En{Hn}}}}}{{Af{b}}}}{{{f{AJd}}M`{f{Bh{En{Hn}}}}}{{Af{b}}}}{{{f{Mh}}M`{f{Bh{En{Hn}}}}}{{Af{b}}}}{{{f{Eb}}M`{f{Bh{En{Hn}}}}}{{Af{b}}}}{{{f{AIj}}M`{f{Bh{En{Hn}}}}}{{Af{b}}}}{{{f{{AD`{c}}}}M`{f{Bh{En{Hn}}}}}{{Af{b}}}Hj}{{{f{Fh}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{AOl}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{AOn}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{AN`}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{B@`}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{B@b}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{B@d}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{B@f}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{B@h}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{AOf}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{AJb}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{AJd}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{Mh}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{Eb}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{AIj}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{{AD`{c}}}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}Hj}{ce{}{}}0000000000000000000000000000000000{Fdc{}}0{Fd{{B@j{ce}}}{}{}}{{{f{{Db{Mn}}}}e}c{}{{N`{{f{Dn}}}{{C`{c}}}}}}{{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}{An{Gh}}}{{AHh{}{{AJl{c}}{AJn{e}}{AK`{g}}}}}Of{AKb{AKd{c}}}{{Fb{}{{B`{c}}}}GnIdIf}}{{{f{Df}}}H`}{{{f{Dj}}{f{{l{c}}}}e}DjBn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}```````````{{{f{c}}h}b{}}{{{f{AKf}}}d}{{AKfd}AKf}{{{f{BhB@l}}{An{{f{Bf}}}}}b}{{{f{BhAKf}}{f{AKf}}}{{Af{b}}}}{{{f{BhB@l}}}b}{{{f{BhB@l}}{f{Bf}}}b}{{{f{AKf}}Dl}Dn}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{AKf}}{f{AKf}}c}{{Af{AKf}}}AKh}{{{f{AKf}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{AKf}}}AKf}{{{f{c}}{f{Bhe}}}b{}{}}{{}B@n}{Fd{{f{c}}}{}}000{Fd{{f{Bhc}}}{}}000{{B@lc}AKf{{Gb{}{{B`{{An{{f{Bf}}}}}}}}}}{Fdb}000{{{f{AKf}}}{{f{Df}}}}{{{f{AKf}}{f{Bf}}}c{}}{{{f{AKf}}{f{Mh}}}c{}}{{{f{AKf}}{f{AKf}}}c{}}120{{AKh{f{AN`}}{f{AN`}}}{{Af{AN`}}}}{B@lAKf}{B@n{{K`{BA`}}}}{cc{}}000{{AN`{K`{BA`}}dBAb}AKf}{{AN`BAb}AKf}{{{f{Mh}}{f{AMn}}BAb}{{Af{AKf}}}}{{{f{Bf}}dFdBAb}AKf}{{{f{AKf}}Fd}{{Af{H`}}}}{{{f{AKf}}Fd}H`}{{{f{AKf}}}{{f{{K`{BA`}}}}}};<=;<={{}Fd}000{ce{}{}}0000{AKfAd}{{{f{AKf}}}d}0{{{f{AKf}}}BAd}{{{f{AKf}}}Fd}{{{f{AKf}}{f{Mh}}}c{}}{{{f{AKf}}{f{AKf}}}c{}}{{{f{AKf}}{f{Bf}}}c{}}012{{{f{AKf}}{f{AKf}}}{{Af{{Gj{AKfAKf}}}}}}{{DjDj}{{Af{{Gj{DjDj}}}}}}{{{f{AKf}}}Jl}{{{f{BhB@n}}{f{{K`{BA`}}}}}{{Af{b}}}}1{{{f{AKf}}}{{Af{Fd}}}}{{{f{AKf}}}{{f{Bf}}}}{{{f{Bf}}FdBAb}B@l}{{{K`{BA`}}}B@n}{{{f{BhBAd}}}{{An{c}}}{}}:;9;9:<{{{f{AKf}}}{{f{AN`}}}}{{{f{BhB@l}}{f{Bf}}}{{Gj{Knd}}}}`{{{f{BAd}}}{{Gj{Fd{An{Fd}}}}}}{{{f{AKf}}d}AKf}{{{f{AKf}}Dl}AKf}`{{{f{AKf}}dd}El}{{{f{AKf}}{f{AMn}}BAf}AKf}{{{f{AKf}}}{{Af{AKf}}}}{{{f{AKf}}}AKf}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0000000{{{f{c}}}Ml{}}0004{{{f{AKf}}}d}{{{f{AKf}}}{{Af{BAh}}}}{ce{}{}}000``````{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{AMnBA`}{{{f{BAb}}}BAb}{{{f{BA`}}}BA`}{{{f{c}}{f{Bhe}}}b{}{}}0{{}BAb}{{}BA`}{Fd{{f{c}}}{}}0{Fd{{f{Bhc}}}{}}0{Fdb}0{{{f{BAb}}{f{BAb}}}d}{{{f{BA`}}{f{Bf}}}{{An{Kn}}}}{{{f{BAb}}{f{BhFj}}}Fl}{{{f{BA`}}{f{BhFj}}}Fl}{cc{}}0{{{f{BA`}}Kn}{{f{Bf}}}}{{{f{BA`}}}{{f{AMn}}}}{{{f{BA`}}Kn}{{An{{f{Bf}}}}}}{{}Fd}0{ce{}{}}0{{{f{BA`}}}d}0{{{f{BA`}}}Fd}{{{f{BA`}}{f{BA`}}}d}{{{f{c}}}e{}{}}0{c{{Gd{e}}}{}{}}000{{{f{c}}}Ml{}}066`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}BAj}{Fd{{f{c}}}{}}{Fd{{f{Bhc}}}{}}{{}b}{Fdb}{{{f{BhBAj}}}b}2{cc{}}6{{}Fd}{ce{}{}}<<;{{}d}1```````660````````````````````````{{{f{BAl}}}{{f{Bf}}}}<<;;`99{{{f{BAl}}}f}9977`{{{f{BAn}}{f{BhFj}}}{{Gd{bANb}}}}{{{f{BAl}}{f{BhFj}}}{{Gd{bANb}}}}077{cBAl{{ANd{{AJ`{Bf}}}}}}{{}{{Jd{{f{Bf}}BAn}{{C`{b}}}}}}8877{cAInAHl}````{{{Jd{{f{Bf}}BAn}{{C`{b}}}}}b}{cAInBB`}{{{f{c}}}Dh{}}{c{{Gd{e}}}{}{}}000{{{f{c}}}Ml{}}0==``````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BBb}}}BBb}{{{f{c}}{f{Bhe}}}b{}{}}{Fd{{f{c}}}{}}{Fd{{f{Bhc}}}{}}{Fdb}{{{f{BhFj}}BBdFd}Fl}{cc{}}{{}BBf}{{}BBb}{{}{{An{Fd}}}}{{}Dh}{{}d}{{}Fd}{ce{}{}}{{{An{BBf}}}b}{BBbb}{{{An{Fd}}}b}2{{{An{d}}}b}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}7```````````{{{f{c}}h}b{}}00{{{f{BhBAh}}{En{Ad}}{f{BBh}}}{{Af{b}}}}{{{f{BAh}}{f{Cb}}}{{En{Ad}}}}0{{{f{BAh}}{f{Fh}}}{{Af{BAh}}}}{{{f{BAh}}{f{{Db{AO`}}}}}{{Af{BAh}}}}0{{{f{BAh}}J`Fd}BAh}{{BAh{f{Ad}}}c{}}{{{f{BAh}}{f{Ad}}}c{}}{{{f{BAh}}{f{BAh}}}c{}}{{{f{BhBAh}}}{{f{BhBAh}}}}{{{f{BhBAh}}{f{Bf}}e}{{Af{{f{BhBAh}}}}}BBj{{N`{{f{Ad}}}{{C`{c}}}}}}{{{f{BhBAh}}Fde}{{Af{{f{BhBAh}}}}}BBj{{N`{{f{Ad}}}{{C`{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000{{{f{BAh}}}BAh}{{{f{BBl}}}BBl}{{{f{BBn}}}BBn}2{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{BAh}}{f{Bf}}}{{Af{{f{Ad}}}}}}{{{f{BAh}}e}{{Af{{En{{f{Ad}}}}}}}{{Kb{Bf}}}{{Gb{}{{B`{c}}}}}}{{}BBn}{{}BAh}{Fd{{f{c}}}{}}0000{Fd{{f{Bhc}}}{}}0000?{{{f{BAh}}{f{Ad}}}c{}}{{BAh{f{Ad}}}c{}}{Fdb}0000{{{f{BAh}}{f{Bf}}}{{Af{BAh}}}}{{{f{BhBAh}}{f{Bf}}}{{Af{Ad}}}}{{{f{BAh}}{f{{Db{c}}}}}BAh{{Kb{Bf}}}}{{{f{BAh}}{f{{BC`{{f{Bf}}}}}}}BAh}{{{f{BAh}}{An{{f{{Db{c}}}}}}}{{Af{BAh}}}{{Kb{Bf}}}}{{{f{BAh}}}{{En{Df}}}};{{{f{BBn}}{f{BBn}}}d}{{{f{BAh}}{f{BAh}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{BAh}}}Fd}`{{{f{BAh}}e}{{Af{BAh}}}{{Kb{Bf}}}{{Gb{}{{B`{c}}}}}}{{{f{BAh}}{En{Ad}}}{{Af{BAh}}}}{{{f{BhBAh}}{f{BAh}}}{{Af{b}}}}{{{f{BAh}}}{{En{Lb}}}}{{{f{BAh}}AEf}{{Af{BAh}}}}{{{f{BAh}}{f{Fh}}}{{Af{BAh}}}}{{{f{BBl}}{f{BhFj}}}Fl}{{{f{BBn}}{f{BhFj}}}Fl}{{{f{BAh}}{f{BhFj}}}Fl}0{cc{}}0000{{{f{BCb}}}BAh}{{{f{BBh}}}BAh}{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{cBAh{{Gb{}{{B`{Ad}}}}}}{{{f{{Db{BCd}}}}}{{Af{BAh}}}}{{{f{{Db{BCd}}}}{f{BBh}}}{{Af{BAh}}}}{{c{f{BBh}}}{{Af{BAh}}}{{Bd{}{{B`{{f{BCd}}}}}}}}{{{f{BAh}}Fd}{{An{{En{H`}}}}}}{{{f{BAh}}{f{Bf}}}{{An{Fd}}}}{{{f{BAh}}}{{En{{f{Bf}}}}}}{{{f{BAh}}}{{En{AO`}}}}{{{f{BAh}}}{{f{{Db{Ad}}}}}}{{{f{BhBAh}}}{{f{Bh{En{Ad}}}}}}{{{f{BAh}}Fd}{{Af{BCd}}}}{{{f{BAh}}Fd{f{BhBCd}}}{{Af{b}}}}{{{f{BAh}}Fd{f{BhBCd}}}b}{{{f{BAh}}}{{An{{Af{Df}}}}}}`{{{f{BAh}}e}{{Af{BCf}}}{{Kb{Bf}}}{{Gb{}{{B`{c}}}}}}0{{{f{BAh}}{En{Ad}}dd}{{Af{BCf}}}}{{{f{BBn}}{f{Bhc}}}bAA`}{{{f{BhBAh}}{An{M`}}}{{Af{B@`}}}}{{{f{BAh}}{An{Fd}}}BAh}{{{f{BAh}}}Fd}{{{f{BAh}}{f{{Db{Ad}}}}}{{Af{BAh}}}}{{{f{BhBAh}}{f{{Db{Ad}}}}}{{Af{{f{BhBAh}}}}}}{{{f{BhBAh}}{f{{Db{Ad}}}}}{{f{BhBAh}}}}{{{f{BAh}}{f{Bf}}}{{f{c}}}{}}{{{f{BAh}}{Kh{Fd}}}{{f{c}}}{}}{{{f{BAh}}{BCh{Fd}}}{{f{c}}}{}}{{{f{BAh}}{BCj{Fd}}}{{f{c}}}{}}{{{f{BAh}}BCl}{{f{c}}}{}}{{{f{BAh}}Fd}{{f{c}}}{}}{{{f{BAh}}{BCn{Fd}}}{{f{c}}}{}}{{{f{BAh}}{BD`{Fd}}}{{f{c}}}{}}{{}Fd}0000{{{f{BhBAh}}Fdc}{{Af{{f{BhBAh}}}}}BBj}{ce{}{}}000000{{{f{BAh}}}{{Af{Fh}}}}{{{f{BAh}}}d}1{{{f{BAh}}}{{Jb{Ad}}}}{{{f{BAh}}d}BDb}{{{f{BAh}}}BDd}{{{f{BAh}}}{{Af{{An{Ad}}}}}}{{{f{BAh}}BBl}{{Af{{An{Ad}}}}}}{{{f{BAh}}ce}{{Af{BAh}}}{{BDf{AO`}}}{{BDf{AO`}}}}{{{f{BAh}}BDh}{{Af{BAh}}}}3{{BAh{f{Ad}}}c{}}{{{f{BAh}}{f{BAh}}}c{}}{{{f{BAh}}{f{Ad}}}c{}}{{{f{BAh}}}Fd}{{{En{c}}}{{Af{BAh}}}BBj}{{{En{Ad}}}BAh}{{{En{Ad}}}{{Af{BAh}}}}{{{f{BhBDb}}}{{An{c}}}{}}{{{f{BhBDd}}}{{An{c}}}{}}{{{f{BAh}}}BAh}{{{f{BAh}}cd}{{Af{{En{BAh}}}}}{{BDf{Dh}}}}0{{BAhe}{{Af{c}}}{}{{Cb{BAh}{{C`{{Af{c}}}}}}}}{{{f{BhBAh}}e}{{Af{c}}}{}{{Cb{{f{BhBAh}}}{{C`{{Af{c}}}}}}}}{{BAhgc}{{Af{e}}}{}{}{{Cb{BAhc}{{C`{{Af{e}}}}}}}}{{{f{BhBAh}}}{{An{Ad}}}}{{{f{BAh}}{f{BAh}}}d}=?>{{{f{BhBAh}}{f{Bf}}{f{Bf}}}{{Af{{f{BhBAh}}}}}}{{{f{BhBAh}}{f{Bf}}c}{{Af{{f{BhBAh}}}}}BBj}{{{f{BhBAh}}Fdc}{{Af{{f{BhBAh}}}}}BBj}19`{{{f{BAh}}{f{Ad}}dd{An{Hn}}}{{Af{BAh}}}}0{{{f{BAh}}Fddd{An{Hn}}}{{Af{BAh}}}}{{{f{BAh}}}BBh}{{{f{BAh}}{f{BAh}}}{{Af{b}}}}{{{f{BAh}}e}{{Af{BAh}}}{{Kb{Bf}}}{{Gb{}{{B`{c}}}}}}{{{f{BAh}}Fd}{{An{{f{Ad}}}}}}{{{f{BAh}}c}{{Af{BAh}}}{{BDj{Fd}}}}2{{{f{BAh}}c}{{Af{{En{Ad}}}}}{{BDf{AO`}}}}{{{f{BAh}}e{f{BDl}}}{{Af{BAh}}}{{Kb{Bf}}}{{Gb{}{{B`{c}}}}}}{{{f{BAh}}e{f{BBh}}}{{Af{BAh}}}{{Kb{Bf}}}{{Gb{}{{B`{c}}}}}}{{{f{BhBAh}}{f{{Db{c}}}}}{{Af{b}}}{{Kb{Bf}}}}{{{f{BAh}}}{{Gj{FdFd}}}}{{{f{BAh}}J`}BAh}{{{f{BAh}}}d}{{{f{BhBAh}}}b}{{{f{BDb}}}{{Gj{Fd{An{Fd}}}}}}{{{f{BDd}}}{{Gj{Fd{An{Fd}}}}}}{{{f{BAh}}J`Fd}BAh}0{{{f{BAh}}cE`}{{Af{BAh}}}{{BDf{AO`}}}}{{{f{BhBAh}}cE`}{{Af{{f{BhBAh}}}}}{{BDf{AO`}}}}{{{f{BhBAh}}}{{`{{Bd{}{{B`{BAh}}}}}}}}{{BAhFdd}{{En{BAh}}}}{{{f{BAh}}{f{Ad}}}c{}}{{BAh{f{Ad}}}c{}}{{{f{BAh}}{f{BAh}}}c{}}{{{f{BAh}}BBl}{{Af{{An{Ad}}}}}}{{{f{BAh}}{An{Fd}}}BAh}{{{f{BAh}}{f{Dn}}}{{Af{BAh}}}}{{{f{BAh}}{f{Dn}}}BAh}{{{f{BAh}}{f{Dn}}d}BAh}{{{f{BAh}}BDn}{{Af{Mf}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Dh{}}{{{f{BAh}}FdcE`}{{Af{BAh}}}{{BDf{AO`}}}}{{{f{BhBAh}}{An{{f{Bf}}}}{An{{Mj{Dh{En{Dh}}}}}}}{{Af{BAh}}}}{{{f{BhBAh}}{f{Bf}}e}{{Af{{f{BhBAh}}}}}BBj{{N`{{f{Ad}}}{{C`{{Af{c}}}}}}}}{{{f{BhBAh}}Fde}{{Af{{f{BhBAh}}}}}BBj{{N`{{f{Ad}}}{{C`{{Af{c}}}}}}}}{c{{Gd{e}}}{}{}}000{BE`{{Af{BAh}}}}{{{Gj{BEb{f{{Db{ANh}}}}}}}{{Af{BAh}}}}2{{c{f{BBh}}}{{Af{BAh}}}{{Bd{}{{B`{{Af{{f{BCd}}}}}}}}}}{{{f{BAh}}{f{Bf}}}{{Af{Fd}}}}44444{{{f{c}}}Ml{}}0000{{{f{BAh}}{An{{f{{Db{Dh}}}}}}BBn{An{{Gj{J`Fd}}}}}{{Af{BAh}}}}{{{f{BAh}}d{An{{f{{Db{Dh}}}}}}BBn{An{{Gj{J`Fd}}}}}{{Af{BAh}}}}1{{{f{BAh}}{f{BAh}}}{{Af{BAh}}}}{{{f{BhBAh}}{f{BAh}}}{{Af{{f{BhBAh}}}}}}{ce{}{}}0000{{{f{BAh}}}Fd}{{{f{BhBAh}}c}{{Af{{f{BhBAh}}}}}BBj}{{{f{BhBAh}}c{f{BBh}}}{{Af{{f{BhBAh}}}}}BBj}{{{f{BhBAh}}Ad}{{f{BhBAh}}}}{{{f{BAh}}{f{Bf}}{An{Hb}}}{{Af{BAh}}}}{{{f{BhBAh}}{f{Bf}}{An{Hb}}}{{f{BhBAh}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BDh}}}BDh}{{{f{c}}{f{Bhe}}}b{}{}}{{}BDh}{Fd{{f{c}}}{}}{Fd{{f{Bhc}}}{}}{Fdb}{{{f{BDh}}{f{BDh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BDh}}{f{BhFj}}}Fl}{cc{}}{{{f{BDh}}{f{Bhc}}}bAA`}`{{}Fd}{ce{}{}}`{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}```3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BCf}}}{{Af{BAh}}}}`{{{f{BEd}}}{{f{{Db{BEf}}}}}}{{{f{BCf}}c}{{Af{BAh}}}{{Ch{BAh}{{C`{{Af{BAh}}}}}}IdIf}}{{{f{Aj}}}Dj}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000{{{f{BEd}}}BEd}{{{f{Aj}}}Aj}{{{f{BCf}}}BCf}{{{f{BEh}}}BEh}{{{f{c}}{f{Bhe}}}b{}{}}000:{{}BEd}{{}Aj}{Fd{{f{c}}}{}}00{{{f{BEj}}}{{f{c}}}{}}11111{Fd{{f{Bhc}}}{}}0000000`{{BEle}{}{}{{BEn{c}}}}{Fdb}000{{{f{BhBEd}}}b}1111{{{f{BEd}}{f{BEd}}}d}{{{f{Aj}}{f{Aj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BF`}}}Hb}{{{f{BEd}}}{{f{{Db{Hb}}}}}}{{{f{BCf}}}{{Af{BAh}}}}{{{f{BhBEd}}}{{f{Bh{En{Hb}}}}}}{{{f{BEd}}{f{BhFj}}}Fl}{{{f{Aj}}{f{BhFj}}}Fl}{{{f{BCf}}{f{BhFj}}}Fl}{{{f{BEh}}{f{BhFj}}}Fl}0{{{f{Bf}}BEh}Dh}{cc{}}0000{{{En{{En{BFb}}}}}BEd}{{{En{BFb}}}BEd}{{{En{{Gj{{En{Hb}}{En{BEf}}}}}}}BEd}{BEdAj}444{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{cBEd{{Gb{}{{B`{BFb}}}}}}{cBEd{{Gl{}{{B`{BFb}}}}}}{{{f{Aj}}Fd}BF`}{{{f{BCf}}}{{f{Aj}}}}{{{f{BhBCf}}}{{f{BhAj}}}}{{{f{Aj}}}Dn}{{{f{BFd}}dd}{{Af{Aj}}}}0{{{f{BCf}}}{{Af{BAh}}}}{{{f{BhAj}}}{{f{BhBEd}}}}{{}Fd}0000000{ce{}{}}0000000{AjBEd}1{BEdc{}}{{{f{BEd}}}c{}}310{{{f{BF`}}}d}{{{f{Aj}}}d}{{{f{BEd}}}d}{{{f{BEd}}}{{BFh{{BFf{{Jb{Hb}}}}{Jb{BEf}}}}}}{{{f{Aj}}}BFj}{{{f{BCf}}}{{En{Ad}}}}{{{f{BCf}}{An{{Gj{J`Fd}}}}}{{En{Ad}}}}={{{f{BF`}}}Fd}{{{f{Aj}}}Fd}?????{{{En{Hb}}{En{BEf}}d}BEd}{{{f{BAh}}{En{Ad}}Aj{An{{En{Dh}}}}}BCf}{{{f{BhBFj}}}{{An{c}}}{}}{{{f{BhBFj}}Fd}{{An{c}}}{}}{{{f{BCf}}c}{{Af{BAh}}}{{Cb{BAh}{{C`{{Af{BAh}}}}}}IdIf}}{{{f{c}}}{}{}}{{{f{Aj}}}BEl}{{{f{BCf}}JnLh}{{Af{BAh}}}}{{BCfe}BCf{{Kb{Bf}}}{{Gb{}{{B`{c}}}}}}{{{f{Aj}}J`Fd}BEj}{{{f{BhBEd}}}b}{{{f{BhAj}}}b}{{{f{BCf}}D`}{{Af{BAh}}}}{{{f{BCf}}}{{Af{BAh}}}}{Aj{{En{Hb}}}}0{BCfAj}{{{f{BhBCf}}}Aj}{{{f{c}}}e{}{}}000{{{f{c}}}Dh{}}{c{{Gd{e}}}{}{}}000000000000000{{{f{c}}}Ml{}}0000000{AjAj}{{{f{Aj}}}{{f{BEd}}}}{{{f{Aj}}}{{f{BFl}}}};{ce{}{}}0000000`````{{{f{BEd}}c}Ad{{Cb{{Gj{Hb{f{BEf}}}}}{{C`{An}}}}IdIf}}{{{f{BEd}}c}Ad{{Cb{{Gj{Hb{f{BEf}}}}}{{C`{}}}}IdIf}}{{{f{{Db{{BFn{Hb}}}}}}c}Ad{{Cb{{BFn{Hb}}}{{C`{An}}}}IdIf}}{{{f{{Db{{BFn{Hb}}}}}}c}Ad{{Cb{{BFn{Hb}}}{{C`{}}}}IdIf}}{{{f{{Db{c}}}}eBG`}{{AI`{c}}}{BGbBGd}{{Bd{}{{B`{{Gj{HbHb}}}}}}Gn}}{{{f{{Db{c}}}}{f{Gh}}eBG`}{{AI`{c}}}{BGbBGd}{{Bd{}{{B`{{Gj{HbHb}}}}}}Gn}}{{{f{{l{c}}}}HbHb}{{l{c}}}Bn}{{{f{BFl}}{f{{Db{El}}}}}d}{{{f{BGf}}{f{Aj}}}Ad}{{BGhBGh}BGh}0`{{{f{BGj}}{f{BAh}}{f{Aj}}}{{Af{Ad}}}}{{{f{BGj}}}{{Af{{f{Bf}}}}}}```````````````````````{{{f{c}}h}b{}}00{{{f{BhBGl}}H`}{{An{b}}}}{{{f{BhBGn}}{f{H`}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{BGl}}}BGl}{{{f{BGn}}}BGn}{{{f{BCd}}}BCd}{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{{Db{c}}}}}Df{{ANn{Df}}}}{{}BCd}{Fd{{f{c}}}{}}00{Fd{{f{Bhc}}}{}}00{Fdb}00{{{f{BCd}}{f{BCd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCd}}{f{BhFj}}}Fl}{cc{}}{{{Gj{{f{Df}}Fd}}}BGl}{{{Gj{{f{Df}}Fd}}}BGn}22{{eFd}BBh{{ANd{Df}}}{{Bd{}{{B`{{En{{Gj{Dhc}}}}}}}}}}{{}Fd}00{ce{}{}}00{BGlAd}{BGnAd}{{{f{Df}}Fd}BGl}{{{f{Df}}Fd}BGn}{{{En{H`}}}BCd}{{{f{BhBGl}}Fd}Ad}{{{f{BhBGn}}Fd}Ad}{{{f{{Db{BCd}}}}{An{Fd}}}{{Af{BBh}}}}0{{{f{{Db{BCd}}}}{An{Fd}}}{{Af{{En{Df}}}}}}{{{f{c}}}e{}{}}00{c{{Gd{e}}}{}{}}00000{{{f{c}}}Ml{}}00<<<{{{f{{Db{BAh}}}}}{{Af{BAh}}}}0`````{{HnHn}Hn}{{{f{{Db{BAh}}}}{An{M`}}}{{Af{{Gj{{En{B@`}}M`}}}}}}{{{f{{BH`{J`}}}}M`{f{Bh{En{Hn}}}}}b}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{}BHb}{Fd{{f{c}}}{}}0{Fd{{f{Bhc}}}{}}0{Fdb}0{{{f{BHb}}}Hn}{{{f{BHd}}{f{BhFj}}}Fl}{cc{}}0{{{f{BHd}}{f{Bhc}}}bAA`}``{{}Fd}0{ce{}{}}0{{{f{Bh{BHf{BHdce}}}}HbHn{f{BAh}}gi}b{}BHh{{Cb{}{{C`{c}}}}}{{Ch{{f{Bhc}}}}}}{c{{Gd{e}}}{}{}}000{{{f{c}}}Ml{}}0{{{f{BHj}}M`{f{Bh{En{Hn}}}}}{{Af{b}}}}0{{{f{BHj}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}055{{{f{BhBHb}}{f{{Db{D`}}}}}b}{{{f{BhBHb}}Kf}b}{{{f{BhBHb}}J`}b}{{{f{BhBHb}}Kn}b}{{{f{BhBHb}}Hn}b}```````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000{{{f{{K`{ce}}}}}{{f{e}}}{}BHl}{{{f{{K`{c}}}}}BHn{BI`Ll}}{{{f{{K`{ce}}}}}{}LlBHl}{{{f{{K`{c}}}}}KfBIb}{{{f{{K`{ce}}}}}{{f{c}}}LlBHl}{{{K`{{BId{c}}e}}}{{K`{ce}}}{}BHl}{{{K`{{Db{{BId{c}}}}e}}}{{K`{{Db{c}}e}}}{}BHl}{{{f{c}}}{{f{e}}}{}{}}0003000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000000000{{{f{AKf}}{f{AKf}}c}{{Af{AKf}}}AKh}{{{f{{K`{c}}}}}{{An{{f{AHl}}}}}{AHlLl}}`{{{f{BIf}}{f{Ad}}}{{Af{Ad}}}}{{{f{BIf}}c}{{Af{Ad}}}Ab}{{{f{Mn}}}Mn}{{{f{BIh}}}BIh}{{{f{{K`{ce}}}}}{{K`{ce}}}Ll{BHlOf}}{{{f{Lj}}}Lj}{{{f{BDn}}}BDn}{{{f{ANh}}}ANh}{{{f{BCb}}}BCb}{{{f{Lh}}}Lh}{{{f{BIj}}}BIj}{{{f{BIl}}}BIl}{{{f{BIn}}}BIn}{{{f{c}}{f{Bhe}}}b{}{}}0000000000{{{f{{K`{ce}}}}{f{{K`{ce}}}}}AOh{BJ`Ll}BHl}{AMle{}{{AJf{c}}AHh}}0{{AMlACb}e{}{{AJh{c}}AHh}}0{{{f{c}}{f{e}}}AOh{}{}}{{AInBAl}AIn}{AInAIn}{{{f{Fn}}{f{ACb}}}{{A@n{Fn}}}}{{{f{ANh}}}{{f{ACb}}}}```{{}b}{cbBHl}{{}{{K`{Bf}}}}{{}{{K`{c}}}BJb}{{}{{K`{{Db{c}}}}}{}}{{}{{K`{BJd}}}}{{}Lj}{{}BDn}{{}ANh}{{}BCb}{{}Lh}`{Fd{{f{c}}}{}}00{{{f{{K`{ce}}}}}{{f{c}}}LlBHl}1111111111{Fd{{f{Bhc}}}{}}000000000000{{{f{{K`{c}}}}}{{f{Bf}}}{AHlLl}}`{{{K`{ACdc}}}{{Gd{{K`{ec}}{K`{ACdc}}}}}BHl{ACdIdIf}}{{{K`{ACdc}}}{{K`{ec}}}BHl{ACdIdIf}}{{{f{{K`{ce}}}}}{{BJf{ce}}}Ll{OfBHl}}{Fdb}00{{{f{Bh{K`{ce}}}}}bLlBHl}1111111111{{{f{Mn}}{f{Mn}}}d}{{{f{{K`{ce}}}}{f{{K`{ce}}}}}d{BJhLl}BHl}{{{f{{K`{BJj}}}}{f{BJj}}}d}{{{f{{K`{Fn}}}}{f{Fn}}}d}{{{f{Lj}}{f{Lj}}}d}{{{f{BDn}}{f{BDn}}}d}{{{f{ANh}}{f{ANh}}}d}{{{f{BCb}}{f{BCb}}}d}{{{f{Lh}}{f{Lh}}}d}{{{f{BIn}}{f{BIn}}}d}{{{f{c}}{f{e}}}d{}{}}00000000000000000000{BIh{{Gj{KnKn}}}}`{{BCbc}BCb{{Cb{Fd{f{ANh}}}{{C`{d}}}}}}{{AKh{f{AN`}}{f{AN`}}}{{Af{AN`}}}}{{{f{Bh{K`{ABj}}}}}{{Gd{bBJl}}}}{{{f{AIn}}{f{BhFj}}}{{Gd{bANb}}}}0{{{f{Mn}}{f{BhFj}}}{{Gd{bANb}}}}{{{f{BIh}}{f{BhFj}}}{{Gd{bANb}}}}{{{f{{K`{ce}}}}{f{BhFj}}}{{Gd{bANb}}}LlBHl}{{{f{{K`{ce}}}}{f{BhFj}}}{{Gd{bANb}}}{ACfLl}BHl}{{{f{{K`{ce}}}}{f{BhFj}}}{{Gd{bANb}}}{BB`Ll}BHl}{{{f{Lj}}{f{BhFj}}}Fl}{{{f{BDn}}{f{BhFj}}}Fl}{{{f{ANh}}{f{BhFj}}}{{Gd{bANb}}}}{{{f{BCb}}{f{BhFj}}}{{Gd{bANb}}}}{{{f{Lh}}{f{BhFj}}}{{Gd{bANb}}}}{{{f{BIj}}{f{BhFj}}}{{Gd{bANb}}}}{{{f{BIl}}{f{BhFj}}}{{Gd{bANb}}}}{{{f{BIn}}{f{BhFj}}}{{Gd{bANb}}}}`{cc{}}{BJnAIn}{BK`AIn}{BJlAIn}{BKbAIn}{KnMn}55{c{{K`{c}}}{}}{BKdc{}}{{{K`{Bf}}}{{K`{{Db{D`}}}}}}{{{AJ`{c}}}{{K`{c}}}{BKfLl}}{{{f{BJd}}}{{K`{BJd}}}}{{{BFn{c}}}{{K`{{Db{c}}}}}{}}{{{f{Bf}}}{{K`{Bf}}}}{{{En{ce}}}{{K`{{Db{c}}e}}}{}{BHlOf}}{Dh{{K`{Bf}}}}{{{f{{Db{c}}}}}{{K`{{Db{c}}}}}Of}{BKh{{K`{BJd}}}}{{{A@n{ce}}}{{K`{ce}}}LlBHl}{{{f{BKj}}}{{K`{BKj}}}}{cc{}}{BKl{{K`{BKj}}}}{{{f{BKn}}}{{K`{BKn}}}}{BL`{{K`{BKn}}}}3333{{{En{ANh}}}BCb}44444{{c{An{Gh}}}BLb{}}{{{BLd{J`}}{BLd{D`}}{An{Gh}}}BLf}{{{BLd{J`}}{BLd{D`}}{An{Gh}}}BLh}{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{e{{K`{{Db{c}}}}}{}{{Gb{}{{B`{c}}}}}}{{gFd}{{BLj{J`}}}Kb{{Gb{}{{B`{{An{c}}}}}}}{{Gb{}{{B`{{An{e}}}}}}}}0{e{{BLj{J`}}}{{Gb{}{{B`{{An{d}}}}}}}{{Gb{}{{B`{{An{c}}}}}}}}{{gACb}{{BLj{J`}}}BGd{{Gb{}{{B`{{An{c}}}}}}}{{Gb{}{{B`{{An{e}}}}}}}}2{e{{K`{{Db{c}}}}}Id{{Gl{}{{B`{c}}}}}}{{}{{K`{c}}}Ll}{c{{K`{ec}}}BHlLl}{{{f{Bf}}}{{Gd{BLl}}}}{{{f{Bf}}c}BLn{}}{{{f{{K`{ce}}}}{f{{K`{ce}}}}}d{BM`Ll}BHl}{{{f{Bh{K`{ce}}}}}{{An{{f{Bhc}}}}}LlBHl}{{{f{Bh{K`{ce}}}}}{{f{Bhc}}}LlBHl}{{{f{BCb}}}{{En{{f{Bf}}}}}}{{{f{El}}Fd}H`}4{{{f{BMb}}}d}{{{f{{K`{ce}}}}{f{Bhg}}}b{BMdLl}BHlAA`}{{{f{BDn}}{f{Bhc}}}bAA`}{{{f{ANh}}{f{Bhc}}}bAA`}{{{f{Lh}}{f{Bhc}}}bAA`}{{{f{BIn}}{f{Bhc}}}bAA`}{{{f{Mn}}}Kn}{{}b}{cb{OfBHl}}{{{f{BCb}}{f{Bf}}}{{An{Fd}}}}{{{f{{Db{Kn}}}}}{{`{{Bd{}{{B`{Fd}}}}}}}}{{}Fd}000000000000`{{{f{BhBIh}}}{{f{BhHn}}}}`{ce{}{}}000000000000{{{K`{ce}}}{{An{c}}}{}BHl}{{{K`{ce}}}{}LlBHl}{{{K`{ce}}}{{Gj{e}}}LlBHl}{{{K`{BMf}}}Ad}{{{f{BCb}}}d}{{{f{BIh}}}d}{{{f{Mn}}}d}`{{{f{{K`{ABj}}}}}d}{{{f{c}}}d{}}1{{{f{{K`{ce}}}}{f{{K`{ce}}}}}d{BM`Ll}BHl}{{{f{BCb}}}Fd}`1{{{f{AKf}}{f{AKf}}}{{Af{{Gj{AKfAKf}}}}}}{{DjDj}{{Af{{Gj{DjDj}}}}}}{{{f{Bh{K`{ce}}}}}{{f{Bhc}}}Of{BHlOf}}{{{f{BMh}}}Jl}0{{{f{BMj}}}Jl}```11`{{{f{{K`{ce}}}}{f{{K`{ce}}}}}d{BJhLl}BHl}{{BMlFd}{{An{Fd}}}}{{{f{Bf}}c}BMn{}}{c{{K`{c}}}{}}{{cACbd}ANh{{ANd{Dh}}}}{e{{K`{c}}}{}{{N`{{f{{BJf{c}}}}}{{C`{c}}}}}}{{ce}{{K`{ce}}}{}BHl}{{}{{K`{{BId{c}}}}}{}}{c{{K`{{BId{e}}c}}}BHl{}}{Fd{{K`{{Db{{BId{c}}}}}}}{}}{{Fdc}{{K`{{Db{{BId{e}}}}c}}}BHl{}}3210`{{}Mn}{{}BIh}{{{f{{K`{ce}}}}{f{{K`{ce}}}}}{{An{AOh}}}{BM`Ll}BHl}{c{{BN`{{K`{c}}}}}{}}{{ce}{{BN`{{K`{ce}}}}}{}BHl}`````{{{f{BMh}}}Jl}0{{{f{{K`{c}}}}{f{BhBNb}}}b{AHlLl}}{{{f{{K`{ce}}}}{f{{K`{ce}}}}}dLlBHl}{{{f{BMj}}JnLh}{{Af{Jl}}}}{{{f{Bh{K`{ABj}}}}{f{Bh{Db{D`}}}}}{{Gd{FdBJl}}}}{{{f{Bh{K`{ABj}}}}BNd}{{Gd{bBJl}}}}{{{f{Bh{K`{ABj}}}}{f{Bh{En{D`}}}}}{{Gd{FdBJl}}}}{{{f{Bh{K`{ABj}}}}{f{BhDh}}}{{Gd{FdBJl}}}}{{{f{Bh{K`{ABj}}}}{f{Bh{Db{BNf}}}}}{{Gd{FdBJl}}}}`{{{f{Bh{K`{ABj}}}}BNh}{{Gd{HnBJl}}}}`{{{f{AId}}FdFd}AId}0{{{f{{K`{c}}}}}{{An{{f{AHl}}}}}{AHlLl}}{{{f{BNj}}D`}Jl}{{KnKn}BIh}`{{{f{{K`{ce}}}}}FdLlBHl}>>{{{f{Mn}}}{{An{Kn}}}}{{{f{c}}}e{}{}}0000000000{{{f{c}}}Dh{}}0{AMl{{Gd{eg}}}{}{{AJf{c}}AHh}{}}0{{AMlACb}{{Gd{eg}}}{}{{AJh{c}}AHh}{}}0{c{{Gd{e}}}{}{}}000{{{K`{{Db{c}}e}}}{{Gd{{K`{{BFn{c}}e}}}}}{}BHl}1111111111111111111111{{BMlFd}{{Gd{FdAIn}}}}{c{{Gd{{K`{c}}BNl}}}{}}{{ce}{{Gd{{K`{ce}}BNl}}}{}BHl}{{}{{Gd{{K`{{BId{c}}}}BNl}}}{}}{c{{Gd{{K`{{BId{e}}c}}BNl}}}BHl{}}10{c{{Gd{{BN`{{K`{c}}}}BNl}}}{}}{{ce}{{Gd{{BN`{{K`{ce}}}}BNl}}}{}BHl}{{{K`{ce}}}{{Gd{c{K`{ce}}}}}{}BHl}{{{f{c}}}Ml{}}000000000000{{{K`{ce}}}cOfBHl}`{{{f{BNj}}D`}Jl}{ce{}{}}000000000000{{{f{{K`{ce}}}}}FdLlBHl}``{{ANh{BNn{DhDh}}}ANh}{{BCb{BNn{DhDh}}}BCb}{{{f{Bh{K`{ABj}}}}{f{{Db{D`}}}}}{{Gd{FdBJl}}}}{{{f{Bh{K`{ABj}}}}{f{{Db{BO`}}}}}{{Gd{FdBJl}}}}```````{{c{An{Gh}}}BLb{}}{{{BLd{J`}}{BLd{D`}}{An{Gh}}}BLf}{{{BLd{J`}}{BLd{D`}}{An{Gh}}}BLh}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{Fd{{f{c}}}{}}{Fd{{f{Bhc}}}{}}{Fdb}{{BOb{An{{f{ACb}}}}}{{Gd{{BLj{J`}}AIn}}}}{cc{}}{{}Fd}{ce{}{}}{{{f{BOb}}}d}{FdBOb}{{{f{BOb}}}{{f{{Db{J`}}}}}}{{{f{BhBOb}}{f{Fn}}}b}{{{f{BhBOb}}}b}{{{f{BhBOb}}{f{{Db{{A@n{Fn}}}}}}}b}1{{{f{BhBOb}}{An{{f{Fn}}}}}b}{BOb{{BOd{J`}}}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}:`{{{f{c}}h}b{}}{{{f{BOf}}}{{f{ACd}}}}{{{f{BhBOf}}}{{A@n{Fn}}}}{{{f{BhBOf}}}{{f{BhACd}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BOf}}}BOf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{BOf}}}{{f{ACb}}}}{{}BOf}{Fd{{f{c}}}{}}{Fd{{f{Bhc}}}{}}{Fdb}{{{f{BhBOf}}Fd}b}{{{f{BOf}}{f{BhFj}}}{{Gd{bANb}}}}{cc{}}{{}Fd}{ce{}{}}{{{f{BOf}}}Fd}{FdBOf}{{{f{BhBOf}}}b}70{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}{{{f{BOf}}}{{An{{f{BOh}}}}}}7```````{{{f{AId}}FdFd}AId}0`{{}b}0{{}d}``{{eFdFd}{{BOj{J`}}}{{Kb{Bf}}}{{Bd{}{{B`{c}}}}}}{{eFdFd}{{BH`{J`}}}{{Kb{{Db{D`}}}}}{{Bd{}{{B`{c}}}}}}{Hnb}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BBh}}}BBh}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{BBh}}{f{Bf}}}d}{{}BBh}{Fd{{f{c}}}{}}{Fd{{f{Bhc}}}{}}{Fdb}{{{f{BBh}}{f{BBh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BBh}}{f{BhFj}}}Fl}{{{f{{Db{Ad}}}}}BBh}{{{f{BCb}}}BBh}{cc{}}{{{f{BOl}}}BBh}{BOlBBh}{{{f{BCd}}}BBh}{BCbBBh}{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{eBBh{{ANd{Lb}}}{{Gb{}{{B`{c}}}}}}{{{f{BBh}}{f{Bf}}}{{An{{f{Df}}}}}}{{{f{BBh}}Fd}{{An{{Gj{{f{AO`}}{f{Df}}}}}}}}{{{f{BhBBh}}Fd}{{An{{Gj{{f{BhAO`}}{f{BhDf}}}}}}}}{{{f{BBh}}{f{Bf}}}{{An{Lb}}}}{{{f{BBh}}{f{Bf}}}{{An{{Gj{Fd{f{AO`}}{f{Df}}}}}}}}{{{f{BOn}}}{{En{{f{Bf}}}}}}{{{f{BBh}}}{{En{{f{Bf}}}}}}{{{f{BBh}}{f{Bhc}}}bAA`}{{{f{BOn}}{f{Bf}}}{{An{Fd}}}}{{{f{BBh}}{f{Bf}}}{{An{Fd}}}}{{}Fd}{{{f{BhBBh}}FdAO`Df}{{Af{{An{Df}}}}}}{ce{}{}}{BBhc{}}{{{f{BBh}}}d}{{{f{BBh}}}{{`{{Bd{}{{B`{{Gj{{f{AO`}}{f{Df}}}}}}}}}}}}{{{f{BBh}}}{{`{{Ih{}{{B`{{f{Df}}}}}}}}}}{{{f{BhBBh}}}{{`{{Ih{}{{B`{{f{BhDf}}}}}}}}}}{{{f{BBh}}}{{`{{Ih{}{{B`{Lb}}}}}}}}{{{f{BBh}}}{{`{{Ih{}{{B`{{f{AO`}}}}}}}}}}{{{f{BBh}}}Fd}{{{f{BhBBh}}BBh}b}{{{f{BhBBh}}{f{BBh}}}b}{{}BBh}{{{f{BBh}}FdAO`Df}{{Af{BBh}}}}{{{f{BhBBh}}{f{Bf}}}{{An{Df}}}}{{{f{BhBBh}}{f{Bf}}AO`}{{An{AO`}}}}{{{f{BhBBh}}Fd}b}{{{f{BhBBh}}{f{Bf}}Df}{{An{Df}}}}{{{f{BhBBh}}FdDf}{{An{Df}}}}4{{{f{BhBBh}}Fd}{{An{{Gj{AO`Df}}}}}}{{{f{BBh}}d}BCb}{{{f{c}}}e{}{}}{{{f{BhBBh}}{f{BBh}}}{{Af{d}}}}{c{{Gd{e}}}{}{}}{{{f{BBh}}{f{Bf}}}{{Af{{f{Df}}}}}}{{{f{BBh}}Fd}{{Af{{Gj{{f{AO`}}{f{Df}}}}}}}}{{{f{BBh}}{f{Bf}}}{{Af{Lb}}}}{{{f{BBh}}{f{Bf}}}{{Af{{Gj{Fd{f{AO`}}{f{Df}}}}}}}}{{{f{BhBBh}}{f{Bf}}}{{Af{{f{BhDf}}}}}}{{{f{BOn}}{f{Bf}}}{{Af{Fd}}}}6{{{f{c}}}Ml{}}{ce{}{}}{FdBBh}{{{f{BhBBh}}AO`Df}{{An{Df}}}}``````````````{{{f{c}}h}b{}}0{{{f{Bf}}{En{El}}{f{ACb}}}{{Af{Ad}}}}{{{f{Bf}}{En{El}}{f{ACb}}{An{{f{C@`}}}}}{{Af{Ad}}}}{{{f{Ad}}c}e{A`Jj}{}}{{{f{Ad}}{f{Ad}}}c{}}{{AdAd}c{}}{{Adc}e{A`Jj}{}}{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{BMf}}Dl}Dn}0{{{f{BMf}}}{{Af{Dn}}}}0`{{{f{Ad}}Fd}{{f{El}}}}{{{f{BMf}}}{{f{ACd}}}}{{{f{BhBMf}}}{{f{BhACd}}}}0{{{f{Ad}}}Dj}{{{f{BhBMf}}}{{f{Bh{l{c}}}}}Bn}{{{f{BMf}}}{{f{{l{c}}}}}Bn}{{{f{Ad}}}{{f{BMf}}}}{{{f{BhBMf}}}{{Af{Fd}}}}0{{{f{BhAd}}}{{Af{Fd}}}}{{{f{Ad}}}{{Af{{f{Eb}}}}}}{{{f{Ad}}}{{Af{{f{AIj}}}}}}{{{f{BMf}}{f{Ad}}}{{Af{Ad}}}}00000{{{f{Ad}}}{{Af{{f{Fh}}}}}}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{BMf}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ad}}{f{Df}}}{{Af{Ad}}}}0{{{f{Ad}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AKf}}}}}}77{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ad}}c}{{Af{Ad}}}Ab}{{{f{BMf}}}Ej}{{{f{BMf}}}{{f{{En{El}}}}}}{{{f{BhBMf}}}{{f{Bh{En{El}}}}}}{{{f{BhAd}}}{{f{Bh{En{El}}}}}}{{{f{Ad}}}Ad}{{{f{Il}}}Il}1{{{f{BMf}}}{{K`{BMf}}}}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{BhAd}}}b}{{{f{Ad}}}{{Af{{f{Ib}}}}}}{{}Ad}{Fd{{f{c}}}{}}0{{{f{Ad}}}{{f{c}}}{}}1{Fd{{f{Bhc}}}{}}00{{Adc}e{A`Jj}{}}{{{f{Ad}}c}e{A`Jj}{}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}{f{Ad}}}{{Af{Jn}}}}{Fdb}00{{{f{BMf}}}Ad}0{{{f{BMf}}}{{f{Df}}}}0{{{f{Il}}{f{Il}}}d}{{{f{Ad}}{f{Ad}}}d}{{{f{Ad}}{f{Bf}}}{{Af{Fh}}}}{{{f{Ad}}c}{{Af{Fh}}}ANf}{{{f{Ad}}{f{Ad}}}{{Af{Fh}}}}{{{f{Ad}}c}eANf{}}1{{{f{Ad}}{f{Bf}}}c{}}55{{{f{c}}{f{e}}}d{}{}}00{{{f{Ad}}}Fd}{{{f{Ad}}}{{Af{Ad}}}}{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{Ad}}H`Fd}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AJb}}}}}}{{{f{Ad}}}{{Af{{f{AJd}}}}}}{{{f{BMf}}}{{AJ`{Lb}}}}0{{{f{Ad}}AEf}{{Af{Ad}}}}{{{f{BMf}}{f{Fh}}}{{Af{Ad}}}}{{{f{Ad}}{f{Fh}}d}{{Af{Ad}}}}{{{f{Il}}{f{BhFj}}}Fl}{{{f{Ad}}{f{BhFj}}}Fl}0{{{f{Ad}}}Dh}{cc{}}00{{{l{c}}}AdBn}{{{f{Bf}}{f{{Db{H`}}}}d}{{Af{Ad}}}}{{{f{Bf}}{f{{Db{H`}}}}{f{Df}}d}{{Af{Ad}}}}{{{f{Bf}}El}{{Af{Ad}}}}{{{f{Bf}}{En{El}}}{{Af{Ad}}}}{{{f{Bf}}{En{El}}{f{Df}}}Ad}{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{cAd{{Gb{}{{B`{{An{d}}}}}}}}{cAd{{Gb{}{{B`{{f{d}}}}}}}}{cAd{{Gb{}{{B`{{f{Kf}}}}}}}}{cAd{{Gb{}{{B`{J`}}}}}}{cAd{{Gb{}{{B`{{f{Hl}}}}}}}}{cAd{{Gb{}{{B`{{f{Kn}}}}}}}}{cAd{{Gb{}{{B`{Kf}}}}}}{cAd{{Gb{}{{B`{d}}}}}}{cAd{{Gb{}{{B`{Hl}}}}}}{cAd{{Gb{}{{B`{{f{J`}}}}}}}}{cAd{{Gb{}{{B`{Kn}}}}}}{cAd{{Gb{}{{B`{{An{Hl}}}}}}}}{cAd{{Gb{}{{B`{Jn}}}}}}{cAd{{Gb{}{{B`{Dh}}}}}}{cAd{{Gb{}{{B`{{An{J`}}}}}}}}{cAd{{Gb{}{{B`{{f{Hn}}}}}}}}{cAd{{Gb{}{{B`{Hn}}}}}}{cAd{{Gb{}{{B`{{An{Kf}}}}}}}}{cAd{{Gb{}{{B`{{f{Jn}}}}}}}}{cAd{{Gb{}{{B`{{An{Hn}}}}}}}}{cAd{{Gb{}{{B`{{An{Kn}}}}}}}}{cAd{{Gb{}{{B`{{f{Bf}}}}}}}}{cAd{{Gb{}{{B`{{An{Jn}}}}}}}}{{{f{Bf}}{En{Jn}}}Ad}{{{f{Bf}}{En{Kf}}}Ad}{{{f{Bf}}{En{Kn}}}Ad}{{{f{Bf}}{En{Hn}}}Ad}{{{f{Bf}}{En{J`}}}Ad}{{{f{Bf}}{En{Hl}}}Ad}{{{f{Bf}}Fd{f{Df}}}Ad}{{{f{Ad}}FdFd}Ad}{{{f{BMf}}Fd}{{Af{H`}}}}{{{f{Ad}}}Fd}{{{f{Ad}}}Hd}{{{f{Ad}}}Ad}{{{f{BMf}}Fd}{{An{{f{Hh}}}}}}0{{{f{BMf}}FdFd}{{An{{f{Hh}}}}}}0{{{f{BMf}}Fd}H`}0{{{f{Ad}}{f{Bf}}}{{Af{Fh}}}}{{{f{Ad}}{f{Ad}}}{{Af{Fh}}}}{{{f{Ad}}c}{{Af{Fh}}}ANf}1{{{f{Ad}}{f{Bf}}}c{}}1{{{f{BMf}}}d}{{{f{Il}}{f{Bhc}}}bAA`}{{{f{Ad}}{An{Fd}}}Ad}{{{f{Ad}}}{{Af{{f{B@d}}}}}}{{{f{Ad}}}{{Af{{f{B@f}}}}}}{{{f{Ad}}}{{Af{{f{B@h}}}}}}{{{f{Ad}}}{{Af{{f{B@b}}}}}}{{{f{Ad}}}{{Af{{f{Dn}}}}}}`{{{f{Ad}}}{{Af{Dj}}}}{{}Fd}00{ce{}{}}00{AdBAh}1{BBjAd}{AdAd}=={{{f{Ad}}}{{Af{Fh}}}}000{{{f{BMf}}}Fh}0{{}d}00{{{f{Ad}}}Il}{{{f{Ad}}}C@b}{{{f{BMf}}}Fd}{{{f{BMf}}Fd}Ad}0{{{f{Ad}}}{{Af{{f{Dj}}}}}}{{{f{Ad}}c}{{Af{Fh}}}ANf}{{{f{Ad}}{f{Bf}}}c{}}{{{f{Ad}}{f{Ad}}}{{Af{Fh}}}}210{{{f{Ad}}}{{Af{{An{c}}}}}Jj}{{{f{BMf}}}{{Af{Jl}}}}0{{{f{BMf}}}{{An{Jn}}}}0{{{f{Ad}}}Jl}1122322{{Adc}e{A`Jj}{}}{{AdAd}c{}}{{{f{Ad}}c}e{A`Jj}{}}{{{f{Ad}}{f{Ad}}}c{}}=={{{f{BMf}}}{{Af{Fd}}}}0{{{f{BMf}}}{{f{Bf}}}}{{{f{Bf}}{f{Ad}}}Ad}{{{f{Bf}}c}Ad{{Kb{{Db{Kf}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{En{D`}}}}}}}}{{{f{Bf}}{Kh{J`}}}Ad}{{{f{Bf}}c}Ad{{Kb{{Db{Hl}}}}}}{{{f{Bf}}{Kh{Kn}}}Ad}{{{f{Bf}}c}Ad{{Kb{{Db{{An{{AJ`{{Db{D`}}}}}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{Ad}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{Hl}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{AJ`{{Db{D`}}}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{Hn}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{Dh}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{Kf}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{H`}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{Kn}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{{f{{Db{D`}}}}}}}}}}}}{{{f{Bf}}{Kh{Hn}}}Ad}{{{f{Bf}}c}Ad{{Kb{{Db{{f{{Db{D`}}}}}}}}}}{{{f{Bf}}{Kh{Kf}}}Ad}{{{f{Bf}}c}Ad{{Kb{{Db{Jn}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{Ad}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{{AJ`{Bf}}}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{AJ`{Bf}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{{En{D`}}}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{d}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{Kn}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{Hn}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{f{Bf}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{J`}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{Jn}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{d}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{Dh}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{J`}}}}}}{{{f{Bf}}c}AdBBj}{{{f{Bf}}{f{Df}}}Ad}{{{f{BMf}}FdFd}Ad}{{{f{Bf}}Fd}Ad}{{{f{BhC@b}}}{{An{c}}}{}}{{{f{Ad}}{f{Bf}}}{{Af{Fh}}}}{{{f{Ad}}{f{Ad}}}{{Af{Fh}}}}{{{f{Ad}}c}{{Af{Fh}}}ANf}1{{{f{Ad}}c}eANf{}}{{{f{Ad}}{f{Bf}}}c{}}{{{f{Ad}}}{{Af{{f{`}}}}}}{{{f{BMf}}}Fd}`{{{f{Ad}}}C@d}{{{f{Ad}}}{{Af{Jl}}}}{{{f{BMf}}JnLh}{{Af{Jl}}}}0{{{f{BMf}}}Ad}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Jj}{}}{{{f{Ad}}c}e{A`Jj}{}}{{{f{BhBMf}}{f{Bf}}}b}{{{f{BhAd}}{f{Bf}}}{{f{BhAd}}}}{{{f{Ad}}{f{{Db{J`}}}}}{{Af{Ad}}}}6{IlIl}{{{f{BMf}}{f{Cb}}Lj}{{Af{Ad}}}}0{{{f{Ad}}Jndd{An{Hn}}}{{Af{Ad}}}}{{{f{Ad}}Fddd{An{Hn}}}{{Af{Ad}}}}{{{f{Ad}}Fd}Ad}{{{f{BhAd}}Il}b}{{{f{BMf}}J`}Ad}{{{f{BhBMf}}}b}0{{{f{BhAd}}}b}{{{f{Ad}}{An{Hn}}}Ad}{{{f{C@b}}}{{Gj{Fd{An{Fd}}}}}}{{{f{BMf}}J`Fd}Ad}{{{f{Ad}}Dl}{{Af{Ad}}}}{{{f{BMf}}Dl}{{Af{Ad}}}}0{{{f{BMf}}D`}{{An{Jn}}}}0{{{f{BMf}}D`}{{Af{Jl}}}}0{{{f{Ad}}}{{Af{{f{Mh}}}}}}{{{f{Ad}}Fd}{{Af{{AJ`{Bf}}}}}}{{{f{Ad}}{f{Df}}}{{Af{Ad}}}}{{Adc}e{A`Jj}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`Jj}{}}{{AdAd}c{}}{{{f{Ad}}}{{Af{c}}}Jj}{{{f{BMf}}}{{Af{Jl}}}}0{{{f{Ad}}}{{Af{Jl}}}}{{{f{Ad}}{An{Fd}}}Ad}{{{f{BMf}}{f{Dn}}}{{Af{Ad}}}}{{{f{BMf}}{f{{Db{Hb}}}}}{{Af{Ad}}}}{{{f{BMf}}{f{{Db{Hb}}}}}Ad}{{{f{Ad}}{f{{Db{Hb}}}}d}Ad}{{{f{Ad}}{f{Dn}}d}{{Af{Ad}}}}{{{f{BMf}}{f{Dn}}}Ad}{{{f{Ad}}{f{{Db{Hb}}}}}Ad}{{{f{Ad}}{f{Dn}}d}Ad}{{{f{Ad}}Fdd}El}{{{f{Ad}}}{{Af{Ad}}}}{{{f{c}}}e{}{}}0{{{f{Ad}}}{{AJ`{Ad}}}}{{{f{c}}}Dh{}}{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{{AdAd}{{Af{Ad}}}}1{c{{Gd{e}}}{}{}}00{{{Gj{{f{ANh}}El}}}{{Af{Ad}}}}{{{Gj{{f{Bf}}{En{El}}}}}{{Af{Ad}}}}{{{Gj{{f{Bf}}El}}}{{Af{Ad}}}}{{{Gj{{f{ANh}}{En{El}}}}}{{Af{Ad}}}}444656{{{f{BhAd}}{Ff{c}}}dBn}76{{{f{c}}}Ml{}}00{{{f{Ad}}}{{Af{{f{AOn}}}}}}{{{f{Ad}}}{{Af{{f{AN`}}}}}}{{{f{Ad}}}{{Af{{f{B@`}}}}}}{{{f{Ad}}}{{Af{{f{AOl}}}}}}{{{f{BMf}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{Ad}}}}{{{f{BMf}}}{{Af{{f{{l{c}}}}}}}Bn}`{{{f{BMf}}D`}{{An{Jn}}}}0{{{f{BMf}}D`}{{Af{Jl}}}}0{ce{}{}}00{{Ad{f{Bf}}}Ad}{{{f{Ad}}c}Ad{A`Jj}}{{{f{Ad}}{f{Fh}}{f{Ad}}}{{Af{Ad}}}}````{{{C@f{}{{C`{c}}}}{f{Ad}}}c{}}{{{f{C@h}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ah}}}}{f{Ad}}}{{Af{Ad}}}}0`2100210021002100``{{{f{BIf}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Eh}}}}{f{Ad}}}{{Af{Ad}}}}0{{{f{BIf}}c}{{Af{Ad}}}Ab}{{{f{{l{Eh}}}}c}{{Af{Ad}}}Ab}0```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{C@j}}}C@j}{{{f{c}}{f{Bhe}}}b{}{}}{{}C@j}{Fd{{f{c}}}{}}{Fd{{f{Bhc}}}{}}{Fdb}{{{f{C@j}}{f{C@j}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{C@j}}{f{BhFj}}}Fl}{cc{}}{{{f{C@j}}{f{Bhc}}}bAA`}{{}Fd}{ce{}{}}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}3``{{{f{c}}h}b{}}{{{f{BhCf}}}{{f{BhAd}}}}{{{f{Cf}}}{{f{Ad}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Cf}}}Cf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{Cf}}}Ad}{Fd{{f{c}}}{}}{Fd{{f{Bhc}}}{}}{Fdb}{cc{}}{{}Fd}{ce{}{}}{{{f{BhAd}}}Cf}{{{f{BhCf}}{f{BhEl}}}b}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}5{{{f{BhCf}}{f{BhEl}}e}c{}{{Cb{{f{Cf}}}{{C`{c}}}}}}````````{{{f{c}}h}b{}}8{{{En{BAh}}}{{Af{BAh}}}}{c{{Af{BAh}}}{{Gb{}{{B`{BAh}}}}}}{cBAh{{Gb{}{{B`{BAh}}}}}}{c{{An{BAh}}}{{Gb{}{{B`{BAh}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Gj{{AJ`{{l{c}}}}{AJ`{{l{e}}}}}}}BnBn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Gj{{AJ`{{l{c}}}}{AJ`{{l{e}}}}{AJ`{{l{g}}}}}}}BnBnBn}{{{f{BhC@l}}}d}{c{{Af{Df}}}{{Gb{}{{B`{{f{H`}}}}}}}}{c{{Af{{Gj{DfFd}}}}}{{Gb{}{{B`{{f{H`}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{An{Gh}}}BnBn}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{{C@n{ec}}}}}{{C@n{ec}}}Of{Of{Bd{}{{B`{c}}}}}}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{{l{c}}}}{f{{l{c}}}}}{{Gj{{AJ`{{l{c}}}}{AJ`{{l{c}}}}}}}Bn}{{{f{Ad}}{f{Ad}}}{{Gj{AdAd}}}}{C@le{}{{CA`{c}}}}{C@le{}{{CAb{c}}}}{c{{Af{BAh}}}{{Gb{}{{B`{{f{BAh}}}}}}}}{cBAh{{Gb{}{{B`{{f{BAh}}}}}}}}{{{f{BhC@l}}{f{c}}}dBJh}{Fd{{f{c}}}{}}{{{f{{CAd{c}}}}}{{f{e}}}{}{}}1{{{f{{AIf{c}}}}}{{f{e}}}{}{}}2{Fd{{f{Bhc}}}{}}{{{f{Bh{AIf{c}}}}}{{f{Bhe}}}{}{}}11{Fdb}00{cBBh{{Gb{}{{B`{Df}}}}}}{c{{Af{Df}}}{{Gb{}{{B`{{f{Df}}}}}}}}{{{f{{CAd{Ad}}}}{f{{CAd{Ad}}}}}d}{{{f{c}}{f{e}}}d{}{}}00`{{{f{BhC@l}}cg}{{An{c}}}{}{}{{Ch{ce}{{C`{c}}}}}}{cc{}}00{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{c{{AIf{Fh}}}{{Gb{}{{B`{d}}}}}}{c{{AIf{{l{e}}}}}{{Gb{}{{B`{}}}}}n}{eCAb{}{{Gb{}{{B`{c}}}}}}21{c{{AIf{{l{e}}}}}{{Gl{}{{B`{}}}}}n}{c{{AIf{Fh}}}{{Gn{}{{B`{d}}}}}}{c{{AIf{{l{e}}}}}{{Gn{}{{B`{}}}}}n}{{{f{Df}}{f{Df}}}{{An{Df}}}}{{{f{ALb}}{f{ALb}}}ALb}{{{f{Ad}}{f{Ad}}}{{Af{b}}}}{{{f{{CAd{Ad}}}}{f{Bhc}}}bAA`}{{}Fd}00{ce{}{}}00{{{AIf{c}}}c{}}1{BDf{{En{c}}}{}}{c{{En{{CAh{CAf}}}}}{}}{c{{En{Dh}}}{}}{BBdH`}{c{{AIf{c}}}{}}{{eFd}{{C@n{ec}}}{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{C@n{ec}}}}}An{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{C@n{ec}}}}}An{}{{Bd{}{{B`{c}}}}Fb}}`{{{f{{C@n{ec}}}}}{{Gj{Fd{An{Fd}}}}}{}{{Bd{}{{B`{c}}}}}}{{{f{{Db{c}}}}J`Fd}{{f{{Db{c}}}}}{}}{{{f{{l{c}}}}Fd}{{Af{{En{{l{c}}}}}}}Bn}{{{f{BAh}}Fdd}{{En{BAh}}}}{{{f{c}}}e{}{}}{{C@lFd}{{C@n{C@lc}}}{}}{c{{Gd{e}}}{}{}}00{{{f{Df}}{f{Df}}}{{Af{Df}}}}111{{{f{c}}}Ml{}}00{ce{}{}}00{{{f{Df}}e}c{}{{Cb{{f{BhCf}}}{{C`{c}}}}}}{{{f{{Db{{En{c}}}}}}}{{Gj{Fd{En{Fd}}}}}{}}{{{f{BAh}}}{{`{{Bd{}{{B`{BAh}}}}}}}}{{{f{{Db{c}}}}}{{AI`{Hb}}}{{Kb{{Db{Mn}}}}IdIf}}{{{f{{Db{e}}}}}{{En{c}}}{IdIfCd}{{Kb{{Db{c}}}}}}{{{f{Ad}}}{{En{Ad}}}}","D":"JAf","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5187],[5,"ListType",1451],[5,"ChunkedArray",39],[10,"PolarsNumericType",1451],[10,"Num",5188],[10,"ToPrimitive",5189],[5,"Series",4597],[8,"PolarsResult",3878,5190],[10,"NumOpsDispatchInner",4990,5191],[6,"GroupsProxy",3480,5192],[5,"BooleanType",1451],[6,"Option",5193],[17,"Item"],[8,"ArrayBox",5049],[10,"Iterator",5194],[1,"str"],[0,"mut"],[17,"IsNested"],[5,"FalseT",1451],[10,"PolarsDataType",1451],[17,"Output"],[10,"Fn",5195],[10,"Copy",5196],[5,"UnstableSeries",5049],[10,"FnMut",5195],[5,"Float64Type",1451],[5,"Float32Type",1451],[5,"BinaryType",1451],[1,"u8"],[1,"slice"],[5,"StringType",1451],[6,"DataType",1451,5197],[5,"String",5198],[8,"ListChunked",1451],[5,"SortOptions",1368],[8,"IdxCa",1451,5199],[5,"SortMultipleOptions",1368],[8,"BinaryChunked",1451],[10,"PolarsIntegerType",1451],[6,"CastOptions",716],[10,"NumOpsDispatchCheckedInner",5015,5200],[8,"ChunkLenIter",39],[8,"ArrayRef",3878,5201],[5,"Vec",5202],[5,"MetadataProperties",803],[10,"DoubleEndedIterator",5203],[1,"usize"],[5,"Metadata",803],[8,"BooleanChunked",1451],[5,"Formatter",5204],[8,"Result",5204],[10,"Array",5201],[17,"Array"],[10,"IntoIterator",5205],[6,"Result",5206],[10,"FallibleIterator",5207],[5,"Bitmap",5208],[1,"tuple"],[10,"IntoParallelIterator",5209],[10,"TrustedLen",5210],[6,"AnyValue",1451,5211],[8,"IdxSize",3878,5212],[5,"MetadataFlags",803],[5,"ObjectType",1451],[10,"PolarsObjectSafe",1034],[10,"PolarsObject",1034],[1,"f32"],[1,"u64"],[5,"Int128Type",1451],[8,"DecimalChunked",1451,5213],[10,"Send",5196],[10,"Sync",5196],[10,"ExactSizeIterator",5214],[10,"PolarsFloatType",1451],[6,"IsSorted",4597,5215],[10,"PolarsIterator",764],[1,"i64"],[5,"Iter",5216],[1,"fn"],[5,"Map",5217],[6,"ChunkedArrayLayout",39],[10,"NumCast",5189],[5,"Scalar",1451,5211],[1,"f64"],[5,"Arc",3878,5218],[10,"AsRef",5219],[5,"Int32Type",1451],[1,"i32"],[5,"Range",5220],[5,"UInt64Type",1451],[5,"UInt32Type",1451],[1,"u32"],[5,"Int64Type",1451],[5,"Field",1451,5221],[10,"ParallelIterator",5209],[10,"IndexedParallelIterator",5209],[6,"QuantileInterpolOptions",3878,5222],[5,"RollingOptionsFixedWindow",3878,5223],[10,"Sized",5196],[17,"HasViews"],[5,"RandomState",5224],[5,"BytesHash",5225],[8,"ArrayView1",5226],[8,"Array2",5226],[8,"StringChunked",1451],[6,"Either",5227],[5,"TypeId",5228],[5,"NullableIdxSize",3878,5212],[10,"FnOnce",5195],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",430,5229],[10,"ChunkedBuilder",458],[5,"BinViewChunkedBuilder",458,5230],[10,"ViewType",5231],[5,"BooleanChunkedBuilder",458,5232],[5,"NullChunkedBuilder",458,5233],[5,"PrimitiveChunkedBuilder",458,5234],[10,"Clone",5235],[8,"StringChunkedBuilder",458,5230],[8,"BinaryChunkedBuilder",458,5230],[10,"NewChunkedArray",458],[5,"AnonymousListBuilder",562,5236],[5,"AnonymousOwnedListBuilder",562,5236],[5,"ListBooleanChunkedBuilder",562,5237],[5,"ListPrimitiveChunkedBuilder",562,5238],[10,"ListBuilderTrait",562],[5,"ListStringChunkedBuilder",562,5239],[5,"ListBinaryChunkedBuilder",562,5239],[5,"ListNullChunkedBuilder",562,5240],[5,"Box",5241],[10,"Hasher",5242],[10,"ChunkedCollectInferIterExt",744],[10,"ChunkedCollectIterExt",744],[10,"Canonical",758],[10,"ChunkedCollectParIterExt",760],[10,"FromParIterWithDtype",760],[5,"BooleanArray",5243],[5,"BoolIterNoNull",764],[5,"SomeIterator",764],[5,"MetadataEnv",803,5244],[10,"MetadataCollectable",803],[5,"Iter",5245],[5,"IterNames",5245],[5,"File",5246],[5,"Mutex",5247],[6,"MetadataMerge",803],[5,"ObjectArray",1034],[6,"ArrowDataType",1451,5248],[10,"Any",5228],[10,"Debug",5204],[8,"ObjectValueIter",1034],[5,"BitmapIter",5249],[6,"ZipValidity",5250],[5,"ObjectChunkedBuilder",1109],[8,"ObjectChunked",1451],[10,"AnonymousObjectBuilder",1132],[5,"ObjectRegistry",1132],[8,"ObjectConverter",1132],[8,"BuilderConstructor",1132],[17,"FuncRet"],[10,"ChunkApply",1160],[10,"ChunkApplyKernel",1160],[10,"ChunkSort",1160],[10,"ChunkUnique",1160],[10,"ChunkCast",1160],[6,"FillNullStrategy",1160],[10,"ChunkCompare",1160],[10,"ChunkExplode",1160],[5,"OffsetsBuffer",5251],[10,"ChunkFillNullValue",1160],[10,"ChunkFilter",1160],[10,"ChunkFull",1160],[10,"ChunkFullNull",1160],[10,"ChunkAnyValue",1160],[10,"IsFirstDistinct",1160],[10,"IsLastDistinct",1160],[10,"ChunkAgg",1160],[10,"ChunkQuantile",1160],[10,"ChunkExpandAtIndex",1160],[10,"ChunkReverse",1160],[10,"ChunkRollApply",1160],[10,"ChunkSet",1160],[10,"ChunkShift",1160],[10,"ChunkShiftFill",1160],[10,"ChunkVar",1160],[10,"ChunkTake",1160],[10,"ChunkTakeUnchecked",1160],[10,"ChunkBytes",1160],[10,"ChunkZip",1160],[10,"BinaryFnMut",1284],[10,"StaticArray",1451,5252],[10,"TernaryFnMut",1284],[10,"Error",5253],[10,"UnaryFnMut",1284],[5,"PrimitiveArray",5254],[6,"SearchSortedSide",1324],[10,"SlicedArray",3878,5255],[5,"NoNull",5073],[5,"RowsEncoded",5256],[8,"BinaryOffsetChunked",1451],[5,"NaiveDateTime",5257],[6,"PolarsError",3878,5190],[6,"Cow",5258],[8,"Float32Chunked",1451],[8,"Float64Chunked",1451],[10,"ArrayFromIter",1451,5259],[10,"ArrayFromIterDtype",1451,5259],[10,"AsRefDataType",1451,5197],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5260],[10,"From",5219],[5,"CategoricalChunked",2858,5261],[10,"CategoricalMergeOperation",2858,5262],[10,"LogicalType",1451,5263],[5,"Logical",1451,5263],[5,"OwnedObject",1451,5211],[6,"UnknownKind",1451,5197],[6,"TimeUnit",1451,5264],[5,"UInt8Type",1451],[5,"UInt16Type",1451],[5,"Int8Type",1451],[5,"Int16Type",1451],[5,"DateType",1451],[5,"TimeType",1451],[5,"BinaryOffsetType",1451],[5,"DecimalType",1451],[5,"DatetimeType",1451],[5,"DurationType",1451],[5,"CategoricalType",1451],[6,"ArrowTimeUnit",1451],[10,"ArrayCollectIterExt",3878,5259],[8,"Utf8ViewArray",5231],[8,"UInt32Chunked",1451],[5,"Error",5204],[10,"Into",5219],[10,"NumericNative",1451],[5,"ArrowField",3878],[6,"IntegerType",5265],[6,"PrimitiveType",5266],[10,"Borrow",5267],[8,"String",5268],[10,"NoOption",5269],[10,"GetAnyValue",1451,5211],[8,"Int128Chunked",1451],[6,"Ordering",5270],[6,"PhysicalType",5265],[8,"UInt8Chunked",1451],[8,"UInt16Chunked",1451],[8,"UInt64Chunked",1451],[8,"Int8Chunked",1451],[8,"Int16Chunked",1451],[8,"Int32Chunked",1451],[8,"Int64Chunked",1451],[8,"PlIdHashMap",1451,5199],[5,"CategoricalChunkedBuilder",2858,5271],[5,"GlobalRevMapMerger",2858,5262],[6,"RevMapping",2998,5272],[6,"CategoricalOrdering",2998,5272],[5,"CatIter",2858,5261],[1,"u128"],[5,"DataFrame",3189],[5,"StringCacheHolder",3050,5273],[5,"ErrString",3079,5190],[6,"PolarsWarning",3079,5274],[10,"Display",5204],[6,"FloatFmt",3159],[1,"i128"],[1,"char"],[5,"Schema",4523],[10,"IntoSeries",4597,5275],[6,"NullStrategy",3189],[6,"UniqueKeepStrategy",3189],[8,"PlHashSet",1451,5276],[5,"ArrowSchema",3878,5277],[5,"Row",3734],[5,"GroupBy",3480],[5,"RangeFrom",5220],[5,"RangeToInclusive",5220],[5,"RangeFull",5220],[5,"RangeTo",5220],[5,"RangeInclusive",5220],[5,"RecordBatchIter",3189],[5,"PhysRecordBatchIter",3189],[10,"IntoVec",5073],[5,"MeltArgs",3451],[10,"RangeBounds",5220],[8,"SchemaRef",4523],[6,"IndexOrder",3878,5278],[5,"StructArray",5279],[8,"RecordBatch",5280],[5,"GroupsIdx",3480,5192],[8,"IdxVec",5281],[6,"GroupByMethod",3480],[5,"SlicedGroups",3480,5192],[5,"GroupsProxyParIter",3480,5192],[10,"UnindexedConsumer",5282],[6,"GroupsIndicator",3480,5192],[8,"IdxItem",3480,5192],[10,"IntoGroupsProxy",3480,5283],[5,"Copied",5284],[5,"Zip",5285],[5,"GroupsProxyIter",3480,5192],[8,"GroupsSlice",3480,5192],[1,"array"],[8,"DynArgs",3878,5286],[10,"IsFloat",5287],[10,"NativeType",5288],[10,"AggList",3718,5289],[10,"TakeExtremum",3718],[10,"PhysicalAggExpr",3731],[6,"AnyValueBuffer",3734,5290],[6,"AnyValueBufferTrusted",3734,5290],[5,"BinaryArray",5291],[5,"IdHasher",3830,5292],[5,"IdxHash",3830,5292],[5,"HashMap",5293],[10,"BuildHasher",5242],[10,"VecHash",3830,5294],[10,"Allocator",5295],[5,"BorrowedFd",5296],[10,"AsFd",5296],[10,"AsRawFd",5297],[20,"MaybeUninit",5298],[10,"NumOpsDispatchChecked",3878,5200],[5,"ChunkId",3878,5212],[5,"RollingVarParams",3878,5286],[5,"RollingQuantileParams",3878,5286],[6,"NonExistent",3878,5299],[10,"Ord",5270],[10,"Default",5300],[5,"CStr",5301],[5,"Weak",5218],[10,"PartialEq",5270],[10,"Scalar",5302],[5,"Error",5303],[5,"Utf8Error",5304],[5,"TryReserveError",5305],[6,"Error",5306],[1,"never"],[10,"ToOwned",5258],[5,"CString",5307],[5,"OsStr",5308],[5,"OsString",5308],[5,"Path",5309],[5,"PathBuf",5309],[10,"FromData",4446,5310],[5,"Buffer",5311],[10,"FromDataUtf8",4446,5310],[10,"FromDataBinary",4446,5310],[5,"ListArray",5312],[6,"Ambiguous",3878,5299],[10,"NamedFromOwned",3878,5313],[10,"PartialOrd",5270],[10,"PolarsArray",3878,5314],[10,"Hash",5242],[10,"SeriesTrait",4597,5215],[10,"ChunkAggSeries",3878,5315],[10,"QuantileAggSeries",3878,5316],[10,"IndexToUsize",3878,5317],[10,"NamedFrom",3878,5313],[5,"Pin",5318],[5,"Request",5253],[5,"BorrowedCursor",5319],[5,"IoSliceMut",5320],[6,"SeekFrom",5320],[10,"VarAggSeries",3878,5321],[5,"AllocError",5295],[5,"BTreeMap",5322],[5,"IoSlice",5320],[5,"AnonymousBuilder",4452,5323],[5,"Offsets",5251],[5,"MutableNullArray",4475,5324],[5,"MutableBitmap",5325],[5,"Utf8Array",5326],[8,"ArrowSchemaRef",5277],[10,"IndexOfSchema",4523],[8,"Metadata",5248],[5,"SeriesIter",4597,5327],[8,"SeriesPhysIter",4597,5327],[10,"LhsNumOps",4990,5191],[10,"NumOpsDispatch",4990,5191],[6,"NullBehavior",5023],[10,"CustomIterTools",5073,5328],[5,"TrustMyLength",5073,5210],[10,"FromIteratorReversed",5329],[10,"FromTrustedLenIterator",5073,5328],[5,"Wrap",5073],[5,"LazyCompact",5330],[5,"SmartString",5331],[8,"FillNullLimit",1160],[10,"InitHashMaps",1451],[10,"InitHashMaps2",1451],[5,"TrueT",1451],[15,"IO",3144],[15,"Context",3144],[15,"Count",3715],[15,"Slice",3716],[10,"ListFromIter",3878],[10,"Utf8FromIter",4518],[10,"BinaryFromIter",4518]],"r":[[0,5292],[4,5273],[13,5273],[16,5273],[31,5273],[430,5229],[458,5230],[459,5230],[460,5232],[463,5233],[464,5234],[465,5230],[562,5236],[563,5236],[564,5239],[565,5237],[567,5240],[568,5238],[569,5239],[816,5244],[1353,5255],[1368,5255],[1452,5211],[1454,5259],[1455,5259],[1456,5259],[1457,5248],[1459,5197],[1475,5261],[1478,5261],[1479,5271],[1480,5262],[1481,5272],[1483,5197],[1484,5197],[1485,5197],[1496,5213],[1506,5221],[1507,5221],[1522,5211],[1524,5262],[1528,5199],[1529,5317],[1530,5199],[1531,5199],[1532,5276],[1533,5199],[1569,5263],[1570,5263],[1588,5211],[1592,5276],[1593,5276],[1594,5199],[1595,5276],[1596,5276],[1602,5272],[1603,5211],[1605,5252],[1617,5264],[1618,5197],[1645,5197],[1844,5262],[1861,5263],[1937,5197],[2455,5262],[2456,5262],[2468,5197],[2552,5261],[2590,5261],[2858,5261],[2859,5261],[2860,5271],[2861,5262],[2862,5272],[2864,5262],[2868,5272],[2885,5262],[2950,5262],[2951,5262],[2969,5261],[2973,5261],[2998,5272],[3003,5272],[3050,5273],[3056,5273],[3059,5273],[3067,5273],[3069,5272],[3074,5272],[3075,5273],[3076,5273],[3077,5273],[3078,5273],[3085,5190],[3092,5190],[3093,5190],[3094,5274],[3108,5190],[3116,5190],[3123,5274],[3128,5190],[3129,5190],[3130,5190],[3131,5190],[3132,5190],[3133,5274],[3134,5190],[3148,5332],[3149,5332],[3150,5332],[3151,3830],[3480,5192],[3486,5192],[3487,5192],[3488,5192],[3489,5192],[3490,5192],[3491,5192],[3494,5192],[3496,5283],[3508,5192],[3718,5289],[3736,5290],[3737,5290],[3830,5292],[3831,5292],[3832,5292],[3833,5294],[3836,5294],[3837,5294],[3878,5299],[3879,5218],[3880,5229],[3881,5259],[3882,5201],[3884,5277],[3885,5230],[3886,5232],[3888,5261],[3889,5261],[3890,5271],[3891,5262],[3892,5272],[3893,5315],[3894,5212],[3895,39],[3896,458],[3897,744],[3898,744],[3902,3189],[3904,5286],[3908,5310],[3909,5310],[3910,5310],[3912,5262],[3915,5317],[3916,5212],[3917,5278],[3918,5317],[3919,5275],[3920,5073],[3922,5333],[3923,5333],[3924,5333],[3927,5191],[3929,5239],[3930,5237],[3931,562],[3932,5314],[3933,5238],[3934,5239],[3937,3451],[3939,5313],[3940,5313],[3942,458],[3944,5299],[3948,5212],[3949,5212],[3950,5191],[3951,5200],[3955,5314],[3956,5190],[3957,764],[3958,1034],[3959,5190],[3960,5234],[3961,5316],[3962,5222],[3965,5272],[3966,5223],[3967,5286],[3968,5286],[3973,4597],[3974,5215],[3976,5255],[3978,5273],[3980,5230],[3982,3189],[3983,5321],[3984,5294],[4030,5262],[4065,5314],[4068,0],[4081,5314],[4110,0],[4246,5317],[4289,5314],[4291,5262],[4292,5262],[4318,5314],[4324,5190],[4325,5190],[4326,5190],[4327,5190],[4339,5261],[4341,5314],[4347,5261],[4420,5314],[4446,5310],[4447,5310],[4448,5310],[4452,5323],[4475,5324],[4505,5272],[4510,5272],[4511,5255],[4514,5273],[4515,5273],[4516,5273],[4517,5273],[4518,5334],[4519,5334],[4599,1160],[4602,5275],[4603,5215],[4604,5215],[4608,5327],[4609,5327],[4610,5215],[4990,5191],[4991,5191],[4992,5191],[4998,5191],[5015,5200],[5016,5200],[5074,5328],[5075,5328],[5076,5328],[5079,5210],[5090,5335],[5091,5335],[5121,5336],[5122,5337],[5141,5337],[5143,5338],[5156,5337],[5171,5337],[5181,5338]],"b":[[48,"impl-Add-for-%26ChunkedArray%3CT%3E"],[49,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[50,"impl-Add-for-ChunkedArray%3CT%3E"],[51,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[64,"impl-ChunkedArray%3CFloat64Type%3E"],[65,"impl-ChunkedArray%3CFloat32Type%3E"],[70,"impl-ChunkedArray%3CBinaryType%3E"],[71,"impl-ChunkedArray%3CStringType%3E"],[72,"impl-ChunkedArray%3CT%3E"],[119,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[120,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[121,"impl-Div-for-%26ChunkedArray%3CT%3E"],[122,"impl-Div-for-ChunkedArray%3CT%3E"],[130,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[131,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[132,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[133,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[139,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[140,"impl-Debug-for-ChunkedArray%3CT%3E"],[151,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[152,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[153,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[155,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[156,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[184,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[185,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[186,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[187,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[217,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[218,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[219,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[220,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[221,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[222,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[228,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[229,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[230,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[231,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[232,"impl-ChunkedArray%3CBooleanType%3E"],[233,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[235,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[236,"impl-ChunkedArray%3CBooleanType%3E"],[245,"impl-ChunkedArray%3CBooleanType%3E"],[246,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[249,"impl-ChunkedArray%3CBooleanType%3E"],[250,"impl-ChunkedArray%3CT%3E"],[251,"impl-Mul-for-ChunkedArray%3CT%3E"],[252,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[253,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[254,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[258,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[259,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[260,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[261,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[262,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[263,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[264,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[265,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[266,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[267,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[268,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[269,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[270,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[271,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[272,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[273,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[274,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[275,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[276,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[277,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[278,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[279,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[288,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[289,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[290,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[291,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[295,"impl-ChunkedArray%3CStringType%3E"],[296,"impl-ChunkedArray%3CListType%3E"],[297,"impl-ChunkedArray%3CStringType%3E"],[298,"impl-ChunkedArray%3CListType%3E"],[309,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[310,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[311,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[312,"impl-Rem-for-ChunkedArray%3CT%3E"],[336,"impl-Sub-for-ChunkedArray%3CT%3E"],[337,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[338,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[339,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[341,"impl-ChunkedArray%3CBooleanType%3E"],[342,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[345,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[346,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[347,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[348,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[354,"impl-ChunkedArray%3CT%3E"],[355,"impl-ChunkedArray%3CListType%3E"],[360,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[361,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[362,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[363,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[364,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[365,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[392,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[393,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[394,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[395,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[396,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[397,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[398,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[399,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[400,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[401,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[402,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[403,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[409,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[410,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[411,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[426,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[510,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[511,"impl-BinViewChunkedBuilder%3Cstr%3E"],[838,"impl-MetadataProperties"],[839,"impl-Flags-for-MetadataProperties"],[840,"impl-Flags-for-MetadataFlags"],[841,"impl-MetadataFlags"],[908,"impl-UpperHex-for-MetadataProperties"],[909,"impl-Debug-for-MetadataProperties"],[910,"impl-LowerHex-for-MetadataProperties"],[911,"impl-Binary-for-MetadataProperties"],[912,"impl-Octal-for-MetadataProperties"],[913,"impl-Binary-for-MetadataFlags"],[914,"impl-Debug-for-MetadataFlags"],[915,"impl-LowerHex-for-MetadataFlags"],[916,"impl-Octal-for-MetadataFlags"],[917,"impl-UpperHex-for-MetadataFlags"],[925,"impl-Flags-for-MetadataProperties"],[926,"impl-MetadataProperties"],[927,"impl-MetadataFlags"],[928,"impl-Flags-for-MetadataFlags"],[1040,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1041,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1074,"impl-ObjectArray%3CT%3E"],[1075,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1089,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1090,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1100,"impl-ObjectArray%3CT%3E"],[1101,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1103,"impl-ObjectArray%3CT%3E"],[1104,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1106,"impl-Array-for-ObjectArray%3CT%3E"],[1107,"impl-ObjectArray%3CT%3E"],[1110,"impl-ObjectChunkedBuilder%3CT%3E"],[1111,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1113,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1114,"impl-ObjectChunkedBuilder%3CT%3E"],[1684,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1685,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1686,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1687,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1688,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1689,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1690,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1691,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1767,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1768,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1769,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1770,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1771,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[1772,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[2065,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2066,"impl-PartialEq-for-DataType"],[2074,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2075,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2076,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2077,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2080,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2081,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2082,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2083,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2121,"impl-Display-for-AnyValue%3C\'_%3E"],[2122,"impl-Debug-for-AnyValue%3C\'a%3E"],[2124,"impl-Display-for-DataType"],[2125,"impl-Debug-for-DataType"],[2127,"impl-Display-for-TimeUnit"],[2128,"impl-Debug-for-TimeUnit"],[2140,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2141,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2142,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2143,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2145,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2147,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2148,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2149,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2152,"impl-From%3C%26Field%3E-for-Field"],[2153,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2177,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2178,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2181,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2182,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2183,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2185,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2186,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2187,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2188,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2194,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2195,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2197,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2198,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2199,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2200,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2201,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2202,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2210,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2211,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2212,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2213,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2214,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2215,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2304,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2305,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2306,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2307,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2310,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2311,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2312,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2313,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2445,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2446,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2447,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2448,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2451,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2452,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2453,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2454,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2489,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2490,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2491,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2492,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2493,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2494,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2495,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2496,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2497,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2498,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2511,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2512,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2515,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2516,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2517,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2518,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2521,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2522,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2523,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2524,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2602,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2603,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2604,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[2605,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2904,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2905,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2906,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2907,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2908,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2909,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2924,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2925,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2926,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2927,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2928,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2929,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2944,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2945,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2946,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2947,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2948,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2949,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2960,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2961,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2962,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2963,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2964,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2965,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3118,"impl-Display-for-ErrString"],[3119,"impl-Debug-for-ErrString"],[3210,"impl-Add%3C%26Series%3E-for-DataFrame"],[3211,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3212,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3249,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3250,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3251,"impl-Div%3C%26Series%3E-for-DataFrame"],[3281,"impl-Debug-for-DataFrame"],[3282,"impl-Display-for-DataFrame"],[3288,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3289,"impl-From%3C%26Schema%3E-for-DataFrame"],[3316,"impl-Index%3C%26str%3E-for-DataFrame"],[3317,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3318,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3319,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3320,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3321,"impl-Index%3Cusize%3E-for-DataFrame"],[3322,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3323,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3348,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3349,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3350,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3365,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3366,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3367,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3399,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3400,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3401,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3420,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3421,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3592,"impl-Display-for-GroupByMethod"],[3593,"impl-Debug-for-GroupByMethod"],[3600,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3601,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3602,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3636,"impl-IntoIterator-for-GroupsIdx"],[3637,"impl-IntoIterator-for-%26GroupsIdx"],[3639,"impl-IntoParallelIterator-for-GroupsIdx"],[3640,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4001,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4002,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4072,"impl-Default-for-Arc%3Cstr%3E"],[4073,"impl-Default-for-Arc%3CT%3E"],[4074,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4075,"impl-Default-for-Arc%3CCStr%3E"],[4129,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4130,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4131,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4164,"impl-Debug-for-PolarsError"],[4165,"impl-Display-for-PolarsError"],[4168,"impl-Pointer-for-Arc%3CT,+A%3E"],[4169,"impl-Debug-for-Arc%3CT,+A%3E"],[4170,"impl-Display-for-Arc%3CT,+A%3E"],[4181,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4182,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4183,"impl-From%3CError%3E-for-PolarsError"],[4184,"impl-From%3CError%3E-for-PolarsError"],[4188,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4190,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4191,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4192,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4193,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4194,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4195,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4196,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4197,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4198,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4199,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4200,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4202,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4203,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4204,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4541,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4542,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4544,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4545,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4546,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4547,"impl-From%3CArrowSchema%3E-for-Schema"],[4615,"impl-Add%3CT%3E-for-%26Series"],[4616,"impl-Add-for-%26Series"],[4617,"impl-Add-for-Series"],[4618,"impl-Add%3CT%3E-for-Series"],[4680,"impl-Div%3CT%3E-for-Series"],[4681,"impl-Div%3CT%3E-for-%26Series"],[4682,"impl-Div-for-Series"],[4683,"impl-Div-for-%26Series"],[4694,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4695,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4696,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4697,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4698,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4699,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4717,"impl-Debug-for-Series"],[4718,"impl-Display-for-Series"],[4730,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4731,"impl-FromIterator%3C%26bool%3E-for-Series"],[4732,"impl-FromIterator%3C%26i32%3E-for-Series"],[4733,"impl-FromIterator%3Ci64%3E-for-Series"],[4734,"impl-FromIterator%3C%26f32%3E-for-Series"],[4735,"impl-FromIterator%3C%26u32%3E-for-Series"],[4736,"impl-FromIterator%3Ci32%3E-for-Series"],[4737,"impl-FromIterator%3Cbool%3E-for-Series"],[4738,"impl-FromIterator%3Cf32%3E-for-Series"],[4739,"impl-FromIterator%3C%26i64%3E-for-Series"],[4740,"impl-FromIterator%3Cu32%3E-for-Series"],[4741,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4742,"impl-FromIterator%3Cf64%3E-for-Series"],[4743,"impl-FromIterator%3CString%3E-for-Series"],[4744,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4745,"impl-FromIterator%3C%26u64%3E-for-Series"],[4746,"impl-FromIterator%3Cu64%3E-for-Series"],[4747,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4748,"impl-FromIterator%3C%26f64%3E-for-Series"],[4749,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4750,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4751,"impl-FromIterator%3C%26str%3E-for-Series"],[4752,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4753,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[4754,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4755,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[4756,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[4757,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4758,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4771,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4772,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4773,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4774,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4775,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4776,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4814,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4815,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4816,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4817,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4818,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4819,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4833,"impl-Mul%3CT%3E-for-Series"],[4834,"impl-Mul-for-Series"],[4835,"impl-Mul%3CT%3E-for-%26Series"],[4836,"impl-Mul-for-%26Series"],[4842,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[4843,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[4844,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[4845,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[4846,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[4847,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[4848,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[4849,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[4850,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[4851,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[4852,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[4853,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[4854,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[4855,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[4856,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[4857,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[4858,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[4859,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[4860,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[4861,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[4862,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[4863,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[4864,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[4865,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[4866,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[4867,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[4868,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[4869,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[4870,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[4871,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[4872,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[4873,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[4874,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[4875,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[4876,"impl-NamedFrom%3CT,+T%3E-for-Series"],[4881,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4882,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4883,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4884,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4885,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4886,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4895,"impl-Rem-for-%26Series"],[4896,"impl-Rem%3CT%3E-for-Series"],[4897,"impl-Rem%3CT%3E-for-%26Series"],[4926,"impl-Sub%3CT%3E-for-Series"],[4927,"impl-Sub-for-%26Series"],[4928,"impl-Sub%3CT%3E-for-%26Series"],[4929,"impl-Sub-for-Series"],[4955,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4956,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4957,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4958,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5133,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5134,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5136,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5137,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5139,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5140,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAAL0NBA5BDkQORQ5GDkcOSA5NDlAOVQ5WDnsO","e":"OzAAAAEAADgP9AEAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAEAIQAHACoADAA+AAAAQQACAEUABABNAAMAUgAAAFQACwBiAAMAaQACAG0AAQBzAA0AgwADAIgAAQCLAAUAkwABAJcABgCgAAMApgADAKsABQCyAAEAtwAFAL8AAgDFAAQAywADANIAAQDWAAEA2QAGAOUADAD2AAMA/AAFAAMBGQAhAQMAJgEAACgBBAAuAQEANAEAADYBBAA8AQAAQQEFAEkBAQBNAQsAXwEBAGUBAABpAQgAcwEIAH0BAAB/AQUAhwEAAIkBIwCuASkA3AECAOIBIwAMAgUAFgIAABgCJgBBAkwAlQIMAKkCJADRAg0A4AIBAOMCGQAAAwkADAMBABADAQATAykASAMBAE8DEgBmAwwAdQMHAH8DAgCEAwIAiQMNAJ4DAAChAwAApAMBAKoDCwDBAwEAxQMAAMgDAgDPAwMA1AMBANwDCwDuAwMA9AMOAAUEBwAPBBUAJgQHAC8EAAAxBAAANAQCADkEEABLBAAATgQAAFAEAwBVBAEAWAQCAFwEBwBlBAAAZwQFAG8EAQByBAAAdAQBAHcEAwB8BAMAgQQCAIUEAwCLBAAAjgQAAJYEAACbBAAAngQBAKMEAQCmBAAAqQQAALMEAAC8BAIAwgQFAMoEAgDPBAEA0gQAANQEAQDaBAEA3QQBAOQEAQDqBAAA7QQAAPAEAADyBAAA9AQAAPYEAAD7BAQAAgUBAAUFBwAOBQIAFAUAABYFAwAbBQEAHgUFACoFFQBBBQEARQUEAEsFAwBSBQYAXAUPAG4FCwB7BQEAfgUDAI4FCQCkBQ0AtAUCALgFBQDABQAAwgUMANIFAADUBQAA2QUBANwFAADeBQIA4gUAAOQFAADnBQAA6gUAAOwFAQDvBQAA8QUCAPUFDAADBgAABQYBAAgGAAAKBgEADQYAAA8GAQASBgAAFAYBABcGAAAbBgAAHwYBACMGAAAmBgAAKAYAACoGAwAvBgAAMgYIADwGAQA/BgUARgYBAEoGAABMBgAAUQYCAFUGAQBYBgAAWgYBAF0GAABfBgEAYgYAAGQGAQBnBgAAaQYBAGwGAABuBgAAcQY7ALMGBAC6BgkAxgYEAMwGCADWBgAA2AZgADoHTwCLBwcAlAd2AAwIAQAPCEUAXQgDAGIIAABkCAIAaQgBAGwIAACCCAEAhQgXAKEIJADICAYA0QgeAPYIPwA4CQAAXAkKAGkJAABrCQEAbgkBAHEJAAB2CQUAfQkAAIAJAgCFCQMAigkAAIwJHQCrCQkAtgkOAMYJHADkCQYA7AkaAAgKFQAfCgwAMQoAADMKAAA4Ch0AWAoCAFwKUQCvCiwA3QpMACsLBAAxCwEANAsCADgLBAA+CyMAaQsCAG0LCQB7CwMAgAsXAJoLAQCdCwQAowsNALILBQC5CwAAuwsVANILAQDYCwIA3QsBAOELCQDsCwQA8gsBAPcLAAD5CwIA/QsBAAAMAAACDAEACAwEAA4MBAAUDBAAJgwKADMMAwA5DAQAPwwkAGUMBQBsDAkAeQwAAHwMCgCIDAUAkwwQAKYMEwDBDAEAxQwCAMkMAADLDAAA0AwDANkMAgDqDAAA7QwBAPUMDAAIDQEAFQ0CABwNAQAmDQIALg0AADENAAA3DQAAQA0BAEMNAABGDQQAUQ0EAFkNBgBiDQkAbQ0AAHENBAB9DQ0AjA0CAJENCgCdDQEAoA0DAKUNAwCqDQkAtQ0HAL4NAQDBDRgA2w0oAAUOBgARDgMAGA4DAB4OAAAjDgcAMw4NAEIOAQBJDgMATg4BAFIOAgBXDgAAWQ4fAHwODACLDgUAkg4HAJsOFgC0DgsAwQ4OANEOAQDVDgMA3A4GAOYODgD3DgEA+g4RAA4PBAAWDwUAHg8JACkPAgAuDwcANw8LAEQPAwBJDxYAYQ8IAGsPBQByDxYAjA8QAJ4PAACgDwEApA8cAMMPAgDHDxIA2w8GAOUPAQDtDyIAExACABcQCgAjEB0AQxARAFYQBABeEAAAchAAAHgQAAB7EAAAghAAAIUQAACKEAEAjRAGAJYQEQC4EAMAvRACAMEQAQDEEAEA3xACAOUQBADsEAAA7xAHAPkQAAD7EAEAABEtADcRDABFEQAARxEMAFkRCQBlEQYAbREAAG8RHACNEQAAjxELAJwRAACeEQEApxEEAK4RBQC1EQoAwREFAM0RAQDQEQEA1BEBAOgRAADqEQAA7BEAAPARAwD2EQQA/BEDAAESBAAIEgMAERIAABcSAgAfEgUAJhIHADESAwA5EgIAPRIBAEESDwBVEgMAWhIAAFwSAABfEgIAbRIDAHQSAAB3EgEAehIeAJwSAACkEgAAphIAAKgSAQCrEgAAsRIBALQSAgC6EgMAxhIDAM8SAQDSEgEA2hIAAOISAwDrEg0A+hITABATAgAUEwAAFhMBABoTAQAgEwIAJRMAACcTAAArEwIAMhMBADYTAQA9EwAAPxMDAFITAQBVExAAZxMEAHMTAQB5EwIAfRMAAH8TGgCdEwIAohMOALITAQC1EwUAvBMKAMgTAADKEwAAzBMEANITBADYEwQA3xMAAOITAADlEwkA8BMCAPUTDAAEFAUADRQIABcUBQAgFA0ALxQAADEUAgA1FAgAPxQEAA=="}],\
["polars_io",{"t":"KFFKKKNNECNNNNNNNNCMCNNNNNNNNNONNNNNNNNMCMMNNNNNNNNNNCCCOCMMMOCCCCCONNNNNNNNNNCNNGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNOHNNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNHONOOONNNNNNOOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNHNNNNNNNNNFGFFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNNNNNNNHNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNOONNNNHONNNNNNNNNNNNNNOOOOOONONNNNNNNNONNPFPPGFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNKFNNNNNNNNHNNMNNNHNNHFFKKHNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNKKEMMMMNNNJJJJJHHHHHHHH","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriterFactory","__clone_box","__clone_box","async_glob","avro","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cloud","create_writer","csv","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","file_cache","finish","finish","fmt","fmt","from","from","hash","hash","init","init","into","into","ipc","json","mmap","name","ndjson","new","new","next_record_batch","offset","parquet","partition","pl_async","predicates","prelude","schema","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","Deflate","Snappy","Snappy","__clone_box","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","hash","init","init","init","into","into","into","new","new","schema","set_rechunk","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","PolarsObjectStore","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket","build_object_store","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","download","drop","drop","drop","drop","eq","execute","expansion","flush","fmt","fmt","from","from","from","from_url","get","get_range","get_ranges","glob","head","init","init","init","into","into","into","new","new","new","new_with_object_store","options","prefix","queue","scheme","sync_update","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","Bucket","Checksum","Client","Client","Client","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","DisableTagging","Encryption","Endpoint","Endpoint","FederatedTokenFile","File","Gcp","GoogleConfigKey","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","SkipSignature","Token","Token","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_aws","build_azure","build_gcp","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","from_str","from_untyped_config","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","max_retries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_aws","with_azure","with_gcp","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_with_predicate","batched","batched_borrowed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_size","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","columns","comment_prefix","count_rows","decimal_comma","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","dtype_overwrite","encoding","eol_char","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_parse_options","has_header","hash","hash","hash","hash","hash","ignore_errors","infer_file_schema","infer_schema_length","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_reader_with_file_handle","is_compressed","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","next_batches","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_inference","schema_overwrite","separator","serialize","serialize","serialize","serialize","serialize","skip_rows","skip_rows_after_header","to_owned","to_owned","to_owned","to_owned","to_owned","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_parse_dates","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_with_inference_result","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","__clone_box","__clone_box","batch_size","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","date_format","datetime_format","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","float_precision","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","include_bom","include_bom","include_header","include_header","init","init","init","init","init","into","into","into","into","into","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","serialize","serialize","serialize_options","time_format","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FileCacheEntry","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","init","init_entries_from_uri_list","into","to_owned","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","LZ4","ZSTD","__clone_box","__clone_box","__clone_box","__clone_box","arrow_schema","batched","batched_async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compression","count_rows","create_writer","create_writer","data","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","extension","finish","finish","finish","finish","finish","finish_with_scan_ops","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_uri","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","maintain_order","memory_map","memory_mapped","metadata","new","new","new","new","new","new","new_async","schema","schema","serialize","serialize","serialize","set_rechunk","set_rechunk","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_columns","with_compression","with_compression","with_compression","with_compression","with_extension","with_extension","with_n_rows","with_n_rows","with_pl_flavor","with_pl_flavor","with_predicate","with_projection","with_projection","with_projection","with_row_index","with_row_index","with_row_index","with_row_limit","write_batch","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","from","from","hash","infer_schema_len","init","init","init","init","init","into","into","into","into","into","maintain_order","new","new","new","serialize","set_rechunk","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_ignore_errors","with_json_format","with_json_format","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","deref","deref_mut","drop","from","from","init","into","to_bytes","to_file","try_create_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","as_any","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boxed","check_bound","clone","clone_into","data_type","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fields","finish","fmt","from","from","from","from","from_path","get_fields","infer_schema_len","init","init","into","into","into_data","into_iter","iter","len","low_memory","new","new","new_empty","new_null","set_validity","slice","slice","slice_typed","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","try_from","try_from","try_into","try_into","try_new","type_id","type_id","validity","validity","values","values_iter","vzip","vzip","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_rechunk","with_schema","with_schema_overwrite","with_validity","with_validity","metadata","read","write","FileMetaData","FileMetaDataRef","ParquetStatistics","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","column_order","column_orders","created_by","deref","deref","deref_mut","deref_mut","deserialize","distinct_count","drop","drop","eq","fmt","fmt","from","from","from","init","init","into","into","into_thrift","key_value_metadata","key_value_metadata","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","try_from","try_from_thrift","try_into","try_into","type_id","type_id","version","vzip","vzip","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","RowGroups","__clone_box","__clone_box","batched","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finishes_this_batch","fmt","fmt","from","from","from","from","from","from_uri","get_metadata","get_metadata","hash","hash","init","init","init","init","init","into","into","into","into","into","is_finished","iter","limit_reached","low_memory","materialize_empty_df","new","new","next_batches","num_rows","num_rows","parallel","read_parallel","read_parallel","schema","schema","schema","serialize","serialize","set_low_memory","set_rechunk","set_rechunk","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_statistics","use_statistics","use_statistics","vzip","vzip","vzip","vzip","vzip","with_columns","with_hive_partition_columns","with_hive_partition_columns","with_n_rows","with_n_rows","with_predicate","with_predicate","with_projection","with_projection","with_row_index","with_row_index","with_schema","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","batched","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compression","data_pagesize_limit","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distinct_count","drop","drop","drop","drop","drop","drop","drop","drop","empty","encode_and_compress","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","full","get_writer","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","serialize","serialize","serialize","serialize","serialize","set_parallel","statistics","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_row_groups","PartitionedWriter","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","with_parallel","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","apply_predicate","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","column_stats","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","dtype","evaluate_io","fmt","fmt","from","from","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","init","into","into","new","new","null_count","num_rows","schema","serialize","serialize","should_read","to_max","to_min","to_min_max","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SerReader","SerWriter","cloud","finish","finish","new","new","set_rechunk","set_rechunk","set_rechunk","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","POLARS_TEMP_DIR_BASE_PATH","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","get_reader_bytes","get_sequential_row_statistics","is_cloud_url","materialize_projection","resolve_homedir"],"q":[[0,"polars_io"],[81,"polars_io::avro"],[147,"polars_io::cloud"],[218,"polars_io::cloud::options"],[397,"polars_io::csv"],[399,"polars_io::csv::read"],[653,"polars_io::csv::read::schema_inference"],[677,"polars_io::csv::write"],[817,"polars_io::file_cache"],[839,"polars_io::ipc"],[1092,"polars_io::json"],[1188,"polars_io::mmap"],[1210,"polars_io::ndjson"],[1212,"polars_io::ndjson::core"],[1296,"polars_io::parquet"],[1299,"polars_io::parquet::metadata"],[1351,"polars_io::parquet::read"],[1487,"polars_io::parquet::write"],[1703,"polars_io::partition"],[1719,"polars_io::pl_async"],[1740,"polars_io::predicates"],[1794,"polars_io::prelude"],[1804,"polars_io::utils"],[1817,"dyn_clone::sealed"],[1818,"polars_io::options"],[1819,"polars_io::shared"],[1820,"alloc::boxed"],[1821,"std::io"],[1822,"core::result"],[1823,"serde::de"],[1824,"std::path"],[1825,"polars_core::frame"],[1826,"polars_error"],[1827,"core::fmt"],[1828,"core::hash"],[1829,"polars_arrow::record_batch"],[1830,"core::option"],[1831,"serde::ser"],[1832,"core::any"],[1833,"polars_io::avro::read"],[1834,"polars_arrow::datatypes::schema"],[1835,"polars_io::avro::write"],[1836,"polars_core::schema"],[1837,"alloc::string"],[1838,"alloc::vec"],[1839,"polars_io::cloud::glob"],[1840,"object_store"],[1841,"alloc::sync"],[1842,"polars_io::cloud::polars_object_store"],[1843,"object_store::path"],[1844,"tokio::io::async_write"],[1845,"core::marker"],[1846,"polars_io::cloud::adaptors"],[1847,"std::io::error"],[1848,"crossterm::command"],[1849,"url"],[1850,"bytes::bytes"],[1851,"core::ops::range"],[1852,"core::ops::function"],[1853,"parquet_format_safe::thrift::varint::decode"],[1854,"object_store::aws::builder"],[1855,"object_store::azure::builder"],[1856,"object_store::gcp::builder"],[1857,"core::convert"],[1858,"core::iter::traits::collect"],[1859,"polars_io::csv::read::reader"],[1860,"polars_io::csv::read::read_impl::batched"],[1861,"polars_io::csv::read::options"],[1862,"std::fs"],[1863,"polars_core::datatypes::dtype"],[1864,"polars_io::csv::write::writer"],[1865,"polars_io::csv::write::options"],[1866,"core::num::nonzero"],[1867,"polars_io::file_cache::entry"],[1868,"polars_io::ipc::ipc_stream"],[1869,"polars_io::ipc::write"],[1870,"futures_io::if_std"],[1871,"polars_io::ipc::ipc_file"],[1872,"polars_io::ipc::ipc_reader_async"],[1873,"polars_arrow::io::ipc::read::file"],[1874,"polars_arrow::array::struct_"],[1875,"polars_arrow::array"],[1876,"polars_arrow::datatypes"],[1877,"polars_arrow::datatypes::field"],[1878,"polars_arrow::array::struct_::mutable"],[1879,"polars_arrow::array::growable::structure"],[1880,"polars_arrow::bitmap::immutable"],[1881,"polars_arrow::scalar"],[1882,"polars_arrow::array::struct_::iterator"],[1883,"polars_arrow::bitmap::utils::iterator"],[1884,"polars_arrow::bitmap::utils::zip_validity"],[1885,"polars_parquet::parquet::metadata::file_metadata"],[1886,"polars_parquet::parquet::metadata::column_order"],[1887,"polars_parquet::parquet::metadata::row_metadata"],[1888,"polars_parquet::arrow::read::statistics"],[1889,"parquet_format_safe::parquet_format"],[1890,"polars_parquet::parquet::metadata::schema_descriptor"],[1891,"polars_parquet::parquet::error"],[1892,"polars_io::parquet::read::reader"],[1893,"polars_io::parquet::read::read_impl"],[1894,"polars_io::parquet::read::options"],[1895,"polars_core::series"],[1896,"polars_io::parquet::write::writer"],[1897,"polars_io::parquet::write::batched_writer"],[1898,"polars_io::parquet::write::options"],[1899,"polars_parquet::arrow::write"],[1900,"polars_parquet::parquet::write"],[1901,"core::iter::traits::iterator"],[1902,"polars_parquet::arrow::write::file"],[1903,"std::sync::mutex"],[1904,"core::future::future"],[1905,"tokio::runtime::task::join"],[1906,"polars_core::datatypes::field"],[1907,"avro_schema::file"],[1908,"polars_io::cloud::object_store_setup"],[1909,"polars_io::csv::read::parser"],[1910,"polars_io::csv::read::utils"],[1911,"polars_io::file_cache::cache"],[1912,"polars_io::file_cache::utils"],[1913,"polars_io::parquet::read::utils"]],"i":[0,0,0,0,0,0,5,6,0,0,5,6,5,6,5,6,5,6,0,7,0,6,5,6,5,6,5,6,5,6,6,5,6,5,5,5,6,6,6,7,0,16,8,5,6,5,6,5,6,5,6,5,6,0,0,0,5,0,16,8,23,5,0,0,0,0,0,6,5,6,5,6,5,6,5,6,5,6,0,5,6,0,0,0,0,31,31,31,31,31,28,28,32,31,28,32,31,31,31,28,32,31,28,32,31,28,32,31,31,31,31,31,28,32,31,28,32,31,31,28,32,31,28,32,31,28,32,28,28,31,28,32,31,28,32,31,28,32,31,28,32,31,28,32,28,32,28,0,0,0,43,47,39,43,47,39,43,39,0,43,43,39,47,39,43,47,39,43,43,47,47,39,43,39,47,39,47,39,43,47,39,43,39,43,43,43,0,43,47,39,43,47,39,43,47,39,43,47,0,39,47,39,47,43,47,39,43,47,39,43,47,39,43,47,39,43,47,47,61,60,61,0,62,61,63,63,0,60,62,60,60,61,62,61,61,0,0,60,60,61,60,60,60,61,60,60,61,61,63,63,0,63,60,60,61,61,61,60,60,61,60,62,62,60,61,60,61,60,61,61,61,60,60,38,61,62,60,61,62,60,38,63,61,62,60,38,63,61,62,38,38,38,60,38,61,62,60,38,61,62,38,60,38,63,61,62,60,38,63,61,62,60,38,61,62,60,38,63,61,62,60,38,63,61,62,60,60,60,38,38,38,61,61,61,62,62,62,60,38,61,62,60,38,63,61,62,60,63,61,62,38,60,38,61,62,60,38,63,61,62,60,38,63,61,62,38,60,38,61,62,60,38,61,62,60,38,63,61,62,60,38,63,61,62,60,38,63,61,62,60,38,63,61,62,38,38,38,0,0,78,78,0,0,0,0,0,0,76,77,78,0,0,77,76,74,75,76,77,78,68,68,68,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,74,75,76,77,78,74,75,76,77,78,74,75,0,75,74,75,76,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,75,76,77,78,73,72,68,74,75,76,77,78,74,75,75,74,75,76,77,78,74,74,74,75,75,75,76,76,76,77,77,77,78,78,78,68,74,75,76,77,78,73,72,68,74,75,76,77,77,78,74,74,74,75,76,77,78,74,0,74,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,0,74,74,75,74,74,68,77,77,77,73,72,75,74,74,74,75,74,74,74,74,74,0,74,75,74,75,76,77,78,74,74,74,75,76,77,78,75,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,75,73,72,68,74,75,76,77,78,74,73,72,68,74,75,76,77,78,74,74,75,75,74,75,75,74,74,74,74,75,74,74,75,74,74,74,75,74,74,74,74,74,74,75,74,74,75,75,0,81,81,81,81,81,81,81,81,81,81,81,81,81,0,81,81,81,81,81,81,81,81,81,88,0,0,0,88,88,88,0,0,86,87,88,86,84,84,85,86,87,88,84,85,86,87,88,86,87,88,86,87,88,87,87,86,87,88,84,85,86,87,88,84,85,86,87,88,86,87,88,84,85,86,87,88,86,87,88,86,86,86,87,87,87,88,88,88,84,85,87,86,87,88,84,85,86,87,88,86,87,88,84,86,84,86,84,85,86,87,88,84,85,86,87,88,87,86,84,84,87,87,87,87,86,87,88,86,87,86,87,88,84,85,86,87,88,84,85,86,87,88,84,85,86,87,88,84,85,86,87,88,84,84,84,84,84,84,84,84,84,84,85,0,0,90,90,90,90,90,90,90,90,90,90,0,90,90,90,90,90,90,90,90,90,0,0,0,0,0,0,0,0,0,0,0,0,99,99,96,97,98,99,91,92,92,105,100,91,106,103,92,93,104,96,97,98,99,105,100,91,106,103,92,93,104,96,97,98,99,96,97,98,99,96,97,98,99,98,100,103,104,100,103,104,97,98,99,105,100,91,106,103,92,93,104,96,97,98,99,105,100,91,106,103,92,93,104,96,97,98,99,96,98,99,105,100,91,106,103,92,93,104,96,97,98,99,96,98,99,98,98,98,99,99,99,103,104,105,91,106,92,93,105,96,98,99,105,100,91,106,103,92,93,104,96,97,98,99,100,96,98,99,105,100,91,106,103,92,93,104,96,97,98,99,105,100,91,106,103,92,93,104,96,97,98,99,98,96,105,100,105,91,106,103,92,104,92,105,91,96,98,99,105,91,96,97,98,99,105,100,91,106,103,92,93,104,96,97,98,99,105,100,91,106,103,92,93,104,96,97,98,99,105,100,91,106,103,92,93,104,96,97,98,99,105,100,91,106,103,92,93,104,96,97,98,99,105,91,106,103,92,104,103,104,105,91,106,92,97,105,91,97,105,91,97,97,93,0,112,0,112,0,0,0,108,112,109,111,110,108,112,109,111,110,108,108,108,108,112,109,111,110,108,112,109,111,110,108,108,112,109,111,110,108,108,108,108,108,109,110,108,112,109,111,110,108,108,110,112,109,111,110,108,112,109,111,110,108,108,109,111,110,108,110,108,112,109,111,110,108,112,109,111,110,108,112,109,111,110,108,112,109,111,110,108,110,110,109,110,110,110,110,111,83,83,0,83,0,83,83,83,83,83,83,83,83,83,83,70,70,0,83,83,83,83,0,0,0,0,115,115,115,115,115,120,115,120,115,115,115,115,115,115,120,115,120,115,120,115,115,115,115,120,115,120,115,115,115,120,115,120,120,115,120,115,115,115,115,115,120,120,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,120,115,120,115,115,120,115,115,115,115,115,120,115,120,120,120,120,120,120,120,120,115,115,0,0,0,0,0,0,129,132,129,132,129,129,129,129,129,129,132,129,132,129,0,132,132,129,132,132,129,132,132,129,132,129,132,129,129,129,129,132,132,132,129,129,129,129,129,132,129,129,132,129,132,129,129,132,129,142,0,142,142,0,0,0,0,142,141,142,138,140,139,138,140,141,142,139,138,140,141,142,141,142,141,142,142,139,138,140,141,142,139,138,140,141,142,141,142,139,138,140,141,142,141,142,141,141,141,142,142,142,138,140,139,141,142,139,138,140,141,142,140,138,140,141,142,139,138,140,141,142,139,138,140,141,142,139,139,139,141,0,139,138,139,138,140,141,138,140,139,138,140,141,142,138,138,140,141,142,139,138,140,141,142,139,138,140,141,142,139,138,140,141,142,138,140,141,139,138,140,141,142,138,138,140,138,140,138,140,138,140,138,140,138,0,148,0,148,0,148,148,0,0,0,0,148,0,148,148,0,147,148,149,150,151,152,145,146,145,147,148,149,150,151,152,146,145,147,148,149,150,151,152,147,148,149,150,151,152,147,148,149,150,151,152,147,147,147,148,152,146,145,147,148,149,150,151,152,146,145,147,148,149,150,151,152,147,148,149,150,151,152,152,146,145,147,148,149,150,151,152,152,146,147,148,149,150,151,152,147,147,147,148,148,148,149,149,149,150,150,150,151,151,151,152,152,152,146,145,147,148,149,150,151,152,146,145,147,148,149,150,151,152,152,146,147,148,149,150,151,152,146,145,147,148,149,150,151,152,146,145,147,148,149,150,151,152,152,152,147,152,152,145,152,147,147,148,149,150,151,152,145,147,147,148,149,150,151,152,146,145,147,148,149,150,151,152,146,145,147,148,149,150,151,152,149,150,151,146,145,147,148,149,150,151,152,146,145,147,148,149,150,151,152,145,145,145,145,146,146,0,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,0,0,162,162,162,162,162,162,162,162,0,162,162,164,162,162,162,0,162,162,0,0,0,0,0,0,69,168,167,168,167,167,168,167,168,167,168,167,168,167,168,69,168,167,168,167,168,168,168,168,168,167,168,167,168,167,168,167,168,167,167,168,167,166,168,168,168,168,167,168,167,168,167,168,167,0,0,0,16,8,16,8,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{j}}}j}{{{b{l}}}l}{{{b{c}}{b{he}}}f{}{}}0`{{{b{n}}c}{{Ab{A`}}}Ad}`{{}l}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{j}}}Aj}{c{{Ah{l}}}Aj}{Aff}0`{{{b{j}}{b{j}}}Al}{{{b{l}}{b{l}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{n}}}An}`{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{{{b{j}}{b{hBf}}}Bh}{{{b{l}}{b{hBf}}}Bh}{cc{}}0{{{b{j}}{b{hc}}}fBj}{{{b{l}}{b{hc}}}fBj}{{}Af}0{ce{}{}}0`````{cB`Bl}{cA`Ad}{{{b{hBn}}}{{Bd{{Cb{C`}}}}}}```````{{{b{j}}c}AhCd}{{{b{l}}c}AhCd}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0`88````````{{{b{c}}d}f{}}{{{b{h{Ch{c}}}}}{{Bd{Cj}}}{BlCl}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00{{{b{Cn}}}Cn}{{{b{c}}{b{he}}}f{}{}}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{Aff}00{{{b{Cn}}{b{Cn}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{Ch{c}}}{{Bd{Bb}}}{BlCl}}{{{b{h{D`{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{Cn}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}00{{{b{Cn}}{b{hc}}}fBj}{{}Af}00{ce{}{}}00{c{{Ch{c}}}{BlCl}}{c{{D`{c}}}Ad}{{{b{h{Ch{c}}}}}{{Bd{Dd}}}{BlCl}}{{{Ch{c}}Al}{{Ch{c}}}{BlCl}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00777{{{Ch{c}}{Cb{{Dh{Df}}}}}{{Ch{c}}}{BlCl}}{{{D`{c}}{Cb{Cn}}}{{D`{c}}}Ad}{{{Ch{c}}{Cb{Af}}}{{Ch{c}}}{BlCl}}{{{D`{c}}Df}{{D`{c}}}Ad}{{{Ch{c}}{Cb{{Dh{Af}}}}}{{Ch{c}}}{BlCl}}```{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00`{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Ed{Dn{Eb{E`}}}}}}}}{{{b{Ef}}}Ef}{{{b{c}}{b{he}}}f{}{}}{{}Dn}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{{{b{Ef}}{b{Eh}}{b{hc}}}{{Bd{f}}}{EjEl}}{{{b{hEn}}}f}{Aff}00{{{b{Dn}}{b{Dn}}}Al}{{{b{hc}}e}{{Ah{{b{hg}}F`}}}{}Fb{}}`{{{b{hEn}}}{{Fd{f}}}}{{{b{Dn}}{b{hBf}}}Bh}{{{b{Ef}}{b{hBf}}}Bh}{cc{}}00{{{b{Ff}}}{{Bd{Dn}}}}{{{b{Ef}}{b{Eh}}}{{Bd{Fh}}}}{{{b{Ef}}{b{Eh}}{Fj{Af}}}{{Bd{Fh}}}}{{{b{Ef}}{b{Eh}}{b{{Fl{{Fj{Af}}}}}}}{{Bd{{Dh{Fh}}}}}}{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Dh{Df}}}}}}{{{b{Ef}}{b{Eh}}}{{Bd{Fn}}}}{{}Af}00{ce{}{}}00{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{En}}}}{{{b{Dj}}}{{Bd{Dn}}}}{{{Eb{E`}}}Ef}{{{Eb{E`}}Eh}{{Bd{En}}}}``{{{b{hc}}e}{{Ah{{b{hg}}F`}}}{}Fb{}}`{{{b{hc}}i}{{Ah{gF`}}}{}{}{}{{Gb{{b{he}}}{{G`{g}}}}}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00999{{{b{hEn}}{b{{Fl{Gd}}}}}{{Fd{Af}}}}{{{b{hc}}e}{{Ah{AfF`}}}{}Gf}``````````````````````````````````````````````````````{{{b{c}}d}f{}}000{{{b{Gh}}}{{b{Dj}}}}{{{b{Gj}}}{{b{Dj}}}}{{{b{Gl}}}{{b{Dj}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Dl}}{b{Dj}}}{{Bd{{`{E`}}}}}}00{{{b{Gh}}}Gh}{{{b{Dl}}}Dl}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{c}}{b{he}}}f{}{}}000{{}Dl}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Gh}}}Aj}{c{{Ah{Dl}}}Aj}{c{{Ah{Gj}}}Aj}{c{{Ah{Gl}}}Aj}{Aff}0000{{{b{Gh}}{b{Gh}}}Al}{{{b{Dl}}{b{Dl}}}Al}{{{b{Gn}}{b{Gn}}}Al}{{{b{Gj}}{b{Gj}}}Al}{{{b{Gl}}{b{Gl}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000{{{b{Gh}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Dl}}{b{hBf}}}Bh}{{{b{Gj}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Gl}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}0000{{{b{Dj}}}{{Ah{Gh}}}}{{{b{Dj}}}{{Ah{Gnc}}}{}}{{{b{Dj}}}{{Ah{Gj}}}}{{{b{Dj}}}{{Ah{Gl}}}}{{{b{Dj}}g}{{Bd{Dl}}}{{H`{Dj}}}{{Hb{Df}}}{{Hf{}{{Hd{{Ed{ce}}}}}}}}{{{b{Gh}}{b{hc}}}fBj}{{{b{Dl}}{b{hc}}}fBj}{{{b{Gj}}{b{hc}}}fBj}{{{b{Gl}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000`{{{b{Gh}}c}AhCd}{{{b{Dl}}c}AhCd}{{{b{Gj}}c}AhCd}{{{b{Gl}}c}AhCd}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000077777{{Dle}Dl{{Hb{Df}}}{{Hf{}{{Hd{{Ed{Ghc}}}}}}}}{{Dle}Dl{{Hb{Df}}}{{Hf{}{{Hd{{Ed{Gjc}}}}}}}}{{Dle}Dl{{Hb{Df}}}{{Hf{}{{Hd{{Ed{Glc}}}}}}}}`````````````````{{{b{c}}d}f{}}0000{{{Hh{c}}{Cb{{Eb{Hj}}}}}{{Hh{c}}}Hl}{{{Hh{{Ab{Hl}}}}{Cb{Hn}}}{{Bd{I`}}}}{{{b{h{Hh{c}}}}}{{Bd{Ib}}}Hl}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000`{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{Ij}}}Ij}{{{b{Il}}}Il}{{{b{c}}{b{he}}}f{}{}}0000``{{{b{An}}Gd{Cb{Gd}}{Cb{{b{Ij}}}}GdAl}{{Bd{Af}}}}`{{}Id}{{}If}{{}Ih}{Af{{b{c}}}{}}0000000{Af{{b{hc}}}{}}0000000{c{{Ah{Id}}}Aj}{c{{Ah{If}}}Aj}{c{{Ah{Ih}}}Aj}{c{{Ah{Ij}}}Aj}{c{{Ah{Il}}}Aj}{Aff}0000000```{{{b{Id}}{b{Id}}}Al}{{{b{If}}{b{If}}}Al}{{{b{Ih}}{b{Ih}}}Al}{{{b{Ij}}{b{Ij}}}Al}{{{b{Il}}{b{Il}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000{{{Hh{c}}}{{Bd{Bb}}}Hl}{{{b{Id}}{b{hBf}}}Bh}{{{b{If}}{b{hBf}}}Bh}{{{b{Ih}}{b{hBf}}}Bh}{{{b{Ij}}{b{hBf}}}Bh}{{{b{Il}}{b{hBf}}}Bh}{cc{}}000000{{{b{Dj}}}Ij}1{{{b{Id}}}{{Eb{If}}}}`{{{b{Id}}{b{hc}}}fBj}{{{b{If}}{b{hc}}}fBj}{{{b{Ih}}{b{hc}}}fBj}{{{b{Ij}}{b{hc}}}fBj}{{{b{Il}}{b{hc}}}fBj}```{{}Af}0000000{ce{}{}}0000000{{Idc}{{Hh{c}}}Hl}{{{b{{Fl{Gd}}}}}Al}`{{Idc}Id{{In{If}{{G`{If}}}}}}```{c{{Hh{c}}}Hl}<{DfIj}{GdIj}{{{b{hIb}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{hI`}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}`````````````{{{b{Id}}c}AhCd}{{{b{If}}c}AhCd}{{{b{Ih}}c}AhCd}{{{b{Ij}}c}AhCd}{{{b{Il}}c}AhCd}``{{{b{c}}}e{}{}}0000`{c{{Ah{e}}}{}{}}000000000000000{{Id{Cb{An}}}{{Bd{{Hh{J`}}}}}}`{{{b{c}}}Cf{}}0000000{{{b{hId}}{b{Jb}}}f}{ce{}{}}0000000{{IdAf}Id}{{Id{Cb{{Eb{{Dh{Df}}}}}}}Id}{{If{Cb{c}}}If{{Hb{Ij}}}}{{IfAl}If}{{Id{Cb{{Eb{{Dh{Jd}}}}}}}Id}{{IfIh}If}{{IfGd}If}{{IdAl}Id}0{{Id{Cb{Af}}}Id}1500{{If{Cb{Il}}}If}{{IdIf}Id}{{Id{Cb{c}}}Id{{Hb{An}}}}{{Id{Cb{{Eb{{Dh{Af}}}}}}}Id}{{If{Cb{Gd}}}If}66{{Id{Cb{j}}}Id}>{{Id{Cb{Hn}}}Id}09??<<`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{Jb}}}Jb}{{{b{c}}{b{he}}}f{}{}}{{}Jb}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{b{Jb}}{b{hBf}}}Bh}{cc{}}{{{b{Jb}}}Af}{{{b{Jb}}}Hn}{{{b{Jf}}Gd{Cb{Af}}Al{Cb{{b{Dd}}}}AfAf{Cb{{b{Ij}}}}{Cb{Gd}}Gd{Cb{{b{Il}}}}AlAl{b{h{Cb{Af}}}}Al}{{Bd{{Ed{DdAfAf}}}}}}{{}Af}{ce{}{}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}{{{b{Jf}}{b{Id}}}{{Bd{Jb}}}}1{{{b{c}}}Cf{}}4{{JbHn}Jb}`````````{{{b{c}}d}f{}}00`{{{Jh{c}}{b{Dd}}}{{Bd{{Jj{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Jl}}}Jl}{{{b{Jn}}}Jn}{{{b{K`}}}K`}{{{b{c}}{b{he}}}f{}{}}00``{{}Jl}{{}Jn}{{}K`}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Jl}}}Aj}{c{{Ah{Jn}}}Aj}{c{{Ah{K`}}}Aj}{Aff}0000{{{b{Jl}}{b{Jl}}}Al}{{{b{Jn}}{b{Jn}}}Al}{{{b{K`}}{b{K`}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000{{{b{h{Jh{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Jj{c}}}}}{{Bd{f}}}Ad}`{{{b{Jl}}{b{hBf}}}Bh}{{{b{Jn}}{b{hBf}}}Bh}{{{b{K`}}{b{hBf}}}Bh}{cc{}}0000{{{b{Jl}}{b{hc}}}fBj}{{{b{Jn}}{b{hc}}}fBj}{{{b{K`}}{b{hc}}}fBj}{{{Jh{c}}Al}{{Jh{c}}}Ad}`0`{{}Af}0000{ce{}{}}0000``{{{Jh{c}}Af}{{Jh{c}}}Ad}{c{{Jh{c}}}Ad}````{{{b{Jl}}c}AhCd}{{{b{Jn}}c}AhCd}{{{b{K`}}c}AhCd}``{{{b{c}}}e{}{}}00{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Jh{c}}Kb}{{Jh{c}}}Ad}{{{Jh{c}}{Cb{Df}}}{{Jh{c}}}Ad}0{{{Jh{c}}{Cb{Af}}}{{Jh{c}}}Ad}{{{Jh{c}}Df}{{Jh{c}}}Ad}0{{{Jh{c}}Gd}{{Jh{c}}}Ad}{{{Jh{c}}K`}{{Jh{c}}}Ad}14{{{b{h{Jj{c}}}}{b{Bb}}}{{Bd{f}}}Ad}``{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{Kd}}}Kd}{{{b{c}}{b{he}}}f{}{}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{cc{}}{{}Af}{{c{Cb{{b{Dl}}}}}{{Bd{{Dh{{Eb{Kd}}}}}}}{{H`{{Fl{{Eb{Dj}}}}}}}}{ce{}{}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}0{{{b{Kd}}}{{Bd{J`}}}}0{{{b{c}}}Cf{}}{{{b{Kd}}}{{Eb{Dj}}}}5``````````````{{{b{c}}d}f{}}000{{{b{h{Kf{c}}}}}{{Bd{Cj}}}Bl}{{{Kh{c}}{b{Dd}}}{{Bd{{Kj{c}}}}}Ad}{{{Kh{c}}{b{Dd}}}{{Bd{{`{c}}}}}{KlElKn}}{{{b{c}}}{{b{e}}}{}{}}00000000000{{{b{hc}}}{{b{he}}}{}{}}00000000000{{{b{L`}}}L`}{{{b{Lb}}}Lb}{{{b{Ld}}}Ld}{{{b{Lf}}}Lf}{{{b{c}}{b{he}}}f{}{}}000`{{{b{Lh}}{Cb{{b{Lj}}}}}{{Bd{Ll}}}}{{{b{Ln}}c}{{Ab{A`}}}Ad}{{{b{M`}}c}{{Ab{A`}}}Ad}{{{b{Lh}}{Cb{{b{Lj}}}}LbAl}{{Bd{Bb}}}}{{}Ln}{{}M`}{{}Lb}{{}Ld}{{}Lf}{Af{{b{c}}}{}}00000000000{Af{{b{hc}}}{}}00000000000{c{{Ah{L`}}}Aj}{c{{Ah{Ld}}}Aj}{c{{Ah{Lf}}}Aj}{Aff}00000000000{{{b{L`}}{b{L`}}}Al}{{{b{Ld}}{b{Ld}}}Al}{{{b{Lf}}{b{Lf}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{Ln}}}An}{{{b{M`}}}An}{{{Mb{c}}}{{Bd{Bb}}}Hl}{{{Kf{c}}}{{Bd{Bb}}}Bl}{{{b{h{Md{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Kh{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Kj{c}}}}}{{Bd{f}}}Ad}{{{Mb{c}}{Cb{{Eb{Hj}}}}Al}{{Bd{Bb}}}Hl}{{{b{L`}}{b{hBf}}}Bh}{{{b{Ld}}{b{hBf}}}Bh}{{{b{Lf}}{b{hBf}}}Bh}{cc{}}00000000000{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{Lh}}}}{{{b{L`}}{b{hc}}}fBj}{{{b{Ld}}{b{hc}}}fBj}{{{b{Lf}}{b{hc}}}fBj}{{}Af}00000000000{ce{}{}}00000000000``{{{Mb{c}}{Cb{An}}}{{Mb{c}}}Hl}{{{b{Lh}}}{{Bd{Lj}}}}{c{{Mb{c}}}Hl}{c{{Kf{c}}}Bl}{c{{Md{c}}}Ad}{{}Ln}{c{{Kh{c}}}Ad}{{}M`}{c{{Kh{c}}}{KlElKn}}{{{b{h{Mb{c}}}}}{{Bd{Mf}}}Hl}{{{b{h{Kf{c}}}}}{{Bd{Dd}}}Bl}{{{b{L`}}c}AhCd}{{{b{Ld}}c}AhCd}{{{b{Lf}}c}AhCd}{{{Mb{c}}Al}{{Mb{c}}}Hl}{{{Kf{c}}Al}{{Kf{c}}}Bl}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}00000000000000000000000{{{b{c}}}Cf{}}00000000000{ce{}{}}00000000000{{{Mb{c}}{Cb{{Dh{Df}}}}}{{Mb{c}}}Hl}{{{Kf{c}}{Cb{{Dh{Df}}}}}{{Kf{c}}}Bl}{{{Md{c}}{Cb{Lf}}}{{Md{c}}}{}}{{Ln{Cb{Lf}}}Ln}{{{Kh{c}}{Cb{Lf}}}{{Kh{c}}}Ad}{{M`{Cb{Lf}}}M`}{{LnAn}Ln}{{M`An}M`}{{{Mb{c}}{Cb{Af}}}{{Mb{c}}}Hl}{{{Kf{c}}{Cb{Af}}}{{Kf{c}}}Bl}{{{Md{c}}Al}{{Md{c}}}{}}{{{Kh{c}}Al}{{Kh{c}}}Ad}{{Lbc}Lb{{Hb{{Cb{{Eb{Hj}}}}}}}}{{{Mb{c}}{Cb{{Dh{Af}}}}}{{Mb{c}}}Hl}{{{Kf{c}}{Cb{{Dh{Af}}}}}{{Kf{c}}}Bl}{{Lbc}Lb{{Hb{{Cb{{Dh{Df}}}}}}}}{{{Mb{c}}{Cb{j}}}{{Mb{c}}}Hl}{{{Kf{c}}{Cb{j}}}{{Kf{c}}}Bl}{{Lbc}Lb{{Hb{{Cb{j}}}}}}{{Lbc}Lb{{Hb{{Cb{Af}}}}}}{{{b{h{Kj{c}}}}{b{Bb}}}{{Bd{f}}}Ad}```````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Mh}}}Mh}{{{b{c}}{b{he}}}f{}{}}{{}Mh}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Mh}}}Aj}{Aff}0000{{{b{Mh}}{b{Mh}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{b{h{Mj{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{Ml{c}}}{{Bd{Bb}}}Hl}{{{b{Mh}}{b{hBf}}}Bh}{cc{}}0000{{{b{Mh}}{b{hc}}}fBj}{{{Ml{c}}{Cb{Kb}}}{{Ml{c}}}Hl}{{}Af}0000{ce{}{}}0000`{c{{Mj{c}}}Ad}{c{{Mn{c}}}Ad}{c{{Ml{c}}}Hl}{{{b{Mh}}c}AhCd}{{{Ml{c}}Al}{{Ml{c}}}Hl}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Ml{c}}Kb}{{Ml{c}}}Hl}4{{{Mj{c}}N`}{{Mj{c}}}Ad}{{{Ml{c}}N`}{{Ml{c}}}Hl}{{{Ml{c}}{Cb{{Dh{Df}}}}}{{Ml{c}}}Hl}{{{Ml{c}}Hn}{{Ml{c}}}Hl}{{{Ml{c}}{b{Dd}}}{{Ml{c}}}Hl}{{{b{h{Mn{c}}}}{b{Bb}}}{{Bd{f}}}Ad}`````{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{Af{{b{c}}}{}}{{{b{Jf}}}{{b{{Fl{Gd}}}}}}{Af{{b{hc}}}{}}{Aff}{cc{}}{{{b{c}}}JfHl}{{}Af}{ce{}{}}{{{b{Hl}}}{{Cb{{b{{Fl{Gd}}}}}}}}{{{b{Hl}}}{{Cb{{b{J`}}}}}}{{{b{Nb}}}{{Bd{J`}}}}{c{{Ah{e}}}{}{}}0{{{b{c}}}Cf{}}5`{{{b{hc}}{Cb{Kb}}}{{Bd{Dd}}}Nd}``{{{b{c}}d}f{}}{{{b{Nf}}Af}{{Ed{NfNf}}}}{Nf{{Eb{Nh}}}}{{{b{Nf}}}{{b{Nj}}}}{{{b{hNf}}}{{b{hNj}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{Nf{{Ab{Nh}}}}{{{b{Nf}}Af}Al}{{{b{Nf}}}Nf}{{{b{c}}{b{he}}}f{}{}}{{{b{Nf}}}{{b{Nl}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{Aff}0{{{b{Nf}}{b{Nf}}}Al}{{{b{Nf}}{b{{b{Nh}}}}}Al}{{{b{Nf}}}{{b{{Fl{Nn}}}}}}{{{O`{c}}}{{Bd{Bb}}}Hl}{{{b{Nf}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}{ObNf}1{OdNf}{c{{Bd{{O`{J`}}}}}{{Hb{An}}}}{{{b{Nl}}}{{b{{Fl{Nn}}}}}}{{{O`{c}}{Cb{Kb}}}{{O`{c}}}Hl}{{}Af}0{ce{}{}}0{Nf{{Ed{{Dh{Nn}}{Dh{{Ab{Nh}}}}{Cb{Of}}}}}}{{{b{Nf}}}}{{{b{Nf}}}{{On{{Dh{{Ab{Oh}}}}OjOl}}}}{{{b{Nf}}}Af}{{{O`{c}}Al}{{O`{c}}}Hl}{c{{O`{c}}}Hl}{{Nl{Dh{{Ab{Nh}}}}{Cb{Of}}}Nf}{NlNf}{{NlAf}Nf}{{{b{hNf}}{Cb{Of}}}f}{{{b{hNf}}AfAf}f}0{{{b{c}}AfAf}e{}{}}011{{NfAfAf}Nf}0{{{b{Nf}}Af}{{Ed{{Ab{Nh}}{Ab{Nh}}}}}}0{{{b{hNf}}}{{Cb{Of}}}}{{{b{Nf}}}{{Ab{Nh}}}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}000{{Nl{Dh{{Ab{Nh}}}}{Cb{Of}}}{{Ah{NfA@`}}}}{{{b{c}}}Cf{}}0{{{b{Nf}}}{{Cb{{b{Of}}}}}}0{{{b{Nf}}}{{b{{Fl{{Ab{Nh}}}}}}}}{{{b{Nf}}}Oj}{ce{}{}}0{{{O`{c}}{Cb{Kb}}}{{O`{c}}}Hl}{{{O`{c}}Al}{{O`{c}}}Hl}{{{O`{c}}{Cb{Af}}}{{O`{c}}}Hl}0{{{O`{c}}{Cb{e}}}{{O`{c}}}Hl{{Hb{An}}}}2{{{O`{c}}Hn}{{O`{c}}}Hl}{{{O`{c}}{b{Dd}}}{{O`{c}}}Hl}{{Nf{Cb{Of}}}Nf}{{{b{Nf}}{Cb{Of}}}{{Ab{Nh}}}}``````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{A@b}}}A@b}{{{b{c}}{b{he}}}f{}{}}{{{b{A@b}}Af}A@d}``{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{{{b{Nn}}{b{A@f}}}{{Ah{A@hA@`}}}}`{Aff}0{{{b{A@h}}{b{A@h}}}Al}{{{b{A@h}}{b{hBf}}}{{Ah{fDb}}}}{{{b{A@b}}{b{hBf}}}{{Ah{fDb}}}}{A@jA@h}{cc{}}0{{}Af}0{ce{}{}}0{A@bA@l}{{{b{A@b}}}{{b{{Cb{{Dh{A@n}}}}}}}}``````{{{b{A@b}}}{{b{AA`}}}}`{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}0{A@l{{Ah{A@bAAb}}}}11{{{b{c}}}Cf{}}0`77`````````{{{b{c}}d}f{}}0{{{AAd{c}}Af}{{Bd{AAf}}}Hl}{{AAhAf}{{Bd{AAf}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{AAj}}}AAj}{{{b{AAl}}}AAl}{{{b{c}}{b{he}}}f{}{}}0{{}AAl}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{AAj}}}Aj}{c{{Ah{AAl}}}Aj}{Aff}0000{{{b{AAj}}{b{AAj}}}Al}{{{b{AAl}}{b{AAl}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{AAd{c}}}{{Bd{Bb}}}Hl}{AAh{{Bd{Bb}}}}{{{b{AAf}}Af}Al}{{{b{AAj}}{b{hBf}}}Bh}{{{b{AAl}}{b{hBf}}}Bh}{cc{}}0000{{{b{Dj}}{Cb{{b{Dl}}}}{Cb{Mf}}{Cb{AAn}}}{{Bd{AAh}}}}{{{b{h{AAd{c}}}}}{{Bd{{b{AAn}}}}}Hl}{{{b{hAAh}}}{{Bd{{b{AAn}}}}}}{{{b{AAj}}{b{hc}}}fBj}{{{b{AAl}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000{{{b{AAf}}}Al}`0`{{{Cb{{b{{Fl{Af}}}}}}{b{Cj}}{Cb{{b{{Fl{AB`}}}}}}{Cb{{b{j}}}}}Bb}`{c{{AAd{c}}}Hl}{{{b{hAAf}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{h{AAd{c}}}}}{{Bd{Af}}}Hl}{{{b{hAAh}}}{{Bd{Af}}}}`{{{AAd{c}}AAl}{{AAd{c}}}Hl}{{AAhAAl}AAh}{{{b{AAf}}}{{b{Mf}}}}{{{b{h{AAd{c}}}}}{{Bd{Mf}}}Hl}{{{b{hAAh}}}{{Bd{Mf}}}}{{{b{AAj}}c}AhCd}{{{b{AAl}}c}AhCd}{{{AAd{c}}Al}{{AAd{c}}}Hl}0{{AAhAl}AAh}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000043`{ce{}{}}0000{{{AAd{c}}{Cb{{Dh{Df}}}}}{{AAd{c}}}Hl}{{{AAd{c}}{Cb{{Dh{AB`}}}}}{{AAd{c}}}Hl}{{AAh{Cb{{Dh{AB`}}}}}AAh}{{{AAd{c}}{Cb{Af}}}{{AAd{c}}}Hl}{{AAh{Cb{Af}}}AAh}{{{AAd{c}}{Cb{{Eb{Hj}}}}}{{AAd{c}}}Hl}{{AAh{Cb{{Eb{Hj}}}}}AAh}{{{AAd{c}}{Cb{{Dh{Af}}}}}{{AAd{c}}}Hl}{{AAh{Cb{{Dh{Af}}}}}AAh}{{{AAd{c}}{Cb{j}}}{{AAd{c}}}Hl}{{AAh{Cb{j}}}AAh}{{{AAd{c}}{Cb{Mf}}}{{AAd{c}}}Hl}````````````````{{{b{c}}d}f{}}00000{{{ABb{c}}{b{Dd}}}{{Bd{{ABd{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000{{{b{ABf}}}ABf}{{{b{ABh}}}ABh}{{{b{ABj}}}ABj}{{{b{ABl}}}ABl}{{{b{ABn}}}ABn}{{{b{AC`}}}AC`}{{{b{c}}{b{he}}}f{}{}}00000``{{}ABf}{{}ABh}{{}AC`}{Af{{b{c}}}{}}0000000{Af{{b{hc}}}{}}0000000{c{{Ah{ABf}}}Aj}{c{{Ah{ABh}}}Aj}{c{{Ah{ABj}}}Aj}{c{{Ah{ABl}}}Aj}{c{{Ah{ABn}}}Aj}{c{{Ah{AC`}}}Aj}`{Aff}00000009{{{b{{ABd{c}}}}{b{Bb}}}{{`{{ACd{}{{Hd{{Bd{{ACb{A@`}}}}}}}}}}}Ad}{{{b{ABf}}{b{ABf}}}Al}{{{b{ABh}}{b{ABh}}}Al}{{{b{ABj}}{b{ABj}}}Al}{{{b{ABl}}{b{ABl}}}Al}{{{b{ABn}}{b{ABn}}}Al}{{{b{AC`}}{b{AC`}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000000{{{b{{ABd{c}}}}}{{Bd{ACf}}}Ad}{{{ABb{c}}{b{hBb}}}{{Bd{ACf}}}Ad}{{{b{ABf}}{b{hBf}}}Bh}{{{b{ABh}}{b{hBf}}}Bh}{{{b{ABj}}{b{hBf}}}Bh}{{{b{ABl}}{b{hBf}}}Bh}{{{b{ABn}}{b{hBf}}}Bh}{{{b{AC`}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}0000000{{}AC`}{{{b{{ABd{c}}}}}{{b{{ACj{{ACh{c}}}}}}}Ad}{{{b{ABf}}{b{hc}}}fBj}{{{b{ABh}}{b{hc}}}fBj}{{{b{ABj}}{b{hc}}}fBj}{{{b{ABl}}{b{hc}}}fBj}{{{b{ABn}}{b{hc}}}fBj}{{{b{AC`}}{b{hc}}}fBj}{{}Af}0000000{ce{}{}}0000000{{{b{AC`}}}Al}0```{c{{ABb{c}}}{AdAd}}``{{{b{ABf}}c}AhCd}{{{b{ABh}}c}AhCd}{{{b{ABj}}c}AhCd}{{{b{ABl}}c}AhCd}{{{b{ABn}}c}AhCd}{{{b{AC`}}c}AhCd}{{{ABb{c}}Al}{{ABb{c}}}Ad}`{{{b{c}}}e{}{}}00000{c{{Ah{e}}}{}{}}000000000000000{Gd{{Bd{ABj}}}}{ACl{{Bd{ABl}}}}{ACn{{Bd{ABn}}}}{{{b{c}}}Cf{}}0000000????????{{{ABb{c}}ABh}{{ABb{c}}}Ad}{{{ABb{c}}{Cb{Af}}}{{ABb{c}}}Ad}0{{{ABb{c}}AC`}{{ABb{c}}}Ad}{{{b{h{ABd{c}}}}{b{Bb}}}{{Bd{f}}}Ad}{{{b{{ABd{c}}}}{Dh{{ACb{A@`}}}}}{{Bd{f}}}Ad}`{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{AD`{c}}{b{Bb}}}{{Bd{f}}}{nKnADb}}{cc{}}{{}Af}{ce{}{}}{{cei}{{AD`{c}}}{nKnADb}{{Hb{An}}}{{H`{Dj}}}{{Hf{}{{Hd{g}}}}}}{c{{Ah{e}}}{}{}}0{{{b{c}}}Cf{}}3{{{AD`{c}}Al}{{AD`{c}}}{nKnADb}}``{{{b{ADd}}c}{}ADf}{{{b{ADd}}c}{}{ADfKn}}>=<;:8{{}{{b{ADd}}}}87{{{b{ADh}}}ACf}{{{b{ADd}}c}ADj{ADfKn}}77{{ACle}{}ADf{{Gb{}{{G`{c}}}}}}7:0````{{{b{hBb}}{Cb{{b{Hj}}}}Al}{{Bd{f}}}}{{{b{Hj}}}{{Cb{{b{ADl}}}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{ADn}}}{{b{{Fl{AE`}}}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{AE`}}}Aj}{c{{Ah{ADn}}}Aj}{Aff}0{{{b{AE`}}}{{b{Jd}}}}{{{b{Hj}}{b{Bb}}}{{Bd{AB`}}}}{{{b{AE`}}{b{hBf}}}Bh}{{{b{ADn}}{b{hBf}}}Bh}{cc{}}0{AB`AE`}{AEbAE`}{{{b{AE`}}}{{Cb{{b{AB`}}}}}}00{{{b{ADn}}{b{Dj}}}{{Bd{{b{AE`}}}}}}{{}Af}0{ce{}{}}0{{AEb{Cb{AB`}}{Cb{AB`}}{Cb{AB`}}}AE`}{{Hn{Dh{AE`}}{Cb{Af}}}ADn}{{{b{AE`}}}{{Cb{Af}}}}{{{b{ADn}}}{{Cb{Af}}}}{{{b{ADn}}}{{b{Hn}}}}{{{b{AE`}}c}AhCd}{{{b{ADn}}c}AhCd}{{{b{ADl}}{b{ADn}}}{{Bd{Al}}}};;{{{b{AE`}}}{{Cb{AB`}}}}{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0;;```{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{cB`Bl}{cA`Ad}{{B`Al}B`}00`````{{{b{Cj}}{b{Cj}}{Cb{{b{{Fl{Df}}}}}}{b{Dj}}}{{Bd{f}}}}{{{b{Dd}}{b{Dd}}{Cb{{b{{Fl{Df}}}}}}{b{Dj}}}{{Bd{f}}}}0{{{b{hc}}}{{Bd{Jf}}}{BlHlAEd}}{{cAf}{{Dh{{Ed{AfAf}}}}}{{ACd{}{{Hd{Af}}}}}}{cAl{{H`{Nb}}}}{{{Cb{{b{{Fl{Df}}}}}}{b{Dd}}{Cb{{b{{Fl{AB`}}}}}}Al}{{Cb{{Dh{Af}}}}}}{{{b{Nb}}}An}","D":"CKl","p":[[1,"reference"],[5,"Private",1817],[1,"unit"],[0,"mut"],[5,"RowIndex",0,1818],[5,"HiveOptions",0,1818],[10,"WriterFactory",0,1819],[10,"SerWriter",1794,1819],[5,"Box",1820],[10,"Write",1821],[1,"usize"],[6,"Result",1822],[10,"Deserializer",1823],[1,"bool"],[5,"PathBuf",1824],[10,"SerReader",1794,1819],[5,"DataFrame",1825],[8,"PolarsResult",1826],[5,"Formatter",1827],[8,"Result",1827],[10,"Hasher",1828],[10,"Read",1821],[10,"ArrowReader",0,1819],[8,"RecordBatch",1829],[6,"Option",1830],[10,"Serializer",1831],[5,"TypeId",1832],[5,"AvroReader",81,1833],[5,"ArrowSchema",1834],[10,"Seek",1821],[6,"AvroCompression",81],[5,"AvroWriter",81,1835],[5,"Error",1827],[5,"Schema",1836],[5,"String",1837],[5,"Vec",1838],[1,"str"],[5,"CloudOptions",218],[5,"CloudLocation",147,1839],[10,"ObjectStore",1840],[5,"Arc",1841],[1,"tuple"],[5,"PolarsObjectStore",147,1842],[5,"Path",1843],[10,"AsyncWrite",1844],[10,"Unpin",1845],[5,"CloudWriter",147,1846],[5,"Error",1847],[10,"Command",1848],[8,"Result",1847],[5,"Url",1849],[5,"Bytes",1850],[5,"Range",1851],[1,"slice"],[5,"ObjectMeta",1840],[17,"Output"],[10,"FnOnce",1852],[1,"u8"],[10,"VarInt",1853],[6,"AmazonS3ConfigKey",218,1854],[6,"AzureConfigKey",218,1855],[6,"GoogleConfigKey",218,1856],[6,"CloudType",218],[10,"AsRef",1857],[10,"Into",1857],[17,"Item"],[10,"IntoIterator",1858],[5,"CsvReader",399,1859],[10,"PhysicalIoExpr",1740],[10,"MmapBytesReader",1188],[8,"SchemaRef",1836],[5,"OwnedBatchedCsvReader",399,1860],[5,"BatchedCsvReader",399,1860],[5,"CsvReadOptions",399,1861],[5,"CsvParseOptions",399,1861],[6,"CsvEncoding",399,1861],[6,"CommentPrefix",399,1861],[6,"NullValues",399,1861],[10,"Fn",1852],[5,"File",1862],[5,"SchemaInferenceResult",653],[6,"DataType",1863],[6,"ReaderBytes",1188],[5,"CsvWriter",677,1864],[5,"BatchedWriter",677,1864],[5,"CsvWriterOptions",677,1865],[5,"SerializeOptions",677,1865],[6,"QuoteStyle",677,1865],[8,"NonZeroUsize",1866],[5,"FileCacheEntry",817,1867],[5,"IpcStreamReader",839,1868],[5,"IpcWriter",839,1869],[5,"BatchedWriter",839,1869],[10,"AsyncWrite",1870],[10,"Send",1845],[5,"IpcScanOptions",839,1871],[5,"IpcReadOptions",839,1872],[5,"IpcWriterOptions",839,1869],[6,"IpcCompression",839,1869],[5,"IpcReaderAsync",839,1872],[5,"FileMetadata",1873],[1,"i64"],[5,"IpcStreamWriterOption",839,1868],[5,"IpcWriterOption",839,1869],[5,"IpcReader",839,1871],[5,"IpcStreamWriter",839,1868],[8,"ArrowSchemaRef",1834],[5,"JsonWriterOptions",1092],[5,"JsonWriter",1092],[5,"JsonReader",1092],[5,"BatchedWriter",1092],[6,"JsonFormat",1092],[5,"Path",1824],[10,"BufRead",1821],[5,"StructArray",1212,1874],[10,"Array",1875],[10,"Any",1832],[6,"ArrowDataType",1876],[5,"Field",1877],[5,"JsonLineReader",1212],[5,"MutableStructArray",1878],[5,"GrowableStruct",1879],[5,"Bitmap",1880],[10,"Scalar",1881],[5,"StructValueIter",1882],[5,"BitmapIter",1883],[6,"ZipValidity",1884],[6,"PolarsError",1826],[5,"FileMetaData",1299,1885],[6,"ColumnOrder",1886],[5,"RowGroupMetaData",1887],[5,"ParquetStatistics",1299],[5,"MutableStatistics",1888],[5,"FileMetaData",1889],[5,"KeyValue",1889],[5,"SchemaDescriptor",1890],[6,"Error",1891],[5,"ParquetReader",1351,1892],[5,"BatchedParquetReader",1351,1893],[5,"ParquetAsyncReader",1351,1892],[5,"ParquetOptions",1351,1894],[6,"ParallelStrategy",1351,1894],[8,"FileMetaDataRef",1299],[5,"Series",1895],[5,"ParquetWriter",1487,1896],[5,"BatchedWriter",1487,1897],[5,"ParquetWriteOptions",1487,1898],[6,"ParquetCompression",1487,1898],[5,"GzipLevel",1487,1898],[5,"BrotliLevel",1487,1898],[5,"ZstdLevel",1487,1898],[5,"StatisticsOptions",1487,1899],[8,"RowGroupIterColumns",1487,1900],[10,"Iterator",1901],[1,"u64"],[5,"FileWriter",1902],[5,"Mutex",1903],[1,"u32"],[1,"i32"],[5,"PartitionedWriter",1703],[10,"Sync",1845],[5,"RuntimeManager",1719],[10,"Future",1904],[10,"GetSize",1719],[5,"JoinHandle",1905],[10,"StatsEvaluator",1740],[5,"BatchStats",1740],[5,"ColumnStats",1740],[5,"Field",1906],[10,"Sized",1845]],"r":[[0,1819],[1,1818],[2,1818],[3,1819],[4,1819],[5,1819],[82,1833],[83,1835],[84,1907],[147,1839],[148,1846],[149,1842],[158,1908],[186,1839],[221,1854],[226,1855],[250,1856],[401,1860],[402,1861],[403,1861],[404,1861],[405,1861],[406,1859],[410,1861],[411,1860],[451,1909],[531,653],[550,1910],[678,1864],[679,1864],[680,1865],[684,1865],[685,1865],[817,1911],[818,1867],[829,1912],[839,1869],[840,1869],[841,1872],[842,1871],[843,1872],[844,1871],[845,1868],[846,1868],[847,1868],[848,1869],[849,1869],[850,1869],[1213,1874],[1299,1885],[1316,1888],[1352,1893],[1355,1894],[1356,1892],[1357,1894],[1358,1892],[1433,1913],[1487,1897],[1489,1898],[1491,1898],[1494,1898],[1495,1898],[1496,1896],[1497,1900],[1499,1899],[1502,1898],[1794,1819],[1795,1819],[1796,0]],"b":[[1234,"impl-PartialEq-for-StructArray"],[1235,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1240,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1242,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1260,"impl-Array-for-StructArray"],[1261,"impl-StructArray"],[1264,"impl-Array-for-StructArray"],[1265,"impl-StructArray"],[1280,"impl-StructArray"],[1281,"impl-Array-for-StructArray"],[1294,"impl-StructArray"],[1295,"impl-Array-for-StructArray"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADsFqgAAAAEAAwAPABQAAAAWABMAKwACADAAAwA2AAAAOAACADwAAgBBABAAWgAAAFwAFwB3AAMAfgABAIEADQCSAAAAlwAGAKAADgCxAAIAtwADAL0AAgDFAAAAxwAAAMwADgDhAAEA7QAAAPkAAQD8AAAAEQEQACUBMABbAQMAYAEIAG4BHACSAQQAmwEBAJ8BJADFATcA/gEEAAoCAAAMAhEAKAIAACoCAgAxAisAXgIIAGgCBwCAAgAAjgIKAJoCAQCdAgAAnwIGAKcCAACvAhQAxgIhAOoCAgDyAgIA9gIAAPgCBQAEAwIACwMDABADFgAyAwkAPQMBAEADAgBFAwMASgMAAE0DAABQAwAAUgMBAFYDAwBbAyEAfgM+AL4DAwDOAw8A6wMAAO0DBwD3AzgAOgQCAD8EAABCBAEARQQAAEsEIwBwBAAAdgQAAHgEBACEBBgAnwQBAKUEAQCoBAcAsQQBALQEAQC3BAYAvwQBAMIEBQDJBAsA1gQBANkEAADbBAAA3gQCAOQEAADmBAAA7QQAAO8EAgD1BAEA+AQFAP8EAQACBQAABQUBAAkFBQAQBQAAFQUAABcFBgAhBQMAJwUFAC8FAQA9BQIAQQUDAEYFAQBJBQAATAUAAE4FAABRBTAAhwUJAJYFAACYBQMAnQUAAJ8FAQCiBQEApQUCAKkFEgC+BQUAxQUBAMgFAgDMBQAAzgUAANAFAQDTBQAA1QUBANgFAADaBQEA3QUBAOAFIgAFBjsAQwYFAFEGDwBpBgEAbAYBAG8GAABxBgUAeQYoAKcGAACpBgUAsAYAALIGBAC4BgIAvAYEAMIGAQDFBgAAxwYFAM8GAgDTBgMA2AYHAOIGAQDsBgEA9QYCAPsGCgAHBwAACQcAAA0HBAAUBwEAGAcBAA=="}],\
["polars_lazy",{"t":"CQCCCCPPGPPPPPPPPPPPPPFPPPPPPPPKPGPPPPGFPPPFFPPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPFPPPPPPPPPGPPPGKFPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPGPPPPPGPPPPPPPPPPGPPPPPPPPPPKPPPPPPPPFPPPPPPPPKKPPPPPPPPPPFPPPPPPPGPPPPPPFPFPPPPPGPFPPPPPPPPPPPPPPPPPPPKPPPPFPPPPFPPGGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNOONHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNHNHNONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOIFKFFKFFFFIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNOOOONNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNOONNNOONNNNNNNMNNNNNNNNNNNNNNNNNNNNNNONNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNONNMNNOOOONNNNNNNNOMNNMNNCOONOONMNNOONNNNOOMNNOOONNNNNNNNONNNNNNNOONNNNNNONOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNMNNMNNNNNNMNNNMNNNNNNNNNNNNNNNNNNHHCCFKNNNNNMNNNNNNNNHKFFPPPPPPPFPPPPPGFPFPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPFKPPGFFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNOOOONONOOOOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","utils","Abs","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","BinaryExpr","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","DateOffset","Datetime","DatetimeArgs","DatetimeFunction","Day","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","Exp","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","List","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","Operator","Or","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Replace","ReplaceTimeZone","Reshape","Reverse","Reverse","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","Selector","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Slice","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructNameSpace","SubPlan","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithTimeUnit","Xor","Year","ZFill","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_into_selector","_selector_add","_selector_and","_selector_sub","abs","add","agg_groups","alias","all","all","all","all","all_horizontal","allow_parallel","ambiguous","and","any","any","any","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_sort","arg_sort_by","arg_unique","arg_where","args","args","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","binary","binary_expr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","bottom_k_by","business_day_count","cache","call","call","call_udf","call_udf","call_unchecked","cast","cast","cast_with_options","cat","cat","cbrt","ceil","clip","clip_max","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","contains","cos","cosh","cot","count","count_matches","count_matches","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","cumulative_eval","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","default","default","default","default","default","default","default","default","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","div","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","dt","dt","dtype_col","dtype_cols","duration","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","first","first","flatten","float_type","floor","floor_div","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_exprs","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_type","fun","function_expr","function_with_options","functions","gather","gather","gather_every","gather_every","get","get","get","get_categories","get_field","get_field","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","head","hist","hour","hours","implode","index_cols","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_list_name_space","into_list_name_space","into_tree_formatter","is_between","is_column","is_column_selection","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","is_not_null","is_null","is_null","is_regex_projection","is_simple_projection","is_unique","join","join","json_encode","keep","kurtosis","last","last","last","len","len","len","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","max","max","max","max_horizontal","mean","mean","mean","mean_horizontal","median","median","median","median","meta","microsecond","microseconds","milliseconds","min","min","min","min","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","n_unique","n_unique","name","name","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","new","new","new","new","nodes","nodes_owned","not","not","nth","null_count","options","or","otherwise","otherwise","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","quantile","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","reshape","return_type","reverse","reverse","reverse","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","sample_n","search_sorted","second","seconds","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","shift","shift","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","slice","sort","sort","sort","sort_by","spearman_rank_corr","sqrt","std","std","std","str","strict","strict_cast","string","struct_","sub","suffix","suffix_fields","sum","sum","sum","sum","sum_horizontal","super_type","tail","tail","tan","tanh","ternary_expr","then","then","time_ranges","time_unit","time_unit","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_struct","to_struct","to_uppercase","top_k","top_k_by","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udf","undo_aliases","union","unique","unique","unique","unique_counts","unique_stable","unique_stable","unique_stable","upper_bound","value_counts","var","var","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","when","when","when","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","with_hms","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","descending","descending","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","DateOffset","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","Nanosecond","Negate","Not","NullCount","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RepeatBy","Replace","Replace","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithTimeUnit","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","ignore_nulls","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","descending","descending","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","time_unit","time_zone","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonUdfExpression","__clone_box","borrow","borrow","borrow_mut","borrow_mut","call_udf","call_udf","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_output","init","init","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","try_serialize","type_id","type_id","vzip","vzip","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","OptState","PathIterator","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_collect_post_opt","_with_eager","agg","allow_parallel","allows_projection_pushdown","anonymous_scan","anti_join","apply","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","cache","cache","cache","cancel","cast","cast_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloud_options","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","coalesce","collect","collect_concurrently","comm_subexpr_elim","comm_subexpr_elim","comm_subplan_elim","comm_subplan_elim","concat_impl","concat_impl","concat_impl","count","cross_join","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nulls","eager","eager","explain","explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","file_caching","file_caching","fill_nan","fill_null","filter","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","first","fmt","force_parallel","from","from","from","from","from","from","from","from","from","from","from","from","full_join","get_current_optimizations","glob","glob","glob","glob","group_by","group_by_dynamic","group_by_stable","head","hive_options","how","infer_schema_length","init","init","init","init","init","init","init","init","init","init","inner_join","into","into","into","into","into","into","into","into","into","into","iter_paths","iter_paths","join","join_builder","join_nulls","last","lazy","lazy","left_join","left_on","limit","logical_plan","logical_plan","low_memory","low_memory","map","map_python","max","mean","median","melt","memory_map","merge_sorted","min","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","name","new","new","new","new_paths","new_paths","null_count","on","optimize","parallel","path","path","path","paths","paths","paths","pivot","predicate_pushdown","predicate_pushdown","profile","projection_pushdown","projection_pushdown","quantile","rechunk","rechunk","rechunk","rechunk","rechunk","rename","reverse","right_on","rolling","row_estimate","row_estimate","row_index","row_index","row_index","row_index","row_index","row_index","scan","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema","schema","schema_with_arenas","select","select_seq","semi_join","set_cached_arena","shift","shift_and_fill","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","slice_pushdown","slice_pushdown","sort","sort_by_exprs","std","streaming","streaming","suffix","sum","tail","tail","to_alp","to_alp_optimized","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_k","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique","unique_stable","unnest","use_statistics","validate","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_batch_size","with_cache","with_cloud_options","with_cluster_with_columns","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_null_values","with_optimizations","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_schema","with_schema","with_schema_modify","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","executors","planner","Dummy","Executor","borrow","borrow_mut","deref","deref_mut","drop","execute","execute","from","init","into","try_from","try_into","type_id","vzip","create_physical_plan","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Dense","Distinct","DslPlan","Duration","Duration","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","Null","OneToMany","OneToOne","Ordinal","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","cmp","coalesce","compare","compression","compression","compute_schema","data_pagesize_limit","days","days_only","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","describe","describe_tree_format","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diagonal","display","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_str","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_partitioned_ds","get_datatype","group_by_dynamic","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","how","include_bom","include_boundaries","include_header","index_column","index_column","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_asof","is_constant_duration","is_full_days","is_valid_join","is_zero","join_nulls","label","lit","lit","lit","lit","maintain_order","maintain_order","maintain_order","maintain_order","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","new","offset","offset","output_schema","parallel","parse","parsed_int","partial_cmp","period","period","predicate","rechunk","rolling","row_group_size","scan","schema","schema","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","suffix","to_alp","to_any_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_supertypes","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","weeks_only","with_coalesce","with_columns","with_suffix","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","selection","slice","sort_options","version","data_type","high","low"],"q":[[0,"polars_lazy"],[6,"polars_lazy::dsl"],[1468,"polars_lazy::dsl::AggExpr"],[1475,"polars_lazy::dsl::BooleanFunction"],[1478,"polars_lazy::dsl::Expr"],[1513,"polars_lazy::dsl::FunctionExpr"],[1557,"polars_lazy::dsl::StringFunction"],[1577,"polars_lazy::dsl::TemporalFunction"],[1579,"polars_lazy::dsl::binary"],[1599,"polars_lazy::dsl::cat"],[1600,"polars_lazy::dsl::dt"],[1656,"polars_lazy::dsl::function_expr"],[1863,"polars_lazy::dsl::function_expr::BooleanFunction"],[1866,"polars_lazy::dsl::function_expr::FunctionExpr"],[1910,"polars_lazy::dsl::function_expr::StringFunction"],[1930,"polars_lazy::dsl::function_expr::TemporalFunction"],[1932,"polars_lazy::dsl::function_expr::cat"],[1934,"polars_lazy::dsl::function_expr::pow"],[1938,"polars_lazy::dsl::function_expr::rolling"],[1970,"polars_lazy::dsl::function_expr::rolling_by"],[2001,"polars_lazy::dsl::function_expr::trigonometry"],[2043,"polars_lazy::dsl::functions"],[2118,"polars_lazy::dsl::python_udf"],[2163,"polars_lazy::dsl::string"],[2224,"polars_lazy::dsl::udf"],[2230,"polars_lazy::frame"],[2669,"polars_lazy::frame::pivot"],[2671,"polars_lazy::physical_plan"],[2673,"polars_lazy::physical_plan::executors"],[2689,"polars_lazy::physical_plan::planner"],[2690,"polars_lazy::prelude"],[3282,"polars_lazy::prelude::DslPlan"],[3337,"polars_lazy::prelude::LiteralValue"],[3340,"dyn_clone::sealed"],[3341,"polars_plan::dsl::meta"],[3342,"polars_plan::dsl::expr"],[3343,"polars_error"],[3344,"core::result"],[3345,"polars_plan::dsl::array"],[3346,"polars_plan::dsl::list"],[3347,"core::convert"],[3348,"polars_plan::dsl::expr_dyn_fn"],[3349,"alloc::sync"],[3350,"polars_core::series"],[3351,"core::option"],[3352,"core::ops::function"],[3353,"core::marker"],[3354,"polars_plan::logical_plan::visitor"],[3355,"polars_plan::dsl::function_expr"],[3356,"polars_core::datatypes::dtype"],[3357,"polars_core::chunked_array::ops::sort::options"],[3358,"polars_plan::dsl::function_expr::schema"],[3359,"polars_core::datatypes::field"],[3360,"core::any"],[3361,"alloc::vec"],[3362,"polars_plan::dsl::binary"],[3363,"core::clone"],[3364,"alloc::string"],[3365,"polars_plan::dsl::udf"],[3366,"polars_core::chunked_array::cast"],[3367,"polars_plan::dsl::cat"],[3368,"polars_plan::dsl::arity"],[3369,"polars_plan::dsl::function_expr::boolean"],[3370,"polars_plan::dsl::function_expr::cat"],[3371,"polars_plan::dsl::function_expr::datetime"],[3372,"polars_plan::dsl::function_expr::pow"],[3373,"polars_plan::dsl::function_expr::strings"],[3374,"polars_plan::dsl::functions::temporal"],[3375,"polars_plan::dsl::options"],[3376,"polars_core::utils"],[3377,"polars_lazy::dsl::eval"],[3378,"polars_time::windows::duration"],[3379,"polars_time::windows::group_by"],[3380,"polars_core::datatypes::time_unit"],[3381,"serde::de"],[3382,"polars_plan::logical_plan"],[3383,"polars_core::series::ops"],[3384,"polars_plan::dsl::dt"],[3385,"polars_lazy::dsl::list"],[3386,"polars_arrow::legacy::kernels::ewm"],[3387,"polars_plan::dsl::struct_"],[3388,"polars_core::chunked_array::ops"],[3389,"core::fmt"],[3390,"polars_plan::logical_plan::apply"],[3391,"polars_plan::dsl::function_expr::list"],[3392,"polars_plan::dsl::function_expr::binary"],[3393,"polars_plan::dsl::function_expr::business"],[3394,"polars_plan::dsl::function_expr::struct_"],[3395,"polars_plan::dsl::function_expr::array"],[3396,"polars_plan::dsl::function_expr::range"],[3397,"polars_plan::logical_plan::options"],[3398,"polars_core::schema"],[3399,"core::hash"],[3400,"polars_ops::series::ops::interpolation::interpolate"],[3401,"polars_ops::series::ops::is_between"],[3402,"polars_plan::dsl::name"],[3403,"polars_plan::logical_plan::lit"],[3404,"polars_plan::dsl::python_udf"],[3405,"polars_utils::idx_vec"],[3406,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3407,"polars_ops::series::ops::rank"],[3408,"polars_time::group_by::dynamic"],[3409,"polars_core::chunked_array::ops::rolling_window"],[3410,"polars_core::datatypes"],[3411,"polars_core::chunked_array"],[3412,"polars_time::chunkedarray::rolling_window"],[3413,"polars_core::chunked_array::ops::search_sorted"],[3414,"serde::ser"],[3415,"polars_core::series::series_trait"],[3416,"polars_plan::dsl::string"],[3417,"polars_ops::chunked_array::list::to_struct"],[3418,"polars_ops::series::ops::business"],[3419,"polars_arrow::legacy::kernels::time"],[3420,"polars_plan::dsl::function_expr::rolling"],[3421,"polars_plan::dsl::function_expr::rolling_by"],[3422,"polars_plan::dsl::function_expr::trigonometry"],[3423,"polars_core::frame"],[3424,"rayon::iter"],[3425,"pyo3::types::any"],[3426,"pyo3::instance"],[3427,"polars_utils::arena"],[3428,"polars_plan::logical_plan::alp"],[3429,"polars_plan::logical_plan::aexpr"],[3430,"polars_lazy::scan::ndjson"],[3431,"polars_plan::logical_plan::anonymous_scan"],[3432,"polars_lazy::scan::anonymous_scan"],[3433,"polars_utils::index"],[3434,"polars_lazy::frame::exitable"],[3435,"polars_utils::aliases"],[3436,"polars_lazy::scan::csv"],[3437,"polars_lazy::scan::ipc"],[3438,"polars_lazy::scan::parquet"],[3439,"polars_plan::frame::opt_state"],[3440,"polars_lazy::scan::file_list_reader"],[3441,"polars_io::cloud::options"],[3442,"polars_ops::frame::join::args"],[3443,"core::iter::traits::collect"],[3444,"polars_core::frame::explode"],[3445,"std::path"],[3446,"polars_io::options"],[3447,"polars_io::csv::write::options"],[3448,"polars_io::ipc::write"],[3449,"polars_io::json"],[3450,"polars_io::parquet::write::options"],[3451,"smartstring::alias"],[3452,"core::num::nonzero"],[3453,"polars_io::csv::read::options"],[3454,"polars_lazy::physical_plan::executors::executor"],[3455,"polars_expr::state::execution_state"],[3456,"alloc::boxed"],[3457,"chrono_tz::timezones"],[3458,"core::cmp"],[3459,"polars_core::frame::group_by::proxy"],[3460,"polars_core::datatypes::any_value"],[3461,"chrono::naive::datetime"],[3462,"polars_plan::dsl::functions::selectors"],[3463,"polars_plan::dsl::functions::horizontal"],[3464,"polars_plan::dsl::functions::arity"],[3465,"polars_plan::dsl"],[3466,"polars_plan::dsl::functions::range"],[3467,"polars_plan::dsl::functions::index"],[3468,"polars_plan::dsl::functions::coerce"],[3469,"polars_plan::dsl::functions::syntactic_sugar"],[3470,"polars_plan::dsl::functions::business"],[3471,"polars_plan::dsl::functions::concat"],[3472,"polars_plan::dsl::functions::correlation"],[3473,"polars_plan::dsl::functions::repeat"],[3474,"polars_lazy::physical_plan::planner::lp"]],"i":[0,0,0,0,0,0,27,5,0,36,5,55,55,40,5,55,55,27,27,27,67,27,0,27,27,27,59,59,57,5,27,0,27,0,27,5,57,27,0,0,58,27,57,0,0,27,27,5,5,57,27,59,59,59,57,27,36,59,27,27,27,27,27,27,57,57,27,57,0,57,57,27,40,27,27,54,5,57,0,59,27,40,40,27,27,27,27,5,0,27,5,66,0,0,0,27,59,59,59,5,0,0,27,27,5,59,36,27,40,27,5,0,0,27,5,27,58,56,0,66,40,40,27,59,59,59,27,57,36,5,27,27,0,55,55,55,55,55,55,55,57,55,55,55,55,55,57,66,0,59,59,5,27,36,5,59,59,67,27,0,0,5,27,27,40,40,27,59,40,40,36,27,36,27,36,0,57,57,57,36,27,40,57,27,40,57,57,57,40,36,54,57,27,0,55,40,40,5,27,0,40,57,65,59,59,27,27,27,40,27,0,27,36,57,27,27,27,27,27,27,5,0,27,59,27,57,27,59,27,65,0,27,27,57,27,27,27,57,5,0,0,27,27,27,27,27,27,5,59,5,5,0,59,59,59,58,59,36,27,0,59,59,59,59,59,59,0,27,0,5,36,27,59,27,0,5,0,57,57,59,59,59,27,57,27,27,57,57,57,57,57,57,57,27,40,57,0,27,27,27,59,0,27,36,57,57,0,5,5,0,0,57,40,57,59,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,4,4,4,4,5,5,5,5,0,9,10,5,0,64,60,5,9,10,5,0,5,5,0,5,5,5,0,5,0,5,5,5,5,5,5,5,9,10,5,9,10,5,5,0,5,0,32,64,5,34,36,0,0,5,0,5,0,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,5,5,0,63,44,46,34,47,46,0,5,5,0,5,5,5,5,5,5,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,0,0,0,0,0,0,9,10,5,5,5,5,9,10,0,5,0,5,5,5,0,5,70,70,5,0,0,0,0,60,61,62,5,17,17,17,60,61,63,64,65,66,5,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,36,5,54,40,17,17,17,55,56,57,58,59,27,62,63,64,65,66,67,10,5,5,5,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,5,10,5,0,5,0,0,0,5,36,5,5,54,40,17,17,55,56,57,58,59,27,62,63,64,65,66,67,5,5,5,5,54,54,54,40,40,40,55,55,55,56,56,56,57,57,57,58,58,58,59,59,59,62,62,62,63,63,63,64,64,64,65,65,65,66,66,66,67,67,67,82,82,5,5,5,5,63,5,5,5,5,5,84,84,84,5,5,5,5,0,10,5,5,17,5,5,34,47,44,88,5,5,54,40,40,17,55,55,56,56,57,57,58,58,59,59,27,27,60,61,62,63,64,65,66,67,46,0,64,63,0,5,49,9,32,10,4,108,84,50,51,52,53,36,5,5,5,5,5,5,5,5,5,5,5,5,5,5,54,40,17,17,17,17,17,17,17,17,17,17,17,17,55,56,57,58,59,27,27,27,27,27,60,61,62,63,64,65,65,66,67,46,17,46,0,5,0,10,5,10,5,9,10,5,49,76,15,32,34,88,5,5,4,36,5,5,54,40,55,56,57,58,59,27,62,63,64,65,66,67,10,5,5,60,61,5,0,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,46,0,0,5,5,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,5,105,10,4,5,4,4,5,5,5,5,5,5,5,5,0,5,0,5,4,4,5,9,10,84,108,5,0,10,5,0,10,5,5,0,5,5,5,5,5,5,5,108,5,0,5,32,32,17,17,5,17,108,17,5,0,5,5,0,32,5,32,32,32,32,0,9,10,5,0,0,10,5,0,0,9,10,5,5,60,61,61,0,9,10,5,0,62,60,61,5,60,5,9,10,5,5,46,5,5,61,5,5,5,32,32,17,60,61,46,5,5,0,5,0,5,46,5,51,53,4,5,5,5,5,5,0,5,4,5,108,108,5,0,5,5,0,5,5,5,0,5,5,84,0,5,5,32,5,46,9,10,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,64,64,17,5,10,10,5,5,60,61,36,5,54,40,17,17,17,55,56,57,58,59,27,62,63,64,65,66,67,10,10,5,10,9,10,5,5,5,5,5,5,5,5,10,5,9,10,5,5,0,5,9,10,5,5,63,5,0,5,5,108,108,0,9,10,5,0,17,10,5,5,5,0,50,52,0,60,61,60,10,5,9,108,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,5,32,5,40,55,56,57,58,59,27,9,10,108,5,5,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,32,32,5,32,34,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,0,4,10,9,10,5,5,9,10,5,5,5,9,10,5,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,61,0,51,53,62,60,60,61,32,84,61,60,61,60,61,60,61,61,60,61,60,61,32,32,60,61,60,60,61,60,5,60,201,202,203,201,202,203,201,204,205,206,207,208,209,209,210,211,207,212,213,214,215,216,212,211,214,208,217,216,218,217,217,218,209,210,214,215,216,215,216,215,213,211,218,207,213,219,220,221,222,223,224,225,226,227,228,229,230,230,222,223,219,222,223,219,223,219,231,232,224,233,234,235,220,234,236,237,238,239,235,219,240,241,242,243,244,245,236,233,235,246,247,248,249,250,251,246,247,252,249,250,251,253,254,255,255,252,248,253,254,256,256,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,27,55,55,55,55,27,27,27,27,27,27,27,59,59,57,27,27,0,27,57,27,0,58,27,57,27,27,57,27,59,59,59,57,27,59,27,27,27,27,27,27,57,57,27,57,57,57,27,27,27,57,59,27,27,27,27,27,27,27,59,59,59,27,27,59,27,27,0,27,27,58,56,27,59,59,59,27,57,27,27,55,55,55,55,55,55,55,57,55,55,55,55,55,57,59,59,27,59,59,27,27,27,27,59,27,27,57,57,57,27,57,27,57,57,57,57,27,55,27,57,59,59,27,27,27,27,0,27,57,27,27,27,27,27,27,27,59,27,57,27,59,27,27,27,57,27,27,27,57,27,27,27,27,27,27,59,59,59,59,58,59,27,0,59,59,59,59,59,59,27,27,59,27,0,57,57,59,59,59,27,57,27,27,57,57,57,57,57,57,57,27,57,27,27,27,59,27,57,57,57,57,59,0,0,0,0,0,204,205,206,219,220,221,222,223,224,225,226,227,228,229,230,230,222,223,219,222,223,219,223,219,231,232,224,233,234,235,220,234,236,237,238,239,235,219,240,241,242,243,244,245,236,233,235,246,247,248,249,250,251,246,247,252,249,250,251,253,254,255,255,252,248,253,254,256,256,0,56,58,58,0,58,130,130,130,130,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,131,131,131,131,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,61,0,0,0,0,0,60,61,0,0,0,0,0,0,0,0,0,60,61,61,0,60,61,60,61,0,0,0,0,0,0,0,60,61,0,0,0,0,60,61,60,61,60,0,0,0,0,139,111,139,111,139,111,139,139,139,111,139,111,139,139,111,139,139,139,139,139,139,111,139,139,111,111,139,111,139,111,139,139,111,139,111,139,111,111,139,111,139,0,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,0,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,154,136,147,151,156,157,149,158,159,136,136,147,148,149,136,136,147,149,148,154,136,147,151,156,157,149,158,159,148,154,136,147,151,156,157,149,158,159,136,136,157,158,154,136,136,154,136,147,151,156,157,149,158,159,154,136,147,151,156,157,149,158,159,160,160,157,158,169,159,148,136,136,169,159,169,159,160,160,156,136,136,136,151,157,158,159,148,154,136,147,151,156,157,149,158,159,148,154,136,147,151,156,157,149,158,159,136,136,136,136,148,154,154,136,136,147,151,156,157,149,158,159,136,169,159,136,136,169,159,154,136,154,169,159,136,136,136,148,160,160,156,160,156,149,136,159,148,148,154,136,136,136,147,151,156,157,149,158,159,136,136,160,160,156,158,136,136,136,147,158,148,151,148,154,136,147,151,156,157,149,158,159,136,148,154,136,147,151,156,157,149,158,159,160,160,136,136,148,136,168,136,136,148,136,136,147,149,158,136,136,136,136,136,136,157,136,136,160,156,149,151,157,158,151,148,156,149,156,149,136,148,136,158,160,156,149,160,156,149,0,169,159,136,169,159,136,160,156,149,157,158,136,136,148,136,169,159,160,156,149,151,157,158,149,136,136,136,136,136,136,149,151,136,136,136,136,136,136,136,169,159,136,136,136,136,136,136,151,136,169,159,136,136,136,169,159,148,136,136,147,136,136,136,154,136,147,151,156,157,149,158,159,136,148,154,136,147,151,156,157,149,158,159,148,154,136,147,151,156,157,149,158,159,169,159,148,154,136,147,151,156,157,149,158,159,136,136,136,158,148,136,148,154,136,147,151,156,157,149,158,159,148,149,156,156,136,136,136,136,136,136,156,136,156,156,156,156,156,156,156,149,156,149,156,156,160,156,156,149,149,156,136,160,156,149,160,156,149,136,136,156,156,160,156,149,136,160,136,156,156,149,149,156,149,156,156,136,156,156,136,136,156,156,136,136,0,0,0,0,0,0,189,189,189,189,189,187,189,189,189,189,189,189,189,189,0,0,0,0,165,165,192,193,193,78,165,0,78,193,193,192,78,0,0,193,0,78,78,193,193,193,165,78,78,78,78,165,193,193,193,193,193,0,78,0,0,0,0,165,0,0,183,183,78,192,192,0,0,193,183,183,192,0,0,78,193,0,0,0,78,78,165,193,78,78,78,193,193,193,193,193,193,193,78,0,164,116,73,176,167,165,183,177,178,192,115,179,193,194,138,78,73,73,73,150,150,150,150,176,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,194,138,78,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,194,138,78,164,116,73,176,167,165,183,177,178,192,115,179,193,194,138,78,164,116,73,176,167,165,183,177,178,192,115,179,193,194,138,78,164,116,73,167,73,177,179,78,179,73,73,164,116,176,167,183,177,178,115,179,194,138,78,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,194,138,78,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,194,138,78,115,78,78,164,116,73,176,167,165,183,177,178,192,115,179,193,194,138,78,138,78,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,194,138,78,164,116,73,176,167,165,183,177,178,192,115,179,193,194,138,164,164,164,116,116,116,73,73,73,176,176,176,167,167,167,165,165,165,183,183,183,177,177,177,178,178,178,179,179,179,194,194,194,138,138,138,164,164,116,73,73,150,176,167,165,165,183,183,177,178,192,115,179,193,194,138,194,164,116,73,174,176,167,167,165,183,198,177,178,192,115,179,193,194,138,78,138,193,196,164,116,73,176,167,165,183,177,178,192,115,179,193,194,138,167,176,164,176,164,116,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,194,138,78,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,194,138,78,165,73,73,183,73,167,164,109,73,198,193,176,177,178,179,193,115,73,73,73,174,73,183,73,73,73,167,164,116,174,138,73,73,73,164,116,174,138,196,179,150,150,174,164,116,73,176,167,165,183,177,178,192,115,179,193,194,138,78,176,167,194,167,164,179,167,167,78,193,164,116,73,176,167,165,183,177,178,192,115,179,193,194,138,78,73,165,183,138,73,73,73,73,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,193,194,138,78,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,194,138,78,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,194,138,78,167,164,116,73,174,176,167,165,183,198,177,178,192,115,179,193,194,138,78,73,73,167,174,167,257,257,258,259,260,261,262,263,264,265,266,266,267,260,268,260,264,257,265,269,259,270,267,261,271,272,272,258,273,257,272,270,257,263,270,274,264,257,272,265,269,273,262,266,271,268,266,262,272,266,262,262,259,259,263,275,275,275],"f":"```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}00000000000000000000000{hj}{{hj}{{n{jl}}}}00{jj}{{jj}}1{{j{b{A`}}}j}{{}j}{Abj}{Adj}{{jAf}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}``{{jc}j{{Al{j}}}}4321{{jcAf}j{{Al{j}}}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{j}}{b{C`c}}b}{{n{Cbl}}}{{Cd{{b{j}}b}{{Bf{{n{Cbl}}}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}{{ce{Bb{{B`{An}}}}Af}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}?{{jjChCj}j}{jj}0000{{jj}j}1>=1>=1{{jCl}j}{{cCn}j{{Aj{{Ah{j}}}}}}3{cj{{Al{j}}}}{{{b{D`}}}{{b{{Ah{Db}}}}}}`{jAb}{{{b{Dd}}}{{b{Df}}}}{{{b{Dh}}}{{b{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{j{Bh{Dl}}}j}`{jDn}{{jE`j}j}{{{b{c}}}{{b{e}}}{}{}}000000000000000000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000000000000000000000000>{{jcg{Dj{Af}}}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{{jj{Ed{Af}}{Dj{Ef}}}j}`{{{b{Eh}}{b{A`}}}{{n{Ejl}}}}{{El{Dj{j}}}{{n{jl}}}}{{{b{Dd}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{En}}BdBd}{{n{Bdl}}}}{{El{Dj{j}}}j}{{jCj}j}0{{jCjF`}j}`{jFb}{jj}0{{jjj}j}{{jj}j}0{{{b{Fd}}}Fd}{{{b{Ff}}}Ff}{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Dh}}}Dh}{{{b{j}}}j}{{{b{Fl}}}Fl}{{{b{E`}}}E`}{{{b{{Bb{c}}}}}{{Bb{c}}}Eb}{{{b{Fn}}}Fn}{{{b{G`}}}G`}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Cf}}}Cf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{El}}}El}{{{b{c}}{b{C`e}}}f{}{}}00000000000000000000000{{{b{{Ah{j}}}}}j}{{{b{A`}}}j}{cj{{Hh{Ej}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{Abc}j{{Al{j}}}}{{Adc}j{{Al{j}}}}{jj}00021{{jjHj}j}{{jAf}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}111{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}2{{HljHnAf}j}0{{j{Dj{I`}}{Bh{{Dj{Ej}}}}AfAf}j}{{jjIbId}j}{Ghj}{{jjIbId{Bh{If}}{Bh{Ej}}}j}0```{{}j}{{}{{Bb{{B`{Ih}}}}}}{{}{{Bb{{B`{An}}}}}}{{}{{Bb{{B`{En}}}}}}{{}Gh}{{}Gj}{{}Gn}{{}H`}{{}Hb}{{}Hd}{jj}{Hn{{b{c}}}{}}000000000000000{{{b{{Bb{c}}}}}b{}}111111111111111{Hn{{b{C`c}}}{}}000000000000000000000000000000{c{{n{Dh}}}Ij}{c{{n{j}}}Ij}{c{{n{Fl}}}Ij}{c{{n{E`}}}Ij}{c{{n{{Bb{{B`{Il}}}}}}}Ij}{c{{n{{Bb{Bd}}}}}Ij}{c{{n{{Bb{{B`{Dd}}}}}}}Ij}{c{{n{Fn}}}Ij}{c{{n{G`}}}Ij}{c{{n{Gb}}}Ij}{c{{n{Gd}}}Ij}{c{{n{Gf}}}Ij}{c{{n{Cf}}}Ij}{c{{n{Gl}}}Ij}{c{{n{Gn}}}Ij}{c{{n{H`}}}Ij}{c{{n{Hb}}}Ij}{c{{n{Hd}}}Ij}{c{{n{Hf}}}Ij}{{AdChIn}j}{{jChIn}j}{{jj}}{{jc}j{{Al{j}}}}{Hnf}000000000000000000000000000000{jj}{Adj}1`{jJ`}{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Gjj}{{jI`Af}j}{{{b{Dh}}{b{Dh}}}Af}9{{{b{j}}{b{j}}}Af}{{{b{Fl}}{b{Fl}}}Af}{{{b{E`}}{b{E`}}}Af}{{{b{{Bb{{B`{c}}}}}}{b{{Bb{{B`{c}}}}}}}AfJb}{{{b{{Bb{Bd}}}}{b{{Bb{Bd}}}}}Af}{{{b{Fn}}{b{Fn}}}Af}{{{b{G`}}{b{G`}}}Af}{{{b{Gb}}{b{Gb}}}Af}{{{b{Gd}}{b{Gd}}}Af}{{{b{Gf}}{b{Gf}}}Af}{{{b{Cf}}{b{Cf}}}Af}{{{b{Gl}}{b{Gl}}}Af}{{{b{Gn}}{b{Gn}}}Af}{{{b{H`}}{b{H`}}}Af}{{{b{Hb}}{b{Hb}}}Af}{{{b{Hd}}{b{Hd}}}Af}{{{b{Hf}}{b{Hf}}}Af}{{jc}j{{Al{j}}}}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000000000{{JdjAf}j}0{{jJf}j}{{jjIb}j}11`{{jc}j{{Hh{Ej}}}}{{jc}j{{Aj{{Ah{Cj}}}}}}{jj}0{{jjj}j}{{JhCh}j}{{Jh{b{A`}}}j}{{Jh{b{{Ah{c}}}}}j{{Aj{A`}}}};;{{jJj}j}<{{}j}{Adj}77{{}{{Bb{{B`{An}}}}}}8{{jj}j}{{{b{Dd}}{b{C`Jl}}}{{n{fJn}}}}{{{b{En}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Eh}}{b{C`Jl}}}{{n{fJn}}}}{{{b{K`}}{b{C`Jl}}}{{n{fJn}}}}{{{b{j}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Fl}}{b{C`Jl}}}{{n{fJn}}}}{{{b{E`}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{{Bb{c}}}}{b{C`Jl}}}{{n{fJn}}}{}}{{{b{Fn}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{G`}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Gb}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Gd}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Gf}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Cf}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Gh}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Gj}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Gl}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Gn}}{b{C`Jl}}}{{n{fJn}}}}{{{b{H`}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Hb}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Hd}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Hf}}{b{C`Jl}}}{{n{fJn}}}}{{{b{El}}{b{C`Jl}}}{{n{fJn}}}}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}``{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}{{j{Bh{Dl}}}j}{cc{}}00000000000{{{b{A`}}}j}{Kbj}2{Kdj}{Hjj}{Kfj}{I`j}{Dhj}{Efj}{Khj}{Chj}{Kjj}{Afj}{Dlj}=={Cf{{Bb{{B`{Dd}}}}}}{Gf{{Bb{{B`{Dd}}}}}}{Kl{{Bb{{B`{Dd}}}}}}{Gb{{Bb{{B`{Dd}}}}}}{Fn{{Bb{{B`{Dd}}}}}}{Kn{{Bb{{B`{Dd}}}}}}{L`{{Bb{{B`{Dd}}}}}}{Lb{{Bb{{B`{Dd}}}}}}{G`{{Bb{{B`{Dd}}}}}}{cc{}}{Ld{{Bb{{B`{Dd}}}}}}{Lf{{Bb{{B`{Dd}}}}}}222222{KnCf}{GfCf}{FnCf}{G`Cf}666666{HdHb}777{Cj{{Bb{{B`{An}}}}}}``{{jc{Bb{{B`{An}}}}Lh}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}`{{AdjAf}j}{{jc}j{{Al{j}}}}{{Adjj}j}{{jHnHn}j}{{AbjAf}j}43{Fbj}{{{b{Ih}}{b{Lj}}Ll{b{Db}}{b{Db}}}{{Bh{Db}}}}{{{b{An}}{b{Lj}}Ll{b{{Ah{Db}}}}}Db}{{{b{D`}}}Hn}{{{b{Dd}}}{{Bh{{Bb{{B`{An}}}}}}}}{{{b{K`}}{b{Lj}}}{{n{{B`{Lj}}l}}}}99{{{b{h}}}Af}{{{b{Dh}}{b{C`c}}}fLn}{{jDlDlDlDl}j}{{{b{j}}{b{C`c}}}fLn}{{{b{Fl}}{b{C`c}}}fLn}{{{b{E`}}{b{C`c}}}fLn}{{{b{Fn}}{b{C`c}}}fLn}{{{b{G`}}{b{C`c}}}fLn}{{{b{Gb}}{b{C`c}}}fLn}{{{b{Gd}}{b{C`c}}}fLn}{{{b{Gf}}{b{C`c}}}fLn}{{{b{Cf}}{b{C`c}}}fLn}{{{b{Gl}}{b{C`c}}}fLn}{{{b{Gn}}{b{C`c}}}fLn}{{{b{H`}}{b{C`c}}}fLn}{{{b{Hb}}{b{C`c}}}fLn}{{{b{Hd}}{b{C`c}}}fLn}{{{b{Hf}}{b{C`c}}}fLn}{{Adj}j}{{j{Bh{Hn}}}j}{{j{Bh{j}}{Bh{Hn}}AfAf}j}``{jj}{cj{{Aj{{Ah{Ch}}}}}}{{}Hn}000000000000000000000000000000`{{jjChCj}j}{{jjj}j}{{jM`}j}{{jj}j}{ce{}{}}000000000000000000000000000000{{{b{j}}}}{MbAd}{AdAd}{h{{n{{`{Md}}l}}}}{{jccMf}j{{Al{j}}}}{{{b{h}}}Af}{{{b{h}}Af}Af}>>>{{jc}j{{Al{j}}}}????????22?{{AbjAf}j}{{AdjAf}j}{Jhj}{Mhj}{{jAfAf}j}{{}j}{Adj}{jj}210{jAd}{cjMj}{{jI`}j}3;;3;;{{Mhc}j{{Bj{{b{A`}}}{{Bf{{n{Ejl}}}}}}BlBn}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{j{b{C`c}}{b{C`}}}{{n{jl}}}{{Cd{j{b{C`}}}{{Bf{{n{jl}}}}}}}}{{{b{D`}}{Bh{{b{Ej}}}}}{{n{Dbl}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Cj}}}{{Bf{Cj}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Cj}}}{{Bf{Cj}}}}BlBn}}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{{b{Cj}}}}}}}{{Bf{Cj}}}}BlBn}}{{jc}j{{Cd{j}{{Bf{j}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Db}}}{{Bf{Db}}}}BlBn}}{{Mh{B`{Bj}}}j}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{Db}}}}}{{Bf{Db}}}}BlBn}}:{{ce{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}2{{{b{D`}}}{{n{Dbl}}}}{{jMnAf}j}1111{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jMh}`44`{j}{{jc}j{{Al{j}}}}0;{{{b{{Ah{Db}}}}}D`}{c{{Bb{c}}}{}}{{jjj}Gh}{{}Gj}{{{b{A`}}{Dj{Db}}{Bb{{B`{An}}}}c}ElDd}{{{b{j}}{b{C`{N`{{b{j}}}}}}}f}{{j{b{C`{N`{j}}}}}f}=={Chj}>`8{{Ffc}j{{Al{j}}}}{{Fjc}j{{Al{j}}}}{{{b{h}}}{{n{{B`{A`}}l}}}}{{je}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{je{Bh{{Nb{eCl}}}}Hd}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jj}j}{jj}0{{jjHj}j}{{}j}{h{{Dj{j}}}}{{jc}j{{Al{j}}}}{{Mh{b{A`}}}j}05`{{j{Dj{I`}}{Bh{{Dj{Ej}}}}AfAfAf}j}{{jHn{Bh{{Dj{Ej}}}}AfAfAf}j}{{{b{A`}}jNd}j}{{jjNd}j}9{{jNf{Bh{Dl}}}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jAf}j}{{jj}}{{Jh{Dj{Ej}}}j}{{cj}j{{Al{j}}}};{{jcc{Bh{c}}{Bh{Cj}}}j{{Al{j}}}}{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{j{b{{Ah{Ch}}}}Hf}j}`{Abj}{Adj}{jj}00{{jNh}j}{{jjGl}j}0{{j{B`{Bj}}{Bb{{B`{An}}}}Nj}j}{{jHnc}j{{Cd{{b{C`{Nn{Nl}}}}}{{Bf{{Bh{I`}}}}}}BlBnO`}}{{jNj}j}{{jjOb}j}101010{{jNdI`Nj}j}{{jjNdI`Ob}j}{{jHnAf}j}434343{{{b{h}}}{{Dj{{B`{A`}}}}}}{{jKb}j}{{jEf}j}``{{}{{Bb{{B`{An}}}}}}{{jjAfAf{Bh{Dl}}}j}{{AdjAfAf{Bh{Dl}}}j}01{{jcOd}j{{Al{j}}}}``{{{b{Dh}}c}nOf}{{{b{j}}c}nOf}{{{b{Fl}}c}nOf}{{{b{E`}}c}nOf}{{{b{{Bb{{B`{Il}}}}}}c}nOf}{{{b{{Bb{{B`{Dd}}}}}}c}nOf}{{{b{{Bb{Bd}}}}c}nOf}{{{b{Fn}}c}nOf}{{{b{G`}}c}nOf}{{{b{Gb}}c}nOf}{{{b{Gd}}c}nOf}{{{b{Gf}}c}nOf}{{{b{Cf}}c}nOf}{{{b{Gl}}c}nOf}{{{b{Gn}}c}nOf}{{{b{H`}}c}nOf}{{{b{Hb}}c}nOf}{{{b{Hd}}c}nOf}{{{b{Hf}}c}nOf}{{Adc}j{{Al{j}}}}0{{jOh}j}1{{Abj}j}{{Adj}j}{{jj}j}{{jce}j{{Al{j}}}{{Al{j}}}}{jj}{{j{Bh{Dl}}}j}111{{jAf}j}{{Adjj}j}4{{AbCl}j}{{AdCl}j}{{jCl}j}{{jeCn}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jjHjAf}j}8{{AbHj}j}{{AdHj}j}{{jHj}j}{jOj}`{{jCj}j}`{jJh}{{jj}}{{Mh{b{A`}}}j}0{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}{{}{{Bb{{B`{An}}}}}}{{Adj}j}{{j{Bh{Hn}}}j}44{{jjj}j}{{Fdc}Ff{{Al{j}}}}{{Fhc}Fj{{Al{j}}}}{{jjIbId}j}```{{AdHn}j}{{{b{j}}{b{Lj}}Ll}{{n{Dbl}}}}<{Mhj}{{{b{c}}}e{}{}}00000000000000000000000<{{{b{D`}}}{{n{Dbl}}}}{{{b{c}}}Ej{}}0000000{{Ab{Bh{{B`{Bj}}}}}j}{{AdOl{Bh{{B`{Bj}}}}Hn}j}5{{jj}j}{{jcg{Dj{Af}}}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{c{{n{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Cj}}}{{Bf{{n{Cjl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{{Ah{{b{Cj}}}}}}}{{Bf{{n{Cjl}}}}}}}}{{jc}{{n{jl}}}{{Cd{j}{{Bf{{n{jl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Db}}}{{Bf{{n{Dbl}}}}}}}}{{{b{Dd}}{b{C`{Dj{Hj}}}}}{{n{fl}}}}{{{b{c}}}On{}}000000000000000000000000000000`{hj}{{Adc}j{{Al{j}}}}{Abj}{Adj}{jj}02100{{jAfAfEj}j}{{AbHj}j}{{AdHj}j}{{jHj}j}{ce{}{}}000000000000000000000000000000`{cFd{{Al{j}}}}{{Ffc}Fh{{Al{j}}}}{{Fjc}Fh{{Al{j}}}}`{{Ghj}Gh}0{{Gjj}Gj}{{{b{D`}}Cj}{{n{Dbl}}}}{{Jh{Dj{j}}}j}{{Gjjjj}Gj}{{Ghjjj}Gh}1545445454{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{{b{D`}}}{{n{Dbl}}}}76{{GhIf}Gh}{{Gh{Bh{Ej}}}Gh}89{{jc}j{{Al{j}}}}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{DnAf}j}{Dnj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{Dnj}j}{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{Hnf}3{cc{}}87{{}Hn}{ce{}{}}6{c{{n{e}}}{}{}}0{{{b{c}}}On{}}2``{{J`j{Ed{Af}}{Dj{Ef}}A@`}j}{J`j}<;{{J`If}j}1{{J`jIf}j}{{J`Ej}j}333<;:393873333333333{{J`j}j}44{{J`{Bh{Ej}}jA@b}j}15{{J`{b{A`}}}j}65066666662998:6656```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@d}}}A@d}{{{b{c}}{b{C`e}}}f{}{}}{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{c{{n{A@d}}}Ij}{Hnf}{{{b{A@d}}{b{A@d}}}Af}{{{b{A@d}}{b{C`Jl}}}{{n{fJn}}}}0{cc{}}{{{b{A@d}}{b{C`c}}}fLn}{{}Hn}{ce{}{}}{{{b{A@d}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@f}}}A@f}{{{b{c}}{b{C`e}}}f{}{}}{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{c{{n{A@f}}}Ij}{Hnf}{{{b{A@f}}{b{A@f}}}Af}{{{b{A@f}}{b{C`Jl}}}{{n{fJn}}}}0{cc{}}{{{b{A@f}}{b{C`c}}}fLn}{{}Hn}{ce{}{}}{{{b{A@f}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@h}}}A@h}{{{b{c}}{b{C`e}}}f{}{}}{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{c{{n{A@h}}}Ij}{Hnf}{{{b{A@h}}{b{A@h}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{A@h}}{b{C`Jl}}}{{n{fJn}}}}0{cc{}}{{{b{A@h}}{b{C`c}}}fLn}{{}Hn}{ce{}{}}{{{b{A@h}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5``{{}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}`0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjChCj}j}{{cCn}j{{Aj{{Ah{j}}}}}}{cj{{Al{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{jCj}j}{{{b{{Ah{j}}}}}j}2{c{{A@l{{Dj{A@j}}}}}{{AAb{}{{A@n{AA`}}}}}}{cj{{Hh{Ej}}}}{{cAAd}{{A@l{AA`}}}{{Aj{{Ah{AA`}}}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}11{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{jjHj}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jjIbId}j}0{Ghj}{{jjIbId{Bh{If}}{Bh{Ej}}}j}0``{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Gjj}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}``{cj{{Aj{{Ah{Ch}}}}}}{{jjChCj}j}{{jjj}j}{jj}0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{A`}}}j}00```0````2{{jjHj}j}{{{b{A`}}jNd}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{cj}j{{Al{j}}}}{{jjGl}j}0``{{jjHjAf}j}6{{jjIbId}j}0`````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{C`c}}}{{b{C`e}}}{}{}}0{{{b{Mn}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{AAf}}A@j}{{n{A@jl}}}}{{{b{AAf}}}AAf}{{{b{c}}{b{C`e}}}f{}{}}{Hn{{b{c}}}{}}0{Hn{{b{C`c}}}{}}0{c{{n{AAf}}}Ij}{Hnf}0{{{b{AAf}}{b{AAf}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{AAf}}{b{C`Jl}}}{{n{fJn}}}}{cc{}}{{{AAj{AAh}}}AAf}1{{{b{Mn}}}{{Bh{{Bb{{B`{An}}}}}}}}{{}Hn}0{ce{}{}}0{{{AAj{AAh}}{Bh{Cj}}AfAf}Mn}{{{b{AAf}}c}nOf}{{{b{c}}}e{}{}}{c{{n{e}}}{}{}}000{{{b{Mn}}{b{C`{Dj{Hj}}}}}{{n{fl}}}}{{{b{c}}}On{}}066`{{OjAf}j}{Ojj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{OjjAf}j}{{Ojj}j}1{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{Hnf}3{{OjjHn}j}4{{Oj{b{A`}}}{{n{jl}}}}65{cc{}}6;:{{}Hn}{ce{}{}}{{Oj{b{A`}}Af}j}{{Oj{Bh{Cj}}{Bh{Hn}}}j}:>>{{OjHnAAl}j}0{{OjjjAf}j}0{{OjjjAfCh}j}{Ojj}{{Ojjj}j}?;;?;??????{{OjCjGnj}j}{{Ojj}j}{{OjGn}j}{{Oj{Bh{If}}{Bh{Ej}}Gnj}j}{{OjHn}j}{{OjjAf}j}7377{c{{n{e}}}{}{}}0{{{b{c}}}On{}}?6````````````````````{{{b{c}}d}f{}}00000000{{AA`c}{{A@l{A@j}}}{{Bj{AAn{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{Bf{{A@l{f}}}}}}}}{{AA`Af}AA`}{{ABfc}AA`{{Aj{{Ah{j}}}}}}{{ABhAf}ABh}{{{b{ABj}}}Af}{{{B`{ABl}}ABn}{{A@l{AA`}}}}{{AA`AA`cc}AA`{{Al{j}}}}{{ABfcAC`}AA`{{Bj{A@j}{{Bf{{A@l{A@j}}}}}}BlBn}}{{{b{ABj}}}{{b{Df}}}}{{{b{c}}}{{b{e}}}{}{}}000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000{{AA`ACbcCn}AA`{{Aj{{Ah{j}}}}}}{AA`AA`}``{{{b{ACd}}}f}{{AA`{ACf{{b{A`}}Cj}}Af}AA`}{{AA`CjAf}AA`}{{{b{ACd}}}ACd}{{{b{AA`}}}AA`}{{{b{ABf}}}ABf}{{{b{ABn}}}ABn}{{{b{ACh}}}ACh}{{{b{ACj}}}ACj}{{{b{ABj}}}ABj}{{{b{ACl}}}ACl}{{{b{ACn}}}ACn}{{{b{c}}{b{C`e}}}f{}{}}00000000{{{b{AD`}}}{{Bh{{b{ADb}}}}}}0````{{ABhADd}ABh}{AA`{{A@l{A@j}}}}{AA`{{A@l{ACd}}}}````{{{b{AD`}}{Dj{AA`}}}{{A@l{AA`}}}}0{{{b{ACh}}{Dj{AA`}}}{{A@l{AA`}}}}{AA`AA`}{{AA`AA`{Bh{Ej}}}AA`}{{}AA`}{{}ABn}{{}ACj}{{}ACl}{{}ACn}{Hn{{b{c}}}{}}000000000{Hn{{b{C`c}}}{}}000000000{{{b{AA`}}}{{A@l{Ej}}}}000{Hnf}0{{{b{C`ACd}}}f}1{{AA`e}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}}2222222{{AA`{Bh{{Dj{j}}}}}AA`}``{{{b{AA`}}Af}{{A@l{Ej}}}}{{AA`e}AA`{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}``{{{b{ACd}}}{{Bh{{A@l{A@j}}}}}}{{AA`Hn}{{A@l{A@j}}}}{{{b{ACd}}}{{A@l{A@j}}}}``{{AA`c}AA`{{Al{j}}}}0{{AA`j}AA`}{ABhAA`}{AD`{{A@l{AA`}}}}0{ACh{{A@l{AA`}}}}10{ABj{{A@l{AA`}}}}{AA`AA`}{{{b{ACn}}{b{C`Jl}}}{{n{fJn}}}}{{ABhAf}ABh}{cc{}}0{ABfAA`}{IlAA`}22222222{{AA`AA`cc}AA`{{Al{j}}}}{{{b{AA`}}}ACn}{{{b{AD`}}}Af}0{{{b{ACh}}}Af}`{{AA`e}ABf{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{AA`jcADh}ABf{{Aj{{Ah{j}}}}}}1{{ABf{Bh{Hn}}}AA`}`{{ABhADj}ABh}`{{}Hn}0000000008{ce{}{}}000000000{{{b{AD`}}}{{A@l{{Bh{ADl}}}}}}0{{AA`AA`ccADn}AA`{{Aj{{Ah{j}}}}}}{AA`ABh}{{ABhAf}ABh}{AA`AA`}{AE`AA`}1?{{ABhc}ABh{{Aj{{Ah{j}}}}}}{{AA`ACb}AA`}``{{ABjAf}ABj}`{{AA`cAEb{Bh{{B`{K`}}}}{Bh{{b{A`}}}}}AA`{{Bj{A@j}{{Bf{{A@l{A@j}}}}}}BlBn}}{{AA`AAfAEb{Bh{AC`}}Af}AA`}666{{AA`AEd}AA`}`{{AA`AA`{b{A`}}}{{A@l{AA`}}}}8{{{b{AD`}}}{{Bh{Hn}}}}{{{b{ACh}}}{{Bh{Hn}}}}{{{b{ABj}}}{{Bh{Hn}}}}````={cACh{{Aj{AEf}}}}{cABj{{Aj{AEf}}}}{{{B`{{Ah{AEh}}}}}ACh}{{{B`{{Ah{AEh}}}}}ABj}?={{AA`{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{A@l{AAn}}}}`{{{b{AD`}}}{{b{AEf}}}}{{{b{ACh}}}{{b{AEf}}}}{{{b{ABj}}}{{b{AEf}}}}{{{b{AD`}}}{{b{{Ah{AEh}}}}}}{{{b{ACh}}}{{b{{Ah{AEh}}}}}}{{{b{ABj}}}{{b{{Ah{AEh}}}}}}```{AA`{{A@l{{Nb{A@jA@j}}}}}}``{{AA`jNd}AA`}{{{b{AD`}}}Af}{{{b{ACh}}}Af}{{{b{ABj}}}Af}``{{AA`ei}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}{{Aj{A`}}}{{ADf{}{{A@n{g}}}}}}{AA`AA`}{{ABhc}ABh{{Aj{{Ah{j}}}}}}{{AA`jcNh}ABf{{Aj{{Ah{j}}}}}}``{{{b{AD`}}}{{Bh{{b{AEj}}}}}}{{{b{ACh}}}{{Bh{{b{AEj}}}}}}{{{b{ABj}}}{{Bh{{b{AEj}}}}}}```{{{b{ABj}}AEl}{{A@l{A@j}}}}{{LjAEnAf}AA`}{{cACj}{{A@l{AA`}}}{{Aj{AEf}}}}{{{B`{{Ah{AEh}}}}ACj}{{A@l{AA`}}}}{{cACl}{{A@l{AA`}}}{{Aj{AEf}}}}{{{B`{{Ah{AEh}}}}ACl}{{A@l{AA`}}}}{{{b{C`AA`}}}{{A@l{AC`}}}}{{{b{ABj}}{Bh{Hn}}}{{A@l{AC`}}}}`{{{b{C`AA`}}{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{A@l{AC`}}}}{{AA`c}AA`{{Aj{{Ah{j}}}}}}0{{AA`AA`cc}AA`{{Al{j}}}}{{{b{AA`}}{ABb{AB`}}{ABb{ABd}}}f}{{AA`c}AA`{{Al{j}}}}{{AA`ce}AA`{{Al{j}}}{{Al{j}}}}``{{AA`AEhAF`}{{A@l{f}}}}{{AA`AEhAFb}{{A@l{f}}}}{{AA`Ej{Bh{ADb}}AFb}{{A@l{f}}}}{{AA`AEhAFd}{{A@l{f}}}}{{AA`AEhAFf}{{A@l{f}}}}{{AA`Ej{Bh{ADb}}AFf}{{A@l{f}}}}`{{AA`ChACb}AA`}``{{AA`cCn}AA`{{Hh{AFh}}}}{{AA`cCn}AA`{{Aj{{Ah{j}}}}}}{{AA`Hj}AA`}``{{ABhc}ABh{{Aj{A`}}}}{AA`AA`}{{AA`ACb}AA`}{{ABf{Bh{Hn}}}AA`}{AA`{{A@l{AFj}}}}0{{{b{AA`}}Af}{{A@l{Ej}}}}{{{b{c}}}e{}{}}00000000{{AA`ACbcCn}AA`{{Aj{{Ah{j}}}}}}{c{{n{e}}}{}{}}0000000000000000000``{{{b{c}}}On{}}000000000{{AA`{Bh{{Dj{Ej}}}}AFl}AA`}0{{AA`e}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}}`{{ABhAFn}ABh}={ce{}{}}000000000{{ABhAA`}ABh}{{ABj{Bh{AG`}}}ABj}{{AChAf}ACh}{{ACh{Bh{ADb}}}ACh}{{AA`Af}AA`}{{AA`j}AA`}{{AA`c}AA`{{Aj{{Ah{j}}}}}}022{{ACh{Bh{{b{A`}}}}}ACh}{{AA`c}AA`{{Aj{{Ah{AA`}}}}}}6{{ACh{Bh{AC`}}}ACh}{{AChAGb}ACh}{{AChHj}ACh}999{{ABjAf}ABj}{{ACh{Bh{Hn}}}ACh}{{ABj{Bh{Hn}}}ABj}<<{{AD`c}AD`{{Al{{Bh{Hn}}}}}}2{{AChc}ACh{{Al{{Bh{Hn}}}}}}{{ABjc}ABj{{Al{{Bh{Hn}}}}}}3{{ACh{Bh{AGd}}}ACh}{{AA`ACn}AA`}{{AD`AEh}AD`}{{AChAEh}ACh}{{ABjAEh}ABj}{{AD`{B`{{Ah{AEh}}}}}AD`}{{ACh{B`{{Ah{AEh}}}}}ACh}{{ABj{B`{{Ah{AEh}}}}}ABj}{{AA`Af}AA`}0{{ACh{Bh{Hj}}}ACh}{{AChAf}ACh}{{AD`Af}AD`}1{{ABjAf}ABj}4{{AD`c}AD`{{Al{{Bh{AEj}}}}}}{{AA`{b{A`}}{Bh{ACb}}}AA`}{{AChc}ACh{{Al{{Bh{AEj}}}}}}{{ACh{Bh{AEj}}}ACh}{{ABj{Bh{AEj}}}ABj}{{ABjc}ABj{{Al{{Bh{AEj}}}}}}{{ACh{Bh{AC`}}}ACh}{{ABj{Bh{AC`}}}ABj}{{AChc}{{A@l{ACh}}}{{Bj{Lj}{{Bf{{A@l{Lj}}}}}}}}{{AChHj}ACh}>{{AChHn}ACh}0??==?{AA`AA`}{{{b{A@j}}ei{Bh{m}}Af{Bh{j}}{Bh{{b{A`}}}}}{{A@l{A@j}}}{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}{{Aj{A`}}}{{ADf{}{{A@n{g}}}}}{{Aj{A`}}}{{ADf{}{{A@n{k}}}}}}0````{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{Hnf}{{{b{C`AGf}}{b{C`AGh}}}{{A@l{A@j}}}}{{{b{C`AGj}}{b{C`AGh}}}{{A@l{A@j}}}}{cc{}}{{}Hn}{ce{}{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}2{{AAn{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{A@l{{AGl{AGf}}}}}}```````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000{{{b{Ib}}Ch{Bh{{b{AGn}}}}}{{n{Chl}}}}00{{{b{ABl}}}Af}00{{{b{ABl}}}{{b{Df}}}}`{{{b{c}}}{{b{e}}}{}{}}00000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}00000000000000000{{{b{ADh}}}ADh}{{{b{Nh}}}Nh}{{{b{Ib}}}Ib}{{{b{AF`}}}AF`}{{{b{ADn}}}ADn}{{{b{ADj}}}ADj}{{{b{AFn}}}AFn}{{{b{AFb}}}AFb}{{{b{AFd}}}AFd}{{{b{AH`}}}AH`}{{{b{Nf}}}Nf}{{{b{AFf}}}AFf}{{{b{AHb}}}AHb}{{{b{AHd}}}AHd}{{{b{AAd}}}AAd}{{{b{Il}}}Il}{{{b{c}}{b{C`e}}}f{}{}}000000000000000``{{{b{Ib}}{b{Ib}}}AHf}`{{{b{c}}{b{e}}}AHf{}{}}``{{{b{Il}}}{{n{{B`{Lj}}l}}}}`{{{b{Ib}}}Ch}{{{b{Ib}}}Af}{{}ADh}{{}Nh}{{}AF`}{{}ADn}{{}AFn}{{}AFb}{{}AFd}{{}Nf}{{}AFf}{{}AHd}{{}AAd}{{}Il}{Hn{{b{c}}}{}}00000000000000000{Hn{{b{C`c}}}{}}00000000000000000`{{{b{Il}}}{{n{Ejl}}}}0{c{{n{ADh}}}Ij}{c{{n{Nh}}}Ij}{c{{n{Ib}}}Ij}{c{{n{AF`}}}Ij}{c{{n{ADn}}}Ij}{c{{n{ADj}}}Ij}{c{{n{AFn}}}Ij}{c{{n{AFb}}}Ij}{c{{n{AFd}}}Ij}{c{{n{AH`}}}Ij}{c{{n{Nf}}}Ij}{c{{n{AFf}}}Ij}{c{{n{AHb}}}Ij}{c{{n{AHd}}}Ij}{c{{n{AAd}}}Ij}{c{{n{Il}}}Ij}`{{{b{Il}}}{{n{{`{Md}}l}}}}{Hnf}00000000000000000{{{b{ADh}}{b{ADh}}}Af}{{{b{Nh}}{b{Nh}}}Af}{{{b{Ib}}{b{Ib}}}Af}{{{b{AF`}}{b{AF`}}}Af}{{{b{ADn}}{b{ADn}}}Af}{{{b{ADj}}{b{ADj}}}Af}{{{b{AFn}}{b{AFn}}}Af}{{{b{AFb}}{b{AFb}}}Af}{{{b{AFd}}{b{AFd}}}Af}{{{b{AH`}}{b{AH`}}}Af}{{{b{Nf}}{b{Nf}}}Af}{{{b{AFf}}{b{AFf}}}Af}{{{b{AHb}}{b{AHb}}}Af}{{{b{AHd}}{b{AHd}}}Af}{{{b{AAd}}{b{AAd}}}Af}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000`{{{b{ADh}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Nh}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Ib}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{ABl}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AF`}}{b{C`Jl}}}{{n{fJn}}}}{{{b{ADn}}{b{C`Jl}}}{{n{fJn}}}}{{{b{ADj}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{AFn}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{AFb}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AFd}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AH`}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Nf}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AFf}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AHb}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AHd}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AAd}}{b{C`Jl}}}{{n{fJn}}}}`{cc{}}00000{ADjADn}111111111111`{{{b{AHb}}}Cj}{{{b{AHh}}{Dj{Bd}}{b{ADh}}}{{n{{Nb{Bd{Dj{Bd}}AHj}}l}}}}{{{b{ADh}}{b{C`c}}}fLn}{{{b{Nh}}{b{C`c}}}fLn}{{{b{Ib}}{b{C`c}}}fLn}{{{b{AF`}}{b{C`c}}}fLn}{{{b{ADn}}{b{C`c}}}fLn}{{{b{ADj}}{b{C`c}}}fLn}{{{b{AFn}}{b{C`c}}}fLn}{{{b{AFb}}{b{C`c}}}fLn}{{{b{AFd}}{b{C`c}}}fLn}{{{b{AH`}}{b{C`c}}}fLn}{{{b{Nf}}{b{C`c}}}fLn}{{{b{AFf}}{b{C`c}}}fLn}{{{b{AHb}}{b{C`c}}}fLn}{{{b{AHd}}{b{C`c}}}fLn}{{{b{AAd}}{b{C`c}}}fLn}``````{{}Hn}00000000000000000{ce{}{}}00000000000000000{{{b{ADj}}}Af}{{{b{Ib}}{Bh{{b{A`}}}}}Af}{{{b{Ib}}}Af}{{{b{AFn}}{b{ADj}}}{{n{fl}}}}1``{Mjj}{Ibj}{AHlj}{AHbj}````{AHbAHb}`{{{b{Ib}}}Ch}7{{IbCh}Ib}`1{{{b{AFn}}}Af}{Ib}:{ChIb}{ADjADn}````{{{b{A`}}}Ib}`{{{b{Ib}}{b{Ib}}}{{Bh{AHf}}}}````{{{b{AHh}}{Dj{Bd}}{b{Nh}}}{{n{{Nb{Bd{Dj{Bd}}AHj}}l}}}}`{{{b{ABl}}AEl}{{n{A@jl}}}}{{{b{ABl}}{Bh{Hn}}}{{n{{B`{Lj}}l}}}}`{{{b{ADh}}c}nOf}{{{b{Nh}}c}nOf}{{{b{Ib}}c}nOf}{{{b{AF`}}c}nOf}{{{b{ADn}}c}nOf}{{{b{ADj}}c}nOf}{{{b{AFn}}c}nOf}{{{b{AFb}}c}nOf}{{{b{AFd}}c}nOf}{{{b{AH`}}c}nOf}{{{b{Nf}}c}nOf}{{{b{AFf}}c}nOf}{{{b{AHb}}c}nOf}{{{b{AHd}}c}nOf}{{{b{AAd}}c}nOf}{{{b{Il}}c}nOf}`{{{b{ADn}}}Af}````{{{b{ADn}}}{{b{A`}}}}`{Il{{n{AFjl}}}}{{{b{AHb}}}{{Bh{AHn}}}}{{{b{c}}}e{}{}}000000000000000{{{b{c}}}Ej{}}00`{{{b{Ib}}Ch{Bh{{b{AGn}}}}ceg}{{n{Chl}}}{{Bj{Ch}{{Bf{Ch}}}}}{{Bj{Ch}{{Bf{AI`}}}}}{{Bj{AI`}{{Bf{Ch}}}}}}{{{b{Ib}}Ch{Bh{{b{AGn}}}}}{{n{Chl}}}}00{c{{n{e}}}{}{}}00000000000000{AHn{{n{AHbl}}}}111111111111111111111{{{b{c}}}On{}}00000000000000000`{ce{}{}}00000000000000000{{{b{Ib}}}Ch}{{{b{Ib}}}Af}{{ADnADd}ADn}`{{ADn{Bh{Ej}}}ADn}``````````````````````````````````````````````````````````","D":"GEj","p":[[1,"reference"],[5,"Private",3340],[1,"unit"],[5,"MetaNameSpace",6,3341],[6,"Expr",6,3342],[6,"PolarsError",3343],[6,"Result",3344],[1,"str"],[5,"ArrayNameSpace",6,3345],[5,"ListNameSpace",6,3346],[1,"bool"],[1,"slice"],[10,"AsRef",3347],[10,"Into",3347],[10,"FunctionOutputField",6,3348],[5,"Arc",3349],[5,"SpecialEq",6,3348],[5,"Series",3350],[17,"Output"],[6,"Option",3351],[10,"Fn",3352],[10,"Send",3353],[10,"Sync",3353],[0,"mut"],[6,"VisitRecursion",3354],[10,"FnMut",3352],[6,"FunctionExpr",6,3355],[1,"i64"],[6,"DataType",3356],[5,"SortOptions",3357],[5,"SortMultipleOptions",3357],[5,"FieldsMapper",6,3358],[5,"Field",3359],[10,"SeriesUdf",6,3348],[10,"Any",3360],[6,"AggExpr",6,3342],[5,"Vec",3361],[1,"u64"],[5,"BinaryNameSpace",1579,3362],[6,"Operator",6,3342],[10,"Clone",3363],[1,"array"],[1,"i32"],[10,"RenameAliasFn",6,3348],[5,"String",3364],[5,"UserDefinedFunction",6,3365],[10,"SeriesBinaryUdf",6,3348],[6,"CastOptions",3366],[5,"CategoricalNameSpace",6,3367],[5,"When",6,3368],[5,"Then",6,3368],[5,"ChainedWhen",6,3368],[5,"ChainedThen",6,3368],[6,"Excluded",6,3342],[6,"BooleanFunction",6,3369],[6,"CategoricalFunction",6,3370],[6,"TemporalFunction",6,3371],[6,"PowFunction",6,3372],[6,"StringFunction",6,3373],[5,"DatetimeArgs",6,3374],[5,"DurationArgs",6,3374],[5,"RollingCovOptions",6,3375],[5,"StrptimeOptions",6,3375],[5,"JoinOptions",6,3375],[6,"WindowType",6,3375],[6,"WindowMapping",6,3375],[6,"NestedType",6,3375],[10,"IntoVec",3376],[1,"u8"],[10,"ExprEvalExtension",6,3377],[1,"usize"],[1,"f64"],[5,"Duration",2690,3378],[6,"ClosedWindow",3379],[6,"TimeUnit",3380],[10,"BinaryUdfOutputField",6,3348],[10,"Deserializer",3381],[6,"DslPlan",2690,3382],[6,"NullBehavior",3383],[5,"DateLikeNameSpace",1600,3384],[10,"Sized",3353],[10,"ListNameSpaceExtension",6,3385],[5,"EWMOptions",3386],[5,"StructNameSpace",6,3387],[6,"FillNullStrategy",3388],[5,"Formatter",3389],[5,"Error",3389],[10,"UdfSchema",6,3390],[1,"u32"],[1,"i8"],[1,"i16"],[1,"f32"],[1,"u16"],[6,"ListFunction",3391],[6,"BinaryFunction",3392],[6,"BusinessFunction",3393],[6,"StructFunction",3394],[6,"ArrayFunction",3395],[6,"RangeFunction",3396],[5,"FunctionOptions",3397],[5,"Schema",3398],[6,"Context",3382],[10,"Hasher",3399],[6,"InterpolationMethod",3400],[10,"IntoListNameSpace",6,3385],[10,"Display",3389],[6,"ClosedInterval",3401],[5,"ExprNameNameSpace",6,3402],[10,"Literal",2690,3403],[10,"FnOnce",3352],[5,"PythonUdfExpression",2118,3404],[5,"UnitVec",3405],[1,"tuple"],[6,"QuantileInterpolOptions",3406],[5,"RankOptions",2690,3407],[5,"RollingGroupOptions",2690,3408],[5,"RollingOptionsFixedWindow",3409],[5,"Float64Type",3410],[5,"ChunkedArray",3411],[10,"Copy",3353],[5,"RollingOptionsDynamicWindow",3412],[6,"SearchSortedSide",3413],[10,"Serializer",3414],[6,"IsSorted",3415],[5,"StringNameSpace",2163,3416],[6,"ListToStructWidthStrategy",3417],[5,"TypeId",3360],[6,"Roll",3418],[6,"NonExistent",3419],[6,"RollingFunction",1938,3420],[6,"RollingFunctionBy",1970,3421],[6,"TrigonometricFunction",2001,3422],[5,"DataFrame",3423],[8,"PolarsResult",3343],[17,"Item"],[5,"LazyFrame",2230],[10,"IntoParallelIterator",3424],[5,"UnionArgs",2690,3397],[5,"PythonFunction",2118,3404],[5,"PyAny",3425],[5,"Py",3426],[1,"char"],[5,"Node",3427],[6,"IR",3428],[5,"Arena",3427],[6,"AExpr",3429],[5,"LazyGroupBy",2230],[5,"JoinBuilder",2230],[5,"LazyJsonLineReader",2230,3430],[10,"AnonymousScan",2690,3431],[5,"ScanArgsAnonymous",2230,3432],[8,"SchemaRef",3398],[8,"IdxSize",3433],[5,"InProcessQuery",2230,3434],[8,"PlHashMap",3435],[5,"LazyCsvReader",2230,3436],[5,"ScanArgsIpc",2230,3437],[5,"ScanArgsParquet",2230,3438],[5,"OptState",2230,3439],[10,"LazyFileListReader",2230,3440],[5,"CloudOptions",3441],[6,"JoinCoalesce",3442],[10,"IntoIterator",3443],[5,"DynamicGroupOptions",2690,3408],[6,"JoinType",2690,3442],[8,"PathIterator",2230,3440],[5,"JoinArgs",2690,3442],[10,"IntoLazy",2230],[8,"AllowedOptimizations",2230,3439],[5,"MeltArgs",3444],[5,"Path",3445],[5,"PathBuf",3445],[5,"RowIndex",3446],[5,"AnonymousScanArgs",2690,3431],[8,"PyObject",3426],[5,"CsvWriterOptions",2690,3447],[5,"IpcWriterOptions",2690,3448],[5,"JsonWriterOptions",2690,3449],[5,"ParquetWriteOptions",2690,3450],[8,"String",3451],[5,"IRPlan",3428],[6,"UniqueKeepStrategy",3423],[6,"JoinValidation",2690,3442],[8,"NonZeroUsize",3452],[6,"CsvEncoding",3453],[6,"NullValues",3453],[10,"Executor",2673,3454],[5,"ExecutionState",3455],[5,"Dummy",2673,3454],[5,"Box",3456],[6,"Tz",3457],[6,"RankMethod",2690,3407],[6,"LiteralValue",2690,3403],[5,"AnonymousScanOptions",2690,3397],[6,"Ordering",3458],[10,"PolarsTemporalGroupby",2690,3408],[6,"GroupsProxy",3459],[5,"Null",2690,3403],[6,"AnyValue",3460],[5,"NaiveDateTime",3461],[15,"Quantile",1468],[15,"Min",1468],[15,"Max",1468],[15,"IsBetween",1863],[15,"Any",1863],[15,"All",1863],[15,"SortBy",1478],[15,"Filter",1478],[15,"Cast",1478],[15,"Sort",1478],[15,"Gather",1478],[15,"RenameAlias",1478],[15,"Ternary",1478],[15,"Function",1478],[15,"Window",1478],[15,"AnonymousFunction",1478],[15,"Slice",1478],[15,"BinaryExpr",1478],[15,"QCut",1866],[15,"Entropy",1866],[15,"Log",1866],[15,"Hist",1866],[15,"Cut",1866],[15,"Correlation",1866],[15,"Round",1866],[15,"TopK",1866],[15,"TopKBy",1866],[15,"RoundSF",1866],[15,"EwmMeanBy",1866],[15,"Clip",1866],[15,"BackwardFill",1866],[15,"ForwardFill",1866],[15,"Random",1866],[15,"GatherEvery",1866],[15,"ValueCounts",1866],[15,"Rank",1866],[15,"EwmMean",1866],[15,"EwmStd",1866],[15,"EwmVar",1866],[15,"Replace",1866],[15,"CumCount",1866],[15,"CumSum",1866],[15,"CumProd",1866],[15,"CumMin",1866],[15,"CumMax",1866],[15,"ConcatHorizontal",1910],[15,"ConcatVertical",1910],[15,"ExtractGroups",1910],[15,"JsonDecode",1910],[15,"PadStart",1910],[15,"PadEnd",1910],[15,"SplitExact",1910],[15,"Contains",1910],[15,"Find",1910],[15,"Replace",1910],[15,"DatetimeFunction",1930],[15,"GroupBy",3282],[15,"Union",3282],[15,"Sort",3282],[15,"Cache",3282],[15,"ExtContext",3282],[15,"DataFrameScan",3282],[15,"IR",3282],[15,"Select",3282],[15,"HStack",3282],[15,"Scan",3282],[15,"MapFunction",3282],[15,"Filter",3282],[15,"Distinct",3282],[15,"Slice",3282],[15,"Sink",3282],[15,"Join",3282],[15,"HConcat",3282],[15,"PythonScan",3282],[15,"Range",3337]],"r":[[8,3342],[22,3345],[31,3348],[33,3369],[38,3370],[39,3367],[43,3368],[44,3368],[68,3374],[78,3374],[88,3342],[92,3342],[93,3377],[94,3402],[100,3358],[101,3402],[111,3355],[112,3348],[118,3348],[132,3385],[148,3375],[159,3346],[160,3385],[175,3341],[193,3375],[199,3342],[210,3372],[221,3348],[230,3375],[239,3348],[240,3348],[251,3348],[259,3373],[266,3375],[268,3387],[274,3371],[276,3368],[296,3390],[301,3365],[306,3368],[309,3375],[310,3375],[347,3462],[351,3463],[358,3463],[361,3464],[365,3465],[367,3466],[382,3467],[384,3467],[390,3468],[391,3469],[393,3465],[395,3368],[460,3470],[467,3469],[470,3465],[525,3463],[526,3462],[527,3462],[528,3471],[529,3471],[530,3471],[539,3472],[541,3463],[545,3463],[550,3466],[551,3374],[552,3466],[553,3466],[688,3465],[690,3462],[691,3462],[692,3374],[775,3465],[813,3463],[816,3471],[880,3465],[922,3462],[955,3466],[956,3466],[1005,3469],[1007,3469],[1017,3465],[1020,3465],[1024,3403],[1034,3464],[1045,3465],[1048,3465],[1055,3469],[1059,3463],[1060,3469],[1063,3463],[1064,3469],[1072,3469],[1076,3463],[1102,3469],[1104,3465],[1116,3472],[1123,3465],[1126,3469],[1130,3463],[1134,3473],[1146,3472],[1147,3472],[1219,3472],[1227,3465],[1232,3469],[1236,3463],[1242,3368],[1245,3466],[1390,3465],[1437,3368],[1579,3362],[1599,3367],[1600,3384],[1673,3369],[1677,3370],[1723,3355],[1782,3372],[1818,3373],[1829,3371],[1858,3355],[1859,3355],[1860,3355],[1861,3355],[1862,3355],[1932,3370],[1936,3372],[1942,3420],[1974,3421],[2016,3422],[2043,3374],[2044,3374],[2045,3462],[2046,3463],[2048,3463],[2049,3464],[2050,3466],[2051,3467],[2052,3467],[2053,3468],[2054,3469],[2055,3469],[2056,3463],[2057,3462],[2059,3462],[2061,3471],[2064,3471],[2065,3471],[2066,3472],[2067,3463],[2068,3463],[2069,3466],[2070,3466],[2071,3374],[2072,3466],[2073,3466],[2076,3462],[2077,3462],[2078,3374],[2079,3463],[2080,3471],[2083,3462],[2084,3466],[2085,3466],[2086,3469],[2087,3469],[2088,3464],[2089,3469],[2090,3469],[2091,3469],[2095,3469],[2100,3469],[2101,3472],[2102,3469],[2103,3463],[2104,3473],[2105,3472],[2106,3472],[2109,3472],[2110,3469],[2111,3466],[2112,3466],[2118,3404],[2119,3404],[2120,3404],[2121,3404],[2163,3416],[2224,3365],[2230,3439],[2231,3434],[2234,3436],[2235,3440],[2238,3430],[2239,3439],[2240,3440],[2241,3432],[2242,3437],[2243,3438],[2673,3454],[2674,3454],[2689,3474],[2690,3431],[2691,3431],[2692,3397],[2700,3447],[2706,3382],[2707,3378],[2709,3408],[2726,3448],[2728,3442],[2729,3442],[2730,3442],[2731,3449],[2733,3403],[2734,3403],[2740,3403],[2741,3403],[2746,3450],[2747,3408],[2750,3407],[2751,3407],[2752,3408],[2768,3397]],"b":[[558,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[559,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[560,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[635,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[636,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[637,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[695,"impl-Expr"],[696,"impl-PartialEq-for-Expr"],[699,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[700,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[786,"impl-Display-for-Expr"],[787,"impl-Debug-for-Expr"],[789,"impl-Display-for-Operator"],[790,"impl-Debug-for-Operator"],[792,"impl-Display-for-BooleanFunction"],[793,"impl-Debug-for-BooleanFunction"],[794,"impl-Display-for-CategoricalFunction"],[795,"impl-Debug-for-CategoricalFunction"],[796,"impl-Display-for-TemporalFunction"],[797,"impl-Debug-for-TemporalFunction"],[798,"impl-Display-for-PowFunction"],[799,"impl-Debug-for-PowFunction"],[800,"impl-Display-for-StringFunction"],[801,"impl-Debug-for-StringFunction"],[802,"impl-Display-for-FunctionExpr"],[803,"impl-Debug-for-FunctionExpr"],[830,"impl-From%3C%26str%3E-for-Expr"],[831,"impl-From%3Cu32%3E-for-Expr"],[833,"impl-From%3Ci8%3E-for-Expr"],[834,"impl-From%3Cu8%3E-for-Expr"],[835,"impl-From%3Ci16%3E-for-Expr"],[836,"impl-From%3Cf64%3E-for-Expr"],[837,"impl-From%3CAggExpr%3E-for-Expr"],[838,"impl-From%3Ci32%3E-for-Expr"],[839,"impl-From%3Cf32%3E-for-Expr"],[840,"impl-From%3Ci64%3E-for-Expr"],[841,"impl-From%3Cu16%3E-for-Expr"],[842,"impl-From%3Cbool%3E-for-Expr"],[843,"impl-From%3Cu64%3E-for-Expr"],[846,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[847,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[848,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[849,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[850,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[851,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[852,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[853,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[854,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[856,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[857,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[864,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[865,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[866,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[867,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[900,"impl-Expr"],[901,"impl-Hash-for-Expr"],[1184,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1185,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[1186,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1957,"impl-Display-for-RollingFunction"],[1958,"impl-Debug-for-RollingFunction"],[1988,"impl-Display-for-RollingFunctionBy"],[1989,"impl-Debug-for-RollingFunctionBy"],[2030,"impl-Debug-for-TrigonometricFunction"],[2031,"impl-Display-for-TrigonometricFunction"],[2393,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2394,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2630,"impl-LazyCsvReader"],[2631,"impl-LazyFileListReader-for-LazyCsvReader"],[2632,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2633,"impl-LazyJsonLineReader"],[2652,"impl-LazyFileListReader-for-LazyCsvReader"],[2653,"impl-LazyCsvReader"],[2654,"impl-LazyJsonLineReader"],[2655,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3013,"impl-Debug-for-Duration"],[3014,"impl-Display-for-Duration"],[3018,"impl-Debug-for-JoinType"],[3019,"impl-Display-for-JoinType"],[3020,"impl-Display-for-JoinValidation"],[3021,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAF8J8wAEABIAGAAPACkAAgAuABYARgAIAFAABwBZAAIAXgAAAGAAFwB5ABoAlQACAJkABgChAA4AsQAUAMcAAwDMACIA8gAJAP0ADwAOAQUAFgEXAC8BAwA0AQAANgEhAFkBAABeAQAAYQEBAGUBAABrAQAAbQEAAHgBAAB7AQAAggEBAIUBAQCKAQAAjQE9AM0BAADPAQAA0QEBANcBAADeAS8AEQIAACsCDAA5AlEAjQIAAI8CHgCvAgAAsQIAALcCAAC5AhAAywIpAP0CAAAAAwEABgMAAAwDAAAPAx4ALwMAAD8DAQBCAwoATwMIAFkDAQBhAwMAawMAAG8DAABxAwAAdgMBAHsDBQCEAwAAhgMOAJgDAQCcAx4A3wMCAOMDAAD3AwAA/wMAAAwEAAAPBAUAGAQAABsEAAArBAAALgQCADYEAgA6BAMAQwQBAEcEAgBNBAEAWQQAAFsEAQBiBAAAZAQAAGwEAQByBAEAdQQAAHoEAgCUBAUAmwQUALkEAADABAAAxwQAAMwEAADOBAAA0AQAANYEAADbBAAA3QQAAN8EAgDmBBgAAAUIAA0FPQBNBQAATwUgAHwFAAB+BR8AoQUBAKYFAACzBQAAtwUBALwFEwDTBQEA1gUBANkFAQDcBQYA5AVHAC0GAwAyBgIANwYCADwGAwBEBgEATQYCAFMGAABVBgAAYgYAAHEGAwB5Bi4BqQcBAKwHGgDIBwEAywclAPIHAQD1BwYAAAgAAA4IAAAbCAEAIggBAC0IAgAxCAMAOggDAEIIHQBhCAAAYwgCAGgICwB1CAMAfAgCAIIIAACHCAIAjAgBAKwIAwC4CAMAvwgAAMEIDQDSCAEA1ggVAO0IAQDyCBEABgkBAAwJAAATCQAAFgkYADMJAwA4CQYAUwkBAFYJAABaCQEAZgkCAG4JAABwCQoAjAkBAJEJAQCUCQAAlgkAAJsJAQChCQMApgkDAKwJAQCvCQQAvAkDAMkJBADPCQAA0wkCANcJAADZCQAA5AkAAPEJAQD0CR0AFAoJACEKAQAkCgkALwoAADEKAAA5CgEASAoBAE4KAQBRCgEAXQoAAGAKAABuCgQAdAoGAHwKAAB+CgoAjAoAAI8KAgCTCgMAmQoAAJwKAACgCgIApwoAAKkKBgCzCgIAtwoAALoKCADECgIAyQoAAMsKAADRChMA6ApKADcLiwDECxMA3gsAAOsLAADtCxEAAAwAAAMMEQAnDAEAKgwAACwMAAAvDAMANgwFAD0MAQBBDAAAQwwCAEcMAQBLDAIAUQwVAGgMpAA="}],\
["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPKNNNNHNNENNNNHNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNHHNNNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","contains","contains_chunked","contains_chunked","ends_with","ends_with","ends_with_chunked","ends_with_chunked","list","scatter","starts_with","starts_with","starts_with_chunked","starts_with_chunked","strings","AsList","ListNameSpaceImpl","as_list","join_literal","join_literal","join_many","join_many","lst_arg_max","lst_arg_max","lst_arg_min","lst_arg_min","lst_concat","lst_concat","lst_get","lst_get","lst_join","lst_join","lst_lengths","lst_lengths","lst_max","lst_max","lst_mean","lst_mean","lst_median","lst_median","lst_min","lst_min","lst_n_unique","lst_n_unique","lst_reverse","lst_reverse","lst_shift","lst_shift","lst_slice","lst_slice","lst_sort","lst_sort","lst_std","lst_std","lst_sum","lst_sum","lst_unique","lst_unique","lst_unique_stable","lst_unique_stable","lst_var","lst_var","same_type","same_type","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","SeriesJoin","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_create_left_df_from_slice","_create_left_df_from_slice","_finish_join","_finish_left_join","_finish_left_join","_full_join_from_series","_full_join_from_series","_join_suffix_name","_left_join_from_series","_left_join_from_series","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","coalesce","coalesce","cross_join","cross_join","cross_join_dfs","cross_join_dfs","default","default","default","default_join_ids","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","full_join","hash","hash","hash","hash","hash_join_inner","hash_join_inner","hash_join_outer","hash_join_outer","how","init","init","init","init","inner_join","into","into","into","into","is_asof","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","ensure_sorted_arg","ensure_sorted_arg","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","is_sorted","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts","value_counts"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[23,"polars_ops::chunked_array::list"],[72,"polars_ops::chunked_array::strings"],[74,"polars_ops::frame"],[78,"polars_ops::frame::join"],[233,"polars_ops::prelude"],[235,"polars_ops::series"],[286,"polars_ops::chunked_array::binary"],[287,"polars_core::datatypes"],[288,"polars_ops::chunked_array::binary::namespace"],[289,"polars_ops::chunked_array::scatter"],[290,"polars_utils::index"],[291,"polars_core::series"],[292,"polars_error"],[293,"core::marker"],[294,"core::option"],[295,"core::iter::traits::collect"],[296,"polars_ops::chunked_array::list::namespace"],[297,"polars_core::datatypes::aliases"],[298,"polars_core::chunked_array::ops::sort::options"],[299,"polars_core::frame"],[300,"dyn_clone::sealed"],[301,"polars_ops::frame::join::hash_join"],[302,"polars_ops::frame::join::args"],[303,"alloc::string"],[304,"polars_ops::frame::join::cross_join"],[305,"core::fmt"],[306,"core::convert"],[307,"core::hash"],[308,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[309,"polars_arrow::array::primitive"],[310,"core::result"],[311,"core::any"],[312,"polars_ops::series::ops::arg_min_max"],[313,"polars_ops::series::ops"],[314,"polars_core::chunked_array::ops::search_sorted"],[315,"polars_ops::series::ops::various"],[316,"polars_ops::frame::join::general"],[317,"polars_ops::series::ops::clip"],[318,"polars_ops::series::ops::horizontal"],[319,"polars_ops::series::ops::index"],[320,"polars_ops::series::ops::negate"],[321,"polars_ops::series::ops::not"],[322,"polars_ops::series::ops::int_range"]],"i":[0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,0,8,4,4,4,4,0,0,0,16,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,26,0,0,0,27,0,0,36,37,0,0,37,37,0,0,0,0,36,0,0,36,37,0,38,38,38,38,0,33,36,37,38,0,31,31,0,31,31,31,31,0,31,31,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,36,33,39,39,39,39,33,36,38,0,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,33,36,36,36,37,37,37,38,38,38,33,36,37,37,38,38,33,33,36,37,38,44,33,36,37,38,47,47,47,47,33,33,36,37,38,44,33,36,37,38,37,38,44,33,44,38,33,0,33,33,33,33,33,36,37,38,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,33,0,0,54,0,54,54,0,0,0,54,52,52,53,54,54,0,0,0,54,54,0,0,54,54,54,54,55,55,54,54,54,54,54,54,54,54,54,0,55,55,0,0,0,0,0,0,0,54,54,54,54,55,55],"f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}2211```{{{d{B`}}}{{d{Bb}}}}{{{d{Bd}}{d{Bf}}Bh}{{Af{Bj}}}}0{{{d{Bd}}{d{Bj}}Bh}{{Af{Bj}}}}0{{{d{Bd}}}Bl}000{{{d{Bd}}{d{{l{Ad}}}}}{{Af{Bb}}}}0{{{d{Bd}}BnBh}{{Af{Ad}}}}03322{{{d{Bd}}}{{Af{Ad}}}}0{{{d{Bd}}}Ad}00011{{{d{Bd}}}{{Af{Bl}}}}0{{{d{Bd}}}Bb}0{{{d{Bd}}{d{Ad}}}{{Af{Bb}}}}0{{{d{Bd}}BnC`}Bb}0{{{d{Bd}}Cb}{{Af{Bb}}}}0{{{d{Bd}}j}Ad}077{{{d{Bd}}}{{Af{Bb}}}}00011{{{d{Bd}}Bb}Bb}0`{{{d{Cd}}}{{d{Bj}}}}```{{{d{Cf}}}{{d{Ch}}}}```````````````````````{{{d{c}}Cj}Cl{}}000{{Ch{d{{l{{d{Bf}}}}}}{d{{l{{d{Bf}}}}}}{Al{{d{Bf}}}}{d{Ch}}}Ch}{{{d{Cn}}{d{{l{Ab}}}}BhBh}Ch}0`{{{d{Cn}}D`{d{Ch}}Db}{{Af{Ch}}}}0{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}Db}{{Af{Ch}}}}0{{{d{Bf}}{d{Bf}}}Dd}{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}DbBh{Al{{d{{l{{d{Bf}}}}}}}}}{{Af{Ch}}}}0{{{d{c}}}{{d{e}}}{}{}}000{{{d{Dfc}}}{{d{Dfe}}}{}{}}000{{{d{Db}}}Db}{{{d{Dh}}}Dh}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{c}}{d{Dfe}}}Cl{}{}}000{{{d{Dh}}{d{Dj}}}Bh}`{{{d{Dn}}{d{Ch}}{Al{{d{Bf}}}}{Al{{E`{BnC`}}}}}{{Af{Ch}}}}0{{{d{Dn}}{d{Ch}}{Al{{E`{BnC`}}}}Bh}{{Af{{E`{ChCh}}}}}}0{{}Db}{{}Dh}{{}Dl}{{}Eb}{C`{{d{c}}}{}}000{C`{{d{Dfc}}}{}}000{C`Cl}000{{{d{Db}}{d{Db}}}Bh}{{{d{Dh}}{d{Dh}}}Bh}{{{d{Dj}}{d{Dj}}}Bh}{{{d{Dl}}{d{Dl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00000000000{{{d{Db}}{d{DfEd}}}Ef}{{{d{Dh}}{d{DfEd}}}Ef}{{{d{Dj}}{d{DfEd}}}Ef}0{{{d{Dl}}{d{DfEd}}}Ef}0{DjDb}{cc{}}000{{{d{Eh}}{d{Ch}}ee}{{Af{Ch}}}{{Ej{Bf}}}{{An{}{{Aj{c}}}}}}{{{d{Db}}{d{Dfc}}}ClEl}{{{d{Dh}}{d{Dfc}}}ClEl}{{{d{Dj}}{d{Dfc}}}ClEl}{{{d{Dl}}{d{Dfc}}}ClEl}{{{d{En}}{d{Ad}}DlBh}{{Af{{E`{F`Bh}}}}}}0{{{d{En}}{d{Ad}}DlBh}{{Af{{E`{{Fb{Ab}}{Fb{Ab}}}}}}}}0`{{}C`}0007{ce{}{}}000{{{d{Dj}}}Bh}{{{d{Dl}}{d{Dj}}}{{Af{Cl}}}}{{{d{Eh}}{d{Ch}}eeDb}{{Af{Ch}}}{{Ej{Bf}}}{{An{}{{Aj{c}}}}}}`;{{{d{Dl}}}Bh}>{{{d{Ch}}{d{Ch}}Bh}{{Af{D`}}}}{{{d{Db}}}Bh}`{{{d{Db}}}{{d{Bf}}}}`{{{d{c}}}e{}{}}000{{{d{c}}}Dd{}}0{c{{Fd{e}}}{}{}}0000000{{{d{c}}}Ff{}}000`{{DbDh}Db}{{Db{Al{Dd}}}Db}`````````{{{d{c}}Cj}Cl{}}{{{d{Fh}}}{{Al{C`}}}}0{{{d{Fj}}}{{d{Ad}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Fl}}}Fl}{{{d{c}}{d{Dfe}}}Cl{}{}}{{{d{{l{Ad}}}}}{{Af{Ad}}}}{{{d{Ad}}C`}{{Af{Bl}}}}{{}Fl}{C`{{d{c}}}{}}{C`{{d{Dfc}}}{}}{C`Cl}{{{d{Fn}}{d{Bf}}}{{Af{Cl}}}}0{{{d{Fl}}{d{Fl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00{{{d{Fl}}{d{DfEd}}}{{Fd{ClG`}}}}{cc{}}{{{d{Fl}}{d{Dfc}}}ClEl}{{}C`}{ce{}{}}{{{d{Ad}}}Bh}{{{d{Fn}}Cb}{{Af{Bh}}}}0{{{d{{l{Ad}}}}}{{Af{{Al{Ad}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{Bn{d{Bf}}}{{Af{Ad}}}}2{{{d{c}}}e{}{}}{c{{Fd{e}}}{}{}}0{{{d{c}}}Ff{}}{{{d{Fn}}BhBhDd}{{Af{Ch}}}}0","D":"Ef","p":[[10,"AsBinary",4,286],[1,"reference"],[8,"BinaryChunked",287],[10,"BinaryNameSpaceImpl",4,288],[1,"u8"],[1,"slice"],[8,"BooleanChunked",287],[10,"ChunkedSet",4,289],[8,"IdxSize",290],[5,"Series",291],[8,"PolarsResult",292],[10,"Copy",293],[17,"Item"],[6,"Option",294],[10,"IntoIterator",295],[10,"AsList",23],[8,"ListChunked",287],[10,"ListNameSpaceImpl",23,296],[1,"str"],[1,"bool"],[8,"StringChunked",287],[8,"IdxCa",297],[1,"i64"],[1,"usize"],[5,"SortOptions",298],[10,"AsString",72],[10,"IntoDf",74],[5,"DataFrame",299],[5,"Private",300],[1,"unit"],[10,"JoinDispatch",78,301],[8,"LeftJoinIds",78,302],[5,"JoinArgs",78,302],[5,"String",303],[0,"mut"],[6,"JoinCoalesce",78,302],[6,"JoinType",78,302],[6,"JoinValidation",78,302],[10,"CrossJoin",78,304],[1,"tuple"],[8,"ChunkJoinOptIds",78,302],[5,"Formatter",305],[8,"Result",305],[10,"DataFrameJoinOps",78],[10,"AsRef",306],[10,"Hasher",307],[10,"SeriesJoin",78,308],[8,"InnerJoinIds",78,302],[5,"PrimitiveArray",309],[6,"Result",310],[5,"TypeId",311],[10,"ArgAgg",235,312],[10,"SeriesSealed",235,313],[6,"SearchSortedSide",235,314],[10,"SeriesMethods",235,315],[5,"Error",305]],"r":[[4,286],[5,288],[6,289],[24,296],[78,302],[79,302],[82,304],[86,302],[87,302],[88,302],[89,301],[91,302],[92,302],[95,302],[100,308],[105,316],[108,316],[113,316],[141,301],[233,78],[234,74],[236,312],[239,314],[240,315],[241,313],[248,317],[249,317],[250,317],[253,318],[254,319],[270,319],[273,318],[274,318],[275,318],[276,320],[277,321],[278,322],[279,318]],"b":[[172,"impl-Debug-for-JoinType"],[173,"impl-Display-for-JoinType"],[174,"impl-Display-for-JoinValidation"],[175,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPMAEQAAAAgACwABAA8AAwAVAA8AKQA3AGUABQBtABkAiQAoALcADADJAAEAzAAAAM4AHgDuAAUA9gACAPwADgAMAQEAEgEKAA=="}],\
["polars_sql",{"t":"FNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNOONNNNNNOONONNNNOMNNNNNNNNNNNNNNNNNONNNMNNNNNONNNNOMNONNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","__clone_box","allow_group_aware","allow_rename","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_to_supertypes","changes_length","check_lengths","check_lengths","clone","clone","clone_into","clone_into","collect_groups","contains","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt_str","from","from","from","get_udf","get_udf","hash","init","init","init","input_wildcard_expansion","into","into","into","is_groups_sensitive","pass_name_to_apply","register","register","returns_scalar","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","all_functions","all_keywords"],"q":[[0,"polars_sql"],[31,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_sql::context"],[111,"polars_lazy::frame"],[112,"polars_error"],[113,"alloc::string"],[114,"polars_utils::aliases"],[115,"alloc::vec"],[116,"alloc::sync"],[117,"polars_plan::dsl::expr"],[118,"core::convert"],[119,"core::result"],[120,"core::any"],[121,"polars_plan::logical_plan::options"],[122,"polars_plan::logical_plan"],[123,"core::fmt"],[124,"polars_plan::dsl::udf"],[125,"core::option"],[126,"core::hash"],[127,"polars_sql::sql_expr"]],"i":[0,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,0,5,5,5,5,5,5,5,21,0,21,0,0,0,19,21,19,19,22,19,21,22,19,21,19,19,19,19,19,21,19,21,19,13,22,19,22,19,21,22,19,21,22,19,21,19,19,19,19,19,21,19,22,19,21,13,22,19,22,19,21,19,22,19,21,19,19,13,22,19,19,21,22,19,21,22,19,21,22,19,21,22,19,21,0,0],"f":"`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{j}}}j}{{{b{c}}{b{he}}}f{}{}}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{ce{}{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{{{b{c}}}e{}{}}{c{{Bb{e}}}{}{}}0{{{b{c}}}Bd{}}{{{b{hj}}{b{n}}}f}9{{j{Al{Aj}}}j}``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00``{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{{b{c}}{b{he}}}f{}{}}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{{b{c}}{b{e}}}Bh{}{}}00{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00`{ce{}{}}00{{{b{Bf}}}Bh}`{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}`{{{b{c}}}e{}{}}0{c{{Bb{e}}}{}{}}00000{{{b{c}}}Bd{}}00666{{}{{Ah{{b{n}}}}}}0","D":"Dh","p":[[1,"reference"],[5,"Private",109],[1,"unit"],[0,"mut"],[5,"SQLContext",0,110],[1,"usize"],[1,"str"],[5,"LazyFrame",111],[8,"PolarsResult",112],[5,"String",113],[8,"PlHashMap",114],[5,"Vec",115],[10,"FunctionRegistry",31],[5,"Arc",116],[6,"Expr",117],[10,"AsRef",118],[6,"Result",119],[5,"TypeId",120],[5,"FunctionOptions",31,121],[1,"bool"],[6,"Context",31,122],[5,"DefaultFunctionRegistry",31],[5,"Formatter",123],[5,"Error",123],[5,"UserDefinedFunction",124],[6,"Option",125],[10,"Hasher",126]],"r":[[0,110],[23,127],[32,122],[35,121]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEkADAACAAgAEAAAABkAAwAeAAAAIQAAACQAAAAmABEAOgARAFAABABaAAAAXAAAAF4ADQA="}],\
["polars_time",{"t":"PGFPPKKKKKPFCHHMMOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsMonthEnd","PolarsMonthStart","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","month_end","month_start","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","DataPoint","Duration","Friday","Label","Left","Left","Monday","None","Right","Right","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","days","days_only","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","ensure_duration_matches_data_type","ensure_is_constant_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","new","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_us","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[26,"polars_time::chunkedarray"],[28,"polars_time::chunkedarray::string"],[60,"polars_time::chunkedarray::string::infer"],[85,"polars_time::prelude"],[283,"polars_time::series"],[304,"chrono::naive::datetime"],[305,"polars_time::windows::duration"],[306,"polars_time::windows::group_by"],[307,"polars_core::datatypes::time_unit"],[308,"polars_arrow::legacy::time_zone"],[309,"core::option"],[310,"polars_core::chunked_array::logical::datetime"],[311,"polars_error"],[312,"polars_time::month_end"],[313,"polars_time::month_start"],[314,"polars_time::round"],[315,"polars_core::datatypes"],[316,"chrono::naive::time"],[317,"polars_core::chunked_array::logical::time"],[318,"polars_time::truncate"],[319,"polars_time::upsample"],[320,"polars_core::frame"],[321,"alloc::string"],[322,"polars_core::utils"],[323,"dyn_clone::sealed"],[324,"polars_time::chunkedarray::string::patterns"],[325,"core::fmt"],[326,"core::hash"],[327,"core::result"],[328,"core::any"],[329,"core::clone"],[330,"polars_time::windows::bounds"],[331,"polars_time::windows::window"],[332,"core::cmp"],[333,"polars_core::datatypes::dtype"],[334,"polars_core::frame::group_by::proxy"],[335,"alloc::vec"],[336,"core::ops::function"],[337,"polars_core::series"],[338,"polars_time::date_range"]],"i":[5,0,0,5,5,0,0,0,0,0,5,0,0,0,0,12,13,46,4,0,14,0,0,18,19,19,0,0,0,27,27,27,27,27,0,0,27,25,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,27,27,27,27,27,27,27,0,41,0,0,34,34,34,34,34,34,34,34,34,0,34,34,34,34,37,34,34,34,41,34,34,5,0,0,0,44,45,0,45,0,5,44,45,5,5,44,45,0,45,0,45,45,45,0,45,43,4,5,44,45,46,4,4,4,49,43,4,5,44,45,46,49,43,4,5,44,45,46,43,4,5,44,45,46,43,4,5,44,45,46,4,4,4,4,45,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,0,0,4,5,44,45,4,4,4,5,5,5,44,44,44,45,45,45,43,4,4,5,44,45,49,43,4,5,44,45,46,46,46,46,46,0,0,4,5,44,45,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,4,4,4,4,4,4,4,4,4,4,46,49,46,4,4,4,46,46,46,43,4,5,44,45,46,4,4,4,46,4,46,4,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,45,4,4,0,0,57,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59],"f":"`````````````{{{d{b}}ffhjl{A`{{d{n}}}}}{{Ad{Ab}}}}{{{d{f}}}Af}{{{d{Ah}}{A`{{d{n}}}}}{{Ad{Ah}}}}{{{d{Aj}}{A`{{d{n}}}}}{{Ad{Aj}}}}```{{{d{Al}}{d{An}}{A`{{d{n}}}}}{{Ad{Al}}}}`{{{d{b}}B`B`hj}{{Ad{Bb}}}}{{{d{Bd}}{A`{{d{n}}}}{d{An}}}{{Ad{Bd}}}}{{{d{Bf}}c{d{b}}h}{{Ad{Bh}}}{{Bl{Bj}}}}0``````````{{{d{c}}Bn}C`{}}{{{d{Cb}}}{{d{An}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Cdc}}}{{d{Cde}}}{}{}}{{{d{Cf}}}Cf}{{{d{c}}{d{Cde}}}C`{}{}}{Ch{{d{c}}}{}}{Ch{{d{Cdc}}}{}}{ChC`}{{{d{Cf}}{d{Cf}}}Af}{{{d{c}}{d{e}}}Af{}{}}00{{{d{Cf}}{d{CdCj}}}Cl}{cc{}}{{{d{Cf}}{d{Cdc}}}C`Cn}`{{}Ch}{ce{}{}}{{{d{Cf}}{d{b}}}Af}{{{d{c}}}e{}{}}{c{{D`{e}}}{}{}}0{{{d{c}}}Db{}}````{{{d{c}}Bn}C`{}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Cdc}}}{{d{Cde}}}{}{}}{{{d{{Dd{c}}}}}{{Dd{c}}}{DfDh}}{{{d{c}}{d{Cde}}}C`{}{}}{Ch{{d{c}}}{}}{Ch{{d{Cdc}}}{}}{ChC`}?{{{d{b}}}{{A`{Cf}}}}>=`{{{d{Cd{Dd{c}}}}{d{b}}}A`Dh}{{{d{CdDj}}{d{{Dn{Dl}}}}{A`{l}}}{{A`{c}}}{}}`=<{{c{A`{l}}}{{Ad{{Eb{}{{E`{e}}}}}}}{}{}}=<````````````````````````;;;;;;{{{d{h}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}00;;;;;;;:::::::{{{d{Ef}}}Ef}{{{d{h}}}h}{{{d{j}}}j}{{{d{Eh}}}Eh}{{{d{Ej}}}Ej}{{{d{El}}}El}>>>>>>{{{d{h}}{d{h}}}En}{{{d{c}}{d{e}}}En{}{}}{{{d{h}}}Ed}{{{d{h}}}Af}{{}Ej}{Ch{{d{c}}}{}}000000{Ch{{d{Cdc}}}{}}000000{ChC`}000000{{h{d{F`}}{d{b}}}{{Ad{C`}}}}{{h{A`{{d{b}}}}{d{b}}}{{Ad{C`}}}}{{{d{h}}{d{h}}}Af}{{{d{j}}{d{j}}}Af}{{{d{Eh}}{d{Eh}}}Af}{{{d{Ej}}{d{Ej}}}Af}{{{d{c}}{d{e}}}Af{}{}}00000000000{{{d{Ef}}{d{CdCj}}}Cl}{{{d{h}}{d{CdCj}}}Cl}0{{{d{j}}{d{CdCj}}}Cl}{{{d{Eh}}{d{CdCj}}}Cl}{{{d{Ej}}{d{CdCj}}}Cl}{cc{}}000000{{{d{El}}Edj{A`{{d{n}}}}}{{Ad{Ef}}}}00{{{d{El}}Efjl{A`{{d{n}}}}Ej}{{Ad{Fb}}}}{{hh{d{{Dn{Ed}}}}jl{A`{n}}}{{Ad{Fd}}}}{{El{d{{Dn{Ed}}}}jl{d{{A`{Ff}}}}AfAfEj}{{Fj{Fd{Fh{Ed}}{Fh{Ed}}}}}}{{{d{h}}{d{Cdc}}}C`Cn}{{{d{j}}{d{Cdc}}}C`Cn}{{{d{Eh}}{d{Cdc}}}C`Cn}{{{d{Ej}}{d{Cdc}}}C`Cn}{{}Ch}000000{ce{}{}}0000000{{{d{h}}{A`{{d{b}}}}}Af}{{{d{h}}}Af}0{{{d{h}}}Ed}1{{hEd}h}1{hc{}}3{Edh}{{hhh}El}{{{d{CdFb}}}{{A`{c}}}{}}`{{{d{b}}}h}`{{{d{h}}{d{h}}}{{A`{En}}}}{{{d{El}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}00{{{d{c}}}e{}{}}00000{{{d{c}}}Bj{}}{{{d{h}}Ed{A`{{d{n}}}}ceg}{{Ad{Ed}}}{{Fn{Ed}{{Fl{Ed}}}}}{{Fn{Ed}{{Fl{f}}}}}{{Fn{f}{{Fl{Ed}}}}}}{{{d{h}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}40404{c{{D`{e}}}{}{}}0000000000000{{{d{c}}}Db{}}000000{{{d{Ej}}}{{A`{G`}}}}?{{{d{h}}}Af}``{{{d{Gb}}}{{d{Gd}}}}{{{d{Gf}}}{{Ad{Gh}}}}{{{d{Gf}}}{{Ad{Gj}}}}0{{{d{Gf}}}{{Ad{Gl}}}}22112{{{d{Gf}}}{{Ad{Gn}}}}322{{{d{Gf}}{d{b}}}{{Ad{Gd}}}}0334","D":"Gd","p":[[1,"str"],[1,"reference"],[5,"NaiveDateTime",304],[5,"Duration",85,305],[6,"ClosedWindow",85,306],[6,"TimeUnit",307],[6,"Tz",308],[6,"Option",309],[8,"DatetimeChunked",310],[8,"PolarsResult",311],[1,"bool"],[10,"PolarsMonthEnd",0,312],[10,"PolarsMonthStart",0,313],[10,"PolarsRound",0,314],[8,"StringChunked",315],[5,"NaiveTime",316],[8,"TimeChunked",317],[10,"PolarsTruncate",0,318],[10,"PolarsUpsample",0,319],[5,"DataFrame",320],[5,"String",321],[10,"IntoVec",322],[5,"Private",323],[1,"unit"],[10,"AsString",28],[0,"mut"],[6,"Pattern",28,324],[1,"usize"],[5,"Formatter",325],[8,"Result",325],[10,"Hasher",326],[6,"Result",327],[5,"TypeId",328],[5,"DatetimeInfer",60],[10,"Clone",329],[10,"PolarsNumericType",315],[10,"StrpTimeParser",60],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",60],[1,"i64"],[5,"Bounds",85,330],[6,"Label",85,306],[6,"StartBy",85,306],[5,"Window",85,331],[6,"Ordering",332],[6,"DataType",333],[5,"BoundsIter",85,331],[8,"GroupsSlice",334],[8,"TimeZone",333],[5,"Vec",335],[1,"tuple"],[17,"Output"],[10,"Fn",336],[1,"u32"],[10,"AsSeries",283],[5,"Series",337],[10,"TemporalMethods",283],[8,"Int32Chunked",315],[8,"Int8Chunked",315],[8,"BooleanChunked",315],[8,"Int16Chunked",315]],"r":[[1,306],[2,305],[5,312],[6,313],[7,314],[8,318],[9,319],[11,331],[13,338],[14,338],[22,338],[26,28],[34,324],[86,330],[87,331],[88,306],[91,305],[93,306],[101,306],[103,283],[107,331],[170,305],[171,305],[205,306],[206,306]],"b":[[189,"impl-Debug-for-Duration"],[190,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPYAFwAAAAsADwAHABgAAAAbABcANAACADgAEABKAAEATQATAGIACQBtAFUAygAAAMwAAQDQAAoA4gABAOYAAgDqAAAA7QACAPEAAQD2AAgAAAEAAAIBAAAEARoAIwEAAA=="}],\
["polars_utils",{"t":"EECCCCCCCCCCCCCQQQQCCCCCCCQCCCCCCCCCCQQCCRKMMRKIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHKNNNNNKMHHHHFKNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHKKKRKRNNNNMMMHKNNNNMMTRKMMHHFNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","float","floor_divmod","fmt","format_list","format_list_container","format_smartstring","format_tuple","functions","hashing","idx_vec","index","io","iter","macros","matches_any_order","mem","min_max","nulls","ord","partitioned","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","new","new","new","new","new","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","Arena","Node","add","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","compare","default","default","deref","deref","deref_mut","deref_mut","drop","drop","duplicate","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","init","into","into","is_empty","len","new","partial_cmp","pop","replace","replace_with","swap","take","to_owned","to_owned","try_from","try_from","try_into","try_into","try_replace_with","type_id","type_id","version","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","FastCachedFunc","FastFixedCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","from","from","get","get_mut","get_or_insert_with","init","init","insert","into","into","new","new","to_owned","try_from","try_from","try_get_or_insert_with","try_into","try_into","type_id","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","from","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","deref","deref_mut","dirty_hash","dirty_hash","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","default","deref","deref","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from_fallible_iter","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extract","fmt","fmt","from","from","from","get","get_unchecked","idx","init","init","inner","inner_mut","into","into","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","null","null_count","store","to_idx","to_opt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","create_file","open_file","EnumerateIdxTrait","FallibleIterator","FromFallibleIterator","IntoIterCopied","IntoIteratorCopied","OwnedItem","enumerate_idx","enumerate_idx","enumerate_u32","enumerate_u32","from_fallible_iter","get_result","into_iter","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deref_unchecked","drop","fmt","from","from","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","equivalent","equivalent","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[41,"polars_utils::abs_diff"],[45,"polars_utils::aliases"],[61,"polars_utils::arena"],[122,"polars_utils::atomic"],[142,"polars_utils::binary_search"],[144,"polars_utils::cache"],[180,"polars_utils::cell"],[200,"polars_utils::clmul"],[204,"polars_utils::contention_pool"],[219,"polars_utils::cpuid"],[221,"polars_utils::float"],[227,"polars_utils::floor_divmod"],[229,"polars_utils::functions"],[233,"polars_utils::hashing"],[265,"polars_utils::idx_vec"],[309,"polars_utils::index"],[371,"polars_utils::io"],[373,"polars_utils::iter"],[386,"polars_utils::mem"],[387,"polars_utils::min_max"],[394,"polars_utils::nulls"],[399,"polars_utils::ord"],[401,"polars_utils::partitioned"],[420,"polars_utils::slice"],[434,"polars_utils::sort"],[436,"polars_utils::sync"],[459,"polars_utils::sys"],[473,"polars_utils::total_ord"],[523,"polars_utils::unwrap"],[525,"polars_utils::vec"],[538,"num_traits"],[539,"core::cmp"],[540,"core::marker"],[541,"core::fmt"],[542,"core::clone"],[543,"core::option"],[544,"core::hash"],[545,"core::default"],[546,"core::ops::function"],[547,"core::result"],[548,"core::any"],[549,"core::borrow"],[550,"alloc::sync"],[551,"alloc::vec"],[552,"core::convert"],[553,"core::ops::range"],[554,"core::iter::traits::collect"],[555,"polars_utils::iter::fallible"],[556,"core::slice::iter"],[557,"polars_error"],[558,"std::fs"],[559,"std::path"],[560,"polars_utils::iter::enumerate_idx"],[561,"core::error"],[562,"core::iter::traits::iterator"],[563,"hashbrown::map"],[564,"core::mem::maybe_uninit"],[565,"core::slice::index"],[566,"num_traits::cast"],[567,"rayon_core::thread_pool"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,113,0,0,0,0,0,113,10,11,114,115,113,10,11,114,115,0,0,13,15,13,15,13,13,15,13,15,13,15,15,15,13,15,13,15,13,15,13,13,15,15,15,15,15,13,15,13,13,13,13,13,13,15,15,13,15,13,13,13,13,15,13,13,13,13,13,15,13,15,13,15,13,13,15,13,13,13,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,38,35,38,35,35,35,35,38,35,38,35,38,35,38,38,35,35,35,35,38,35,35,38,35,38,35,35,38,35,35,38,35,38,35,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,45,45,45,45,45,0,46,0,0,0,0,0,0,52,52,52,52,52,52,53,52,52,52,52,52,52,52,52,52,0,52,52,52,52,52,52,52,52,52,52,52,52,52,0,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,0,0,0,66,0,0,0,0,64,65,64,65,0,64,65,64,65,64,65,64,65,64,65,64,64,64,64,65,64,65,64,64,65,66,66,64,64,65,64,65,64,65,68,65,64,64,68,64,65,69,65,70,64,64,65,64,65,64,65,64,65,0,0,0,0,0,78,0,78,73,73,73,73,74,59,78,0,0,80,80,80,80,80,80,67,67,0,67,67,0,0,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,0,0,0,0,86,88,88,90,0,91,91,92,92,0,0,0,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,0,0,97,97,97,97,97,97,97,97,97,97,97,97,105,0,0,0,0,105,0,100,100,0,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,105,100,105,93,101,93,93,102,102,93,93,101,100,100,100,100,0,106,0,0,0,108,0,0,108,108,109,110,111,110,112],"f":"```````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}``````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{An}}{Al{An}}}Bd}{{{Al{c}}{Al{e}}}Bd{}{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{An}}{Al{AhBh}}}Bj}{{{Al{{Aj{c}}}}{Al{AhBh}}}Bjl}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Bl{An}}}{{Bl{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Bn{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`C`}{{}Ab}0{ce{}{}}0{{{Al{{Aj{c}}}}}Bf{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Bn{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Cb{{Cf{c}{{Cd{c}}}}}}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCb}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{Ah{Aj{c}}}}Ane}{{Ch{B``}}}Cb{{Cj{c}{{Cd{{Ch{c`}}}}}}}}{{{Al{c}}}Cl{}}0{{{Al{{Aj{c}}}}}Cn{}}{Ab{{Aj{c}}}{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{D`}}}D`}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}D`}{{{Al{D`}}}{{Al{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{AhD`}}}{{Al{Ahc}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{ce{}{}}{{{Al{AhD`}}}B`}{AbD`}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Al{{Db{c}}}}c}AbDd}0``{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Df{ce}}}}}{{Df{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}{{Df{ce}}}{DhDj}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Dl{ceg}}}}cBf}e{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{cc{}}0{{{Al{{Df{eg}}}}{Al{c}}}{{Bn{{Al{g}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}}{{Bn{{Al{Ahg}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{E`{c}}DhDj}{}{{Cf{{Al{e}}}{{Cd{g}}}}}}{{}Ab}0{{{Al{Ah{Df{ce}}}}ce}{{Al{Ahe}}}{DhDj}{}}{ce{}{}}0{{gAb}{{Dl{ceg}}}{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{Ab{{Df{ce}}}{DhDj}{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{Ah{Df{eg}}}}{Al{c}}k}{{Ch{{Al{Ahg}}i}}}{}{{E`{c}}DhDj}{}{}{{Cf{{Al{e}}}{{Cd{{Ch{gi}}}}}}}}11{{{Al{c}}}Cl{}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{}{{Eb{c}}}Cb}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{Edc{}}{c{{Eb{c}}}{}}{{{Al{{Eb{c}}}}}{}Dn}{{{Al{Ah{Eb{c}}}}}{{Al{Ahc}}}Dn}{{}Ab}{ce{}{}}{{{Eb{c}}}c{}}5{{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{EfEf}Ef}0{EfEf}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{{Al{{Eh{c}}}}}cCb}>={Ab{{Eh{c}}}Cb}{{{Al{{Eh{c}}}}c}B`Cb}<<;{{}Bf}0`00{{{Al{Ej}}}Bf}10`{{ElEl}{{En{ElEl}}}}{{{F`{c}}e}{{F`{c}}}Bb{{Cj{c}{{Cd{c}}}}}}{{{Al{{Db{e}}}}{Bn{Ab}}}{{Fb{c}}}Bb{{Fd{{Db{c}}}}}}{{AbAb{Ff{Ab}}}{{Ff{Ab}}}}{{{F`{c}}g}{{Ch{{F`{c}}e}}}Bb{}{{Cj{c}{{Cd{{Ch{ce}}}}}}}}``?>{{{Al{Fh}}}Fh}{{{Al{c}}{Al{Ahe}}}B`{}{}}?>{{{Al{Fj}}}Ef}{{{Al{Fh}}}Ef}?{{{Al{Fh}}{Al{Fh}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Fh}}{Al{AhBh}}}Bj}{cc{}}{{{Al{Fh}}{Al{Ahc}}}B`C`}{{EfAb}Ab}{{}Ab}{ce{}{}}{{{Al{Fh}}}Bf}{{{Bn{{Al{{Db{Fl}}}}}}Ef}Fh}2{{{Al{c}}}e{}{}}{{{Al{Fh}}}c{}};7{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Fhc{}}``{{{Al{Ah{Fn{c}}}}}{{Al{Ah{Db{c}}}}}{}}0{{{Al{{Fn{c}}}}}{{Al{{Db{c}}}}}{}}0{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Fn{c}}}}}Ab{}}{{{Al{{Fn{c}}}}}{{Fn{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}{{Fn{c}}}{}}{{{Al{{Fn{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Ah{Fn{c}}}}}B`{}}{AbB`}{{{Al{{Fn{c}}}}{Al{{Fn{c}}}}}BfG`}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Ah{Fn{c}}}}e}B`{}{{Gd{}{{Gb{c}}}}}}{{{Al{{Fn{c}}}}{Al{AhBh}}}Bjl}{{{Fb{c}}}{{Fn{c}}}{}}{cc{}}{{{Al{{Db{c}}}}}{{Fn{c}}}Bb}{g{{Ch{ic}}}{}{}{{Gf{c}{{Gb{e}}}}}{}}{e{{Fn{c}}}{}{{Gd{}{{Gb{c}}}}}}{{}Ab}{ce{}{}}{{{Al{{Fn{c}}}}}Bf{}}{{{Al{{Fn{c}}}}}{{Gh{c}}}{}}{{{Al{Ah{Fn{c}}}}}{{Gj{c}}}{}}{{{Al{{Fn{c}}}}}Ab{}}{{}{{Fn{c}}}{}}{{{Al{Ah{Fn{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Fn{c}}}}c}B`{}}0{{{Al{Ah{Fn{c}}}}Ab}B`{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Ab{{Fn{c}}}{}}`````````{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Db{Gl}}}}Gl}{{Gn{B`}}}}{{{Al{H`}}}H`}{{{Al{Hb}}}Hb}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{H`}}{Al{H`}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{Hb{{En{GlGl}}}}{{{Al{H`}}{Al{AhBh}}}Bj}{{{Al{Hb}}{Al{AhBh}}}Bj}{cc{}}{GlH`}1{{{Al{{Hd{}{{Gb{c}}}}}}Ab}cHf}0{{{Al{H`}}}Gl}{{}Ab}0`{{{Al{AhHb}}}{{Al{AhEf}}}}{ce{}{}}0{{{Al{Hh}}}Bf}{{{Al{Hb}}}Bf}{{{Al{H`}}}Bf}{{{Al{c}}}Bf{}}{{{Al{Hh}}}Ab}{{}H`}{{}Hb}{{{Al{Hj}}}Ab}{{GlGl}Hb}{{HlEf}Gl}{{{Al{H`}}}{{Bn{Gl}}}}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{c}}}Cl{}}0{c{{Gn{Hn}}}{{Fd{I`}}}}0``````{Ib{{`{IbGl}}}}0{Ib{{`{IbCn}}}}0{g{{Ch{Idc}}}If{}{{Gf{c}{{Gb{e}}}}}}{{{Al{AhGf}}}{{Ch{B`c}}}If}{{{Il{}{{Ih{c}}{Ij{e}}}}}e{}{{In{}{{Gb{c}}}}}}{{{Al{{Db{c}}}}}{{Al{Ah{Db{c}}}}}j}`{{J`J`}J`}000{{{Al{J`}}{Al{J`}}}Bf}0```{{{Al{{Hf{}{{Jb{c}}}}}}}Bf{}}{{{Hf{}{{Jb{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hEj}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Jd{ceg}}}}}{{Al{{Db{{Jf{ceg}}}}}}}{}{}{}}{{{Al{Ah{Jd{ceg}}}}}{{Al{Ah{Fb{{Jf{ceg}}}}}}}{}{}{}}{ce{}{}}{{{Fb{{Jf{ceg}}}}}{{Jd{ceg}}}{}{}{}}{{{Al{{Jd{ceg}}}}Ef}{{Jh{ceg}}}{}{}{}}{{{Al{{Jd{ceg}}}}Ef}{{En{{Jh{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jd{ceg}}}}Ef}{{En{{Jj{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jd{ceg}}}}Ef}{{Jj{ceg}}}{}{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`````{{{Al{Jl}}}{{Al{{Db{{Jn{c}}}}}}}{}}{{{Al{K`}}e}Al{}{{Kb{{Db{c}}}}}}{{{Al{AhK`}}e}{{Al{Ah}}}{}{{Kb{{Db{c}}}}}}{{{Al{Kd}}}Bf}{{{Al{{Db{Fl}}}}}Ef}{{{Al{Kf}}}{{Bn{{Al{c}}}}}{}}0{{{Al{Kh}}{Ff{Ab}}}Kh}0{{e{Al{Ah{Fb{Fl}}}}Ab}{{Al{Ah{Db{g}}}}}{Kjj}{{Gd{}{{Gb{c}}}}}{Klj}}{{{Al{Kn}}{Al{{Db{{En{GlGl}}}}}}{Al{Ah{Fb{Gl}}}}}B`}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{L`{c}}}}}{{L`{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{L`{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{L`{c}}}}{Al{AhBh}}}Bjl}{{}{{L`{c}}}{}}{cc{}}1{{{Al{{L`{c}}}}}{}{}}{{}Ab}{ce{}{}}{{{Al{{L`{c}}}}}Bf{}}55{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}?><{{{Al{Lb}}}Ef}:87443```````21{LdLd}{LfLf}{{{Al{{Lh{c}}}}}{{Lh{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}BdKj}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Lh{c}}}}}EfFj}{AbB`}{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}BfLj}{{{Al{c}}{Al{e}}}Bf{}{}}00{cc{}}{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}BfKj}0{{{Al{{Lh{c}}}}{Al{Ahe}}}B`LlC`}{{}Ab}{ce{}{}}{{{Al{{Lh{c}}}}}BfHf}447{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}{{Bn{Bd}}}Kj}2{{{Al{c}}}e{}{}}{{{Al{{Mb{}{{Ln{c}}{M`{e}}}}}}}c{}{}}{{{Al{Kj}}{Al{Kj}}}Bd}{{{Al{Lj}}{Al{Lj}}}Bf}{{{Al{Kj}}{Al{Kj}}}Bf}0{{{Al{Ll}}{Al{Ahc}}}B`C`}{{{Al{{Db{Ll}}}}{Al{Ahc}}}B`C`}223{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Lh{c}}}eHf{}}`{Mdc{}}``````{{{Al{{Mh{}{{Mf{c}}}}}}g}{{Fb{e}}}{}{}{{Cj{{Al{c}}}{{Cd{e}}}}}}{{{Mh{}{{Mf{c}}}}g}{{Fb{e}}}{}{}{{Cj{c}{{Cd{e}}}}}}{{{Al{AhMj}}Abc}B`j}{Ml{{En{AbAb}}}}{{{Al{AhMn}}c}B`{}}{{{Al{Ml}}}{{En{AbAb}}}}{{AbLf}N`}","D":"Id","p":[[17,"Abs"],[10,"AbsDiff",41],[10,"Num",538],[10,"PartialOrd",539],[10,"Copy",540],[10,"Debug",541],[10,"Send",540],[10,"Sync",540],[1,"usize"],[8,"PlHashMap",45],[8,"PlHashSet",45],[0,"mut"],[5,"Arena",61],[1,"reference"],[5,"Node",61],[1,"unit"],[10,"Clone",542],[6,"Ordering",539],[1,"bool"],[5,"Formatter",541],[8,"Result",541],[1,"array"],[6,"Option",543],[10,"Hasher",544],[10,"Default",545],[17,"Output"],[10,"FnOnce",546],[6,"Result",547],[10,"FnMut",546],[5,"TypeId",548],[1,"u32"],[5,"SyncCounter",122],[1,"slice"],[10,"Ord",539],[5,"FastFixedCache",144],[10,"Hash",544],[10,"Eq",539],[5,"FastCachedFunc",144],[10,"Sized",540],[10,"Borrow",549],[5,"SyncUnsafeCell",180],[1,"never"],[1,"u64"],[5,"LowContentionPool",204],[10,"IsFloat",221],[10,"FloorDivMod",227],[1,"tuple"],[5,"Arc",550],[5,"Vec",551],[10,"AsRef",552],[5,"Range",553],[5,"BytesHash",233],[10,"DirtyHash",233],[1,"u8"],[5,"UnitVec",265],[10,"PartialEq",539],[17,"Item"],[10,"IntoIterator",554],[10,"FallibleIterator",373,555],[5,"Iter",556],[5,"IterMut",556],[8,"IdxSize",309],[8,"PolarsResult",557],[5,"NullableIdxSize",309],[5,"ChunkId",309],[10,"Indexable",309],[10,"IsNull",394],[10,"Bounded",309],[10,"NullCount",309],[10,"ToIdx",309],[5,"File",558],[5,"Path",559],[10,"EnumerateIdxTrait",373,560],[10,"FromFallibleIterator",373,555],[10,"Error",561],[17,"OwnedItem"],[17,"IntoIterCopied"],[10,"IntoIteratorCopied",373],[10,"Iterator",562],[10,"MinMax",387],[17,"Inner"],[5,"PartitionedHashMap",401],[5,"HashMap",563],[5,"RawEntryBuilder",563],[5,"RawEntryBuilderMut",563],[10,"Slice2Uninit",420],[20,"MaybeUninit",564],[10,"GetSaferUnchecked",420],[10,"SliceIndex",565],[10,"SortedSlice",420],[10,"Extrema",420],[10,"SliceAble",420],[10,"TotalOrd",473],[10,"FromPrimitive",566],[5,"ThreadPool",567],[5,"SyncPtr",436],[5,"MemInfo",459],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",473],[10,"TotalEq",473],[10,"TotalHash",473],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",473],[10,"UnwrapUncheckedRelease",523],[17,"ItemIn"],[10,"ConvertVec",525],[10,"ResizeFaster",525],[10,"IntoRawParts",525],[10,"PushUnchecked",525],[10,"CapacityByFactor",525],[10,"InitHashMaps",45],[8,"PlIndexMap",45],[8,"PlIndexSet",45]],"r":[[0,309],[1,309],[373,560],[374,555],[375,555]],"b":[[288,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[290,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAANABNgAAAAgACgBQAF0AAABfAAEAYgACAGcAEwB8AAkAhwAAAIoABACSAA4AowAFAKsACQC2AAEAuQACAL0AAADBAAAAxgAMANQAAQDXAAYA3wAKAOsADgD7AAIA/wALAAwBFQAjAQMAKAEGADABJABWAQAAWAEAAFoBBABhARcAegEAAHwBBgCEAQsAkgEFAJkBAgCdAQ0ArQEEALMBAAC2AQUAvQECAMEBAgDFAQAAxwEFAM4BBADVAQAA1wEDAN8BAwDlAQsA8gEDAPcBFQAOAgQAFAIDABkCAQA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
